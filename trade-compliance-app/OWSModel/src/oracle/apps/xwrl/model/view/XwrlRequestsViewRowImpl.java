package oracle.apps.xwrl.model.view;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.logging.ADFLogger;

import oracle.apps.xwrl.model.entity.XwrlRequestsImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 19 15:14:53 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XwrlRequestsViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_XWRLREQUESTS = 0;
    private static ADFLogger LOGGER = ADFLogger.createADFLogger(XwrlRequestsViewRowImpl.class);

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        MasterId,
        AliasId,
        XrefId,
        ResubmitId,
        SourceTable,
        SourceId,
        WcScreeningRequestId,
        Server,
        JobId,
        Status,
        ErrorCode,
        ErrorMessage,
        CaseId,
        NameScreened,
        DateOfBirth,
        ImoNumber,
        VesselIndicator,
        Path,
        CaseState,
        CaseWorkflow,
        CaseStatus,
        Priority,
        RiskLevel,
        RejectionReason,
        Matches,
        Department,
        Office,
        DocumentType,
        Doctype,
        AssignedTo,
        CountryOfResidence,
        CityOfResidence,
        SubdivisionCityOfResidence,
        ClosedDate,
        LastUpdateDate,
        LastUpdatedBy,
        CreationDate,
        CreatedBy,
        LastUpdateLogin,
        BatchId,
        CountryOfAddress,
        CountryOfNationality,
        CountryOfOperation,
        CountryOfBirth,
        CountryOfRegistration,
        CityOfResidenceId,
        RejectionReasonOthr,
        Opencnt,
        Possiblecnt,
        LegalReviewcnt,
        Departmentext,
        SentToLegalDate,
        AddressConfirmationDate,
        SentToLegalBy,
        Finnumber,
        Corpnumber,
        EsrUserId,
        EsrUserEmailAddress,
        ErbUserId,
        ErbUserEmailAddress,
        Gender,
        PassportNumber,
        PermanentAddress,
        ProvisionalRequest,
        CaseStateAttr,
        CaseWorkFlowAttr,
        CaseStatusAttr,
        PriorityAttr,
        RiskLevelAttr,
        RejectionAttr,
        OfficeAttr,
        DeptAttr,
        CreatedByAttr,
        LastUpdatedByAttr,
        DocTypeAttr,
        RistrictedCountryAttr,
        AssignedToAttr,
        CaseTypeAttr,
        IDType,
        XwrlRequestEntityColumnsView,
        XwrlResponseIndColumnsView,
        XwrlAlertNotesView,
        XwrlCaseNotesView1,
        XwrlResponseRowsView,
        WcMatchesView,
        XwrlRequestIndColumnsView,
        XwrlRequestRowsView,
        XwrlResponseEntityColumnsView,
        WcContentView,
        XwrlCaseDocumentsView1,
        XwrlCaseNotesView,
        XwrlCaseDocumentsView,
        CaseStateLOV1,
        CaseStatusLOV1,
        CaseWorkflowLOV1,
        YesNullLOV1,
        PriorityLOV1,
        RiskLevelLOV1,
        OfficeLOV1,
        CaseDepartmentsLOV1,
        RejectionLOV1,
        CaseAssignmentLOV1,
        CaseDocumentsLOV1,
        CaseTypeLOV1,
        CaseRestrictedCountryLOV1,
        CaseRestrictedCityLOV1,
        FndUsersAllLov1,
        GetCaseDocumentsLOV1,
        IDTypesLOV1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int MASTERID = AttributesEnum.MasterId.index();
    public static final int ALIASID = AttributesEnum.AliasId.index();
    public static final int XREFID = AttributesEnum.XrefId.index();
    public static final int RESUBMITID = AttributesEnum.ResubmitId.index();
    public static final int SOURCETABLE = AttributesEnum.SourceTable.index();
    public static final int SOURCEID = AttributesEnum.SourceId.index();
    public static final int WCSCREENINGREQUESTID = AttributesEnum.WcScreeningRequestId.index();
    public static final int SERVER = AttributesEnum.Server.index();
    public static final int JOBID = AttributesEnum.JobId.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int ERRORCODE = AttributesEnum.ErrorCode.index();
    public static final int ERRORMESSAGE = AttributesEnum.ErrorMessage.index();
    public static final int CASEID = AttributesEnum.CaseId.index();
    public static final int NAMESCREENED = AttributesEnum.NameScreened.index();
    public static final int DATEOFBIRTH = AttributesEnum.DateOfBirth.index();
    public static final int IMONUMBER = AttributesEnum.ImoNumber.index();
    public static final int VESSELINDICATOR = AttributesEnum.VesselIndicator.index();
    public static final int PATH = AttributesEnum.Path.index();
    public static final int CASESTATE = AttributesEnum.CaseState.index();
    public static final int CASEWORKFLOW = AttributesEnum.CaseWorkflow.index();
    public static final int CASESTATUS = AttributesEnum.CaseStatus.index();
    public static final int PRIORITY = AttributesEnum.Priority.index();
    public static final int RISKLEVEL = AttributesEnum.RiskLevel.index();
    public static final int REJECTIONREASON = AttributesEnum.RejectionReason.index();
    public static final int MATCHES = AttributesEnum.Matches.index();
    public static final int DEPARTMENT = AttributesEnum.Department.index();
    public static final int OFFICE = AttributesEnum.Office.index();
    public static final int DOCUMENTTYPE = AttributesEnum.DocumentType.index();
    public static final int DOCTYPE = AttributesEnum.Doctype.index();
    public static final int ASSIGNEDTO = AttributesEnum.AssignedTo.index();
    public static final int COUNTRYOFRESIDENCE = AttributesEnum.CountryOfResidence.index();
    public static final int CITYOFRESIDENCE = AttributesEnum.CityOfResidence.index();
    public static final int SUBDIVISIONCITYOFRESIDENCE = AttributesEnum.SubdivisionCityOfResidence.index();
    public static final int CLOSEDDATE = AttributesEnum.ClosedDate.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int BATCHID = AttributesEnum.BatchId.index();
    public static final int COUNTRYOFADDRESS = AttributesEnum.CountryOfAddress.index();
    public static final int COUNTRYOFNATIONALITY = AttributesEnum.CountryOfNationality.index();
    public static final int COUNTRYOFOPERATION = AttributesEnum.CountryOfOperation.index();
    public static final int COUNTRYOFBIRTH = AttributesEnum.CountryOfBirth.index();
    public static final int COUNTRYOFREGISTRATION = AttributesEnum.CountryOfRegistration.index();
    public static final int CITYOFRESIDENCEID = AttributesEnum.CityOfResidenceId.index();
    public static final int REJECTIONREASONOTHR = AttributesEnum.RejectionReasonOthr.index();
    public static final int OPENCNT = AttributesEnum.Opencnt.index();
    public static final int POSSIBLECNT = AttributesEnum.Possiblecnt.index();
    public static final int LEGALREVIEWCNT = AttributesEnum.LegalReviewcnt.index();
    public static final int DEPARTMENTEXT = AttributesEnum.Departmentext.index();
    public static final int SENTTOLEGALDATE = AttributesEnum.SentToLegalDate.index();
    public static final int ADDRESSCONFIRMATIONDATE = AttributesEnum.AddressConfirmationDate.index();
    public static final int SENTTOLEGALBY = AttributesEnum.SentToLegalBy.index();
    public static final int FINNUMBER = AttributesEnum.Finnumber.index();
    public static final int CORPNUMBER = AttributesEnum.Corpnumber.index();
    public static final int ESRUSERID = AttributesEnum.EsrUserId.index();
    public static final int ESRUSEREMAILADDRESS = AttributesEnum.EsrUserEmailAddress.index();
    public static final int ERBUSERID = AttributesEnum.ErbUserId.index();
    public static final int ERBUSEREMAILADDRESS = AttributesEnum.ErbUserEmailAddress.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int PASSPORTNUMBER = AttributesEnum.PassportNumber.index();
    public static final int PERMANENTADDRESS = AttributesEnum.PermanentAddress.index();
    public static final int PROVISIONALREQUEST = AttributesEnum.ProvisionalRequest.index();
    public static final int CASESTATEATTR = AttributesEnum.CaseStateAttr.index();
    public static final int CASEWORKFLOWATTR = AttributesEnum.CaseWorkFlowAttr.index();
    public static final int CASESTATUSATTR = AttributesEnum.CaseStatusAttr.index();
    public static final int PRIORITYATTR = AttributesEnum.PriorityAttr.index();
    public static final int RISKLEVELATTR = AttributesEnum.RiskLevelAttr.index();
    public static final int REJECTIONATTR = AttributesEnum.RejectionAttr.index();
    public static final int OFFICEATTR = AttributesEnum.OfficeAttr.index();
    public static final int DEPTATTR = AttributesEnum.DeptAttr.index();
    public static final int CREATEDBYATTR = AttributesEnum.CreatedByAttr.index();
    public static final int LASTUPDATEDBYATTR = AttributesEnum.LastUpdatedByAttr.index();
    public static final int DOCTYPEATTR = AttributesEnum.DocTypeAttr.index();
    public static final int RISTRICTEDCOUNTRYATTR = AttributesEnum.RistrictedCountryAttr.index();
    public static final int ASSIGNEDTOATTR = AttributesEnum.AssignedToAttr.index();
    public static final int CASETYPEATTR = AttributesEnum.CaseTypeAttr.index();
    public static final int IDTYPE = AttributesEnum.IDType.index();
    public static final int XWRLREQUESTENTITYCOLUMNSVIEW = AttributesEnum.XwrlRequestEntityColumnsView.index();
    public static final int XWRLRESPONSEINDCOLUMNSVIEW = AttributesEnum.XwrlResponseIndColumnsView.index();
    public static final int XWRLALERTNOTESVIEW = AttributesEnum.XwrlAlertNotesView.index();
    public static final int XWRLCASENOTESVIEW1 = AttributesEnum.XwrlCaseNotesView1.index();
    public static final int XWRLRESPONSEROWSVIEW = AttributesEnum.XwrlResponseRowsView.index();
    public static final int WCMATCHESVIEW = AttributesEnum.WcMatchesView.index();
    public static final int XWRLREQUESTINDCOLUMNSVIEW = AttributesEnum.XwrlRequestIndColumnsView.index();
    public static final int XWRLREQUESTROWSVIEW = AttributesEnum.XwrlRequestRowsView.index();
    public static final int XWRLRESPONSEENTITYCOLUMNSVIEW = AttributesEnum.XwrlResponseEntityColumnsView.index();
    public static final int WCCONTENTVIEW = AttributesEnum.WcContentView.index();
    public static final int XWRLCASEDOCUMENTSVIEW1 = AttributesEnum.XwrlCaseDocumentsView1.index();
    public static final int XWRLCASENOTESVIEW = AttributesEnum.XwrlCaseNotesView.index();
    public static final int XWRLCASEDOCUMENTSVIEW = AttributesEnum.XwrlCaseDocumentsView.index();
    public static final int CASESTATELOV1 = AttributesEnum.CaseStateLOV1.index();
    public static final int CASESTATUSLOV1 = AttributesEnum.CaseStatusLOV1.index();
    public static final int CASEWORKFLOWLOV1 = AttributesEnum.CaseWorkflowLOV1.index();
    public static final int YESNULLLOV1 = AttributesEnum.YesNullLOV1.index();
    public static final int PRIORITYLOV1 = AttributesEnum.PriorityLOV1.index();
    public static final int RISKLEVELLOV1 = AttributesEnum.RiskLevelLOV1.index();
    public static final int OFFICELOV1 = AttributesEnum.OfficeLOV1.index();
    public static final int CASEDEPARTMENTSLOV1 = AttributesEnum.CaseDepartmentsLOV1.index();
    public static final int REJECTIONLOV1 = AttributesEnum.RejectionLOV1.index();
    public static final int CASEASSIGNMENTLOV1 = AttributesEnum.CaseAssignmentLOV1.index();
    public static final int CASEDOCUMENTSLOV1 = AttributesEnum.CaseDocumentsLOV1.index();
    public static final int CASETYPELOV1 = AttributesEnum.CaseTypeLOV1.index();
    public static final int CASERESTRICTEDCOUNTRYLOV1 = AttributesEnum.CaseRestrictedCountryLOV1.index();
    public static final int CASERESTRICTEDCITYLOV1 = AttributesEnum.CaseRestrictedCityLOV1.index();
    public static final int FNDUSERSALLLOV1 = AttributesEnum.FndUsersAllLov1.index();
    public static final int GETCASEDOCUMENTSLOV1 = AttributesEnum.GetCaseDocumentsLOV1.index();
    public static final int IDTYPESLOV1 = AttributesEnum.IDTypesLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XwrlRequestsViewRowImpl() {
    }

    /**
     * Gets XwrlRequests entity object.
     * @return the XwrlRequests
     */
    public XwrlRequestsImpl getXwrlRequests() {
        return (XwrlRequestsImpl) getEntity(ENTITY_XWRLREQUESTS);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MasterId.
     * @return the MasterId
     */
    public BigDecimal getMasterId() {
        return (BigDecimal) getAttributeInternal(MASTERID);
    }

    /**
     * Gets the attribute value for the calculated attribute AliasId.
     * @return the AliasId
     */
    public BigDecimal getAliasId() {
        return (BigDecimal) getAttributeInternal(ALIASID);
    }

    /**
     * Gets the attribute value for the calculated attribute XrefId.
     * @return the XrefId
     */
    public BigDecimal getXrefId() {
        return (BigDecimal) getAttributeInternal(XREFID);
    }

    /**
     * Gets the attribute value for RESUBMIT_ID using the alias name ResubmitId.
     * @return the RESUBMIT_ID
     */
    public BigDecimal getResubmitId() {
        return (BigDecimal) getAttributeInternal(RESUBMITID);
    }

    /**
     * Sets <code>value</code> as attribute value for RESUBMIT_ID using the alias name ResubmitId.
     * @param value value to set the RESUBMIT_ID
     */
    public void setResubmitId(BigDecimal value) {
        setAttributeInternal(RESUBMITID, value);
    }

    /**
     * Gets the attribute value for SOURCE_TABLE using the alias name SourceTable.
     * @return the SOURCE_TABLE
     */
    public String getSourceTable() {
        return (String) getAttributeInternal(SOURCETABLE);
    }

    /**
     * Sets <code>value</code> as attribute value for SOURCE_TABLE using the alias name SourceTable.
     * @param value value to set the SOURCE_TABLE
     */
    public void setSourceTable(String value) {
        setAttributeInternal(SOURCETABLE, value);
    }

    /**
     * Gets the attribute value for SOURCE_ID using the alias name SourceId.
     * @return the SOURCE_ID
     */
    public BigDecimal getSourceId() {
        return (BigDecimal) getAttributeInternal(SOURCEID);
    }

    /**
     * Sets <code>value</code> as attribute value for SOURCE_ID using the alias name SourceId.
     * @param value value to set the SOURCE_ID
     */
    public void setSourceId(BigDecimal value) {
        setAttributeInternal(SOURCEID, value);
    }

    /**
     * Gets the attribute value for WC_SCREENING_REQUEST_ID using the alias name WcScreeningRequestId.
     * @return the WC_SCREENING_REQUEST_ID
     */
    public BigDecimal getWcScreeningRequestId() {
        return (BigDecimal) getAttributeInternal(WCSCREENINGREQUESTID);
    }

    /**
     * Sets <code>value</code> as attribute value for WC_SCREENING_REQUEST_ID using the alias name WcScreeningRequestId.
     * @param value value to set the WC_SCREENING_REQUEST_ID
     */
    public void setWcScreeningRequestId(BigDecimal value) {
        setAttributeInternal(WCSCREENINGREQUESTID, value);
    }

    /**
     * Gets the attribute value for SERVER using the alias name Server.
     * @return the SERVER
     */
    public String getServer() {
        return (String) getAttributeInternal(SERVER);
    }

    /**
     * Sets <code>value</code> as attribute value for SERVER using the alias name Server.
     * @param value value to set the SERVER
     */
    public void setServer(String value) {
        setAttributeInternal(SERVER, value);
    }

    /**
     * Gets the attribute value for JOB_ID using the alias name JobId.
     * @return the JOB_ID
     */
    public String getJobId() {
        return (String) getAttributeInternal(JOBID);
    }

    /**
     * Sets <code>value</code> as attribute value for JOB_ID using the alias name JobId.
     * @param value value to set the JOB_ID
     */
    public void setJobId(String value) {
        setAttributeInternal(JOBID, value);
    }

    /**
     * Gets the attribute value for STATUS using the alias name Status.
     * @return the STATUS
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for STATUS using the alias name Status.
     * @param value value to set the STATUS
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for ERROR_CODE using the alias name ErrorCode.
     * @return the ERROR_CODE
     */
    public String getErrorCode() {
        return (String) getAttributeInternal(ERRORCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for ERROR_CODE using the alias name ErrorCode.
     * @param value value to set the ERROR_CODE
     */
    public void setErrorCode(String value) {
        setAttributeInternal(ERRORCODE, value);
    }

    /**
     * Gets the attribute value for ERROR_MESSAGE using the alias name ErrorMessage.
     * @return the ERROR_MESSAGE
     */
    public String getErrorMessage() {
        return (String) getAttributeInternal(ERRORMESSAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for ERROR_MESSAGE using the alias name ErrorMessage.
     * @param value value to set the ERROR_MESSAGE
     */
    public void setErrorMessage(String value) {
        setAttributeInternal(ERRORMESSAGE, value);
    }

    /**
     * Gets the attribute value for CASE_ID using the alias name CaseId.
     * @return the CASE_ID
     */
    public String getCaseId() {
        return (String) getAttributeInternal(CASEID);
    }

    /**
     * Sets <code>value</code> as attribute value for CASE_ID using the alias name CaseId.
     * @param value value to set the CASE_ID
     */
    public void setCaseId(String value) {
        setAttributeInternal(CASEID, value);
    }

    /**
     * Gets the attribute value for NAME_SCREENED using the alias name NameScreened.
     * @return the NAME_SCREENED
     */
    public String getNameScreened() {
        return (String) getAttributeInternal(NAMESCREENED);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME_SCREENED using the alias name NameScreened.
     * @param value value to set the NAME_SCREENED
     */
    public void setNameScreened(String value) {
        setAttributeInternal(NAMESCREENED, value);
    }

    /**
     * Gets the attribute value for DATE_OF_BIRTH using the alias name DateOfBirth.
     * @return the DATE_OF_BIRTH
     */
    public String getDateOfBirth() {
        return (String) getAttributeInternal(DATEOFBIRTH);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE_OF_BIRTH using the alias name DateOfBirth.
     * @param value value to set the DATE_OF_BIRTH
     */
    public void setDateOfBirth(String value) {
        setAttributeInternal(DATEOFBIRTH, value);
    }

    /**
     * Gets the attribute value for IMO_NUMBER using the alias name ImoNumber.
     * @return the IMO_NUMBER
     */
    public BigDecimal getImoNumber() {
        return (BigDecimal) getAttributeInternal(IMONUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for IMO_NUMBER using the alias name ImoNumber.
     * @param value value to set the IMO_NUMBER
     */
    public void setImoNumber(BigDecimal value) {
        setAttributeInternal(IMONUMBER, value);
    }

    /**
     * Gets the attribute value for VESSEL_INDICATOR using the alias name VesselIndicator.
     * @return the VESSEL_INDICATOR
     */
    public String getVesselIndicator() {
        return (String) getAttributeInternal(VESSELINDICATOR);
    }

    /**
     * Sets <code>value</code> as attribute value for VESSEL_INDICATOR using the alias name VesselIndicator.
     * @param value value to set the VESSEL_INDICATOR
     */
    public void setVesselIndicator(String value) {
        setAttributeInternal(VESSELINDICATOR, value);
    }

    /**
     * Gets the attribute value for PATH using the alias name Path.
     * @return the PATH
     */
    public String getPath() {
        return (String) getAttributeInternal(PATH);
    }

    /**
     * Sets <code>value</code> as attribute value for PATH using the alias name Path.
     * @param value value to set the PATH
     */
    public void setPath(String value) {
        setAttributeInternal(PATH, value);
    }

    /**
     * Gets the attribute value for CASE_STATE using the alias name CaseState.
     * @return the CASE_STATE
     */
    public String getCaseState() {
        return (String) getAttributeInternal(CASESTATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CASE_STATE using the alias name CaseState.
     * @param value value to set the CASE_STATE
     */
    public void setCaseState(String value) {
        setAttributeInternal(CASESTATE, value);
    }

    /**
     * Gets the attribute value for CASE_WORKFLOW using the alias name CaseWorkflow.
     * @return the CASE_WORKFLOW
     */
    public String getCaseWorkflow() {
        return (String) getAttributeInternal(CASEWORKFLOW);
    }

    /**
     * Sets <code>value</code> as attribute value for CASE_WORKFLOW using the alias name CaseWorkflow.
     * @param value value to set the CASE_WORKFLOW
     */
    public void setCaseWorkflow(String value) {
        setAttributeInternal(CASEWORKFLOW, value);
    }

    /**
     * Gets the attribute value for CASE_STATUS using the alias name CaseStatus.
     * @return the CASE_STATUS
     */
    public String getCaseStatus() {
        return (String) getAttributeInternal(CASESTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for CASE_STATUS using the alias name CaseStatus.
     * @param value value to set the CASE_STATUS
     */
    public void setCaseStatus(String value) {
        setAttributeInternal(CASESTATUS, value);
    }

    /**
     * Gets the attribute value for PRIORITY using the alias name Priority.
     * @return the PRIORITY
     */
    public String getPriority() {
        return (String) getAttributeInternal(PRIORITY);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIORITY using the alias name Priority.
     * @param value value to set the PRIORITY
     */
    public void setPriority(String value) {
        setAttributeInternal(PRIORITY, value);
    }

    /**
     * Gets the attribute value for RISK_LEVEL using the alias name RiskLevel.
     * @return the RISK_LEVEL
     */
    public String getRiskLevel() {
        return (String) getAttributeInternal(RISKLEVEL);
    }

    /**
     * Sets <code>value</code> as attribute value for RISK_LEVEL using the alias name RiskLevel.
     * @param value value to set the RISK_LEVEL
     */
    public void setRiskLevel(String value) {
        setAttributeInternal(RISKLEVEL, value);
    }

    /**
     * Gets the attribute value for REJECTION_REASON using the alias name RejectionReason.
     * @return the REJECTION_REASON
     */
    public String getRejectionReason() {
        return (String) getAttributeInternal(REJECTIONREASON);
    }

    /**
     * Sets <code>value</code> as attribute value for REJECTION_REASON using the alias name RejectionReason.
     * @param value value to set the REJECTION_REASON
     */
    public void setRejectionReason(String value) {
        setAttributeInternal(REJECTIONREASON, value);
    }

    /**
     * Gets the attribute value for MATCHES using the alias name Matches.
     * @return the MATCHES
     */
    public BigDecimal getMatches() {
        return (BigDecimal) getAttributeInternal(MATCHES);
    }

    /**
     * Sets <code>value</code> as attribute value for MATCHES using the alias name Matches.
     * @param value value to set the MATCHES
     */
    public void setMatches(BigDecimal value) {
        setAttributeInternal(MATCHES, value);
    }

    /**
     * Gets the attribute value for DEPARTMENT using the alias name Department.
     * @return the DEPARTMENT
     */
    public String getDepartment() {
        return (String) getAttributeInternal(DEPARTMENT);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTMENT using the alias name Department.
     * @param value value to set the DEPARTMENT
     */
    public void setDepartment(String value) {
        setAttributeInternal(DEPARTMENT, value);
    }

    /**
     * Gets the attribute value for OFFICE using the alias name Office.
     * @return the OFFICE
     */
    public String getOffice() {
        return (String) getAttributeInternal(OFFICE);
    }

    /**
     * Sets <code>value</code> as attribute value for OFFICE using the alias name Office.
     * @param value value to set the OFFICE
     */
    public void setOffice(String value) {
        setAttributeInternal(OFFICE, value);
    }

    /**
     * Gets the attribute value for DOCUMENT_TYPE using the alias name DocumentType.
     * @return the DOCUMENT_TYPE
     */
    public String getDocumentType() {
        return (String) getAttributeInternal(DOCUMENTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DOCUMENT_TYPE using the alias name DocumentType.
     * @param value value to set the DOCUMENT_TYPE
     */
    public void setDocumentType(String value) {
        setAttributeInternal(DOCUMENTTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Doctype.
     * @return the Doctype
     */
    public String getDoctype() {
        return (String) getAttributeInternal(DOCTYPE);
    }

    /**
     * Gets the attribute value for ASSIGNED_TO using the alias name AssignedTo.
     * @return the ASSIGNED_TO
     */
    public Long getAssignedTo() {
        return (Long) getAttributeInternal(ASSIGNEDTO);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSIGNED_TO using the alias name AssignedTo.
     * @param value value to set the ASSIGNED_TO
     */
    public void setAssignedTo(Long value) {
        setAttributeInternal(ASSIGNEDTO, value);
    }

    /**
     * Gets the attribute value for COUNTRY_OF_RESIDENCE using the alias name CountryOfResidence.
     * @return the COUNTRY_OF_RESIDENCE
     */
    public String getCountryOfResidence() {
        return (String) getAttributeInternal(COUNTRYOFRESIDENCE);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY_OF_RESIDENCE using the alias name CountryOfResidence.
     * @param value value to set the COUNTRY_OF_RESIDENCE
     */
    public void setCountryOfResidence(String value) {
        setAttributeInternal(COUNTRYOFRESIDENCE, value);
    }

    /**
     * Gets the attribute value for CITY_OF_RESIDENCE using the alias name CityOfResidence.
     * @return the CITY_OF_RESIDENCE
     */
    public String getCityOfResidence() {
        return (String) getAttributeInternal(CITYOFRESIDENCE);
    }

    /**
     * Sets <code>value</code> as attribute value for CITY_OF_RESIDENCE using the alias name CityOfResidence.
     * @param value value to set the CITY_OF_RESIDENCE
     */
    public void setCityOfResidence(String value) {
        setAttributeInternal(CITYOFRESIDENCE, value);
    }

    /**
     * Gets the attribute value for SUBDIVISION_CITY_OF_RESIDENCE using the alias name SubdivisionCityOfResidence.
     * @return the SUBDIVISION_CITY_OF_RESIDENCE
     */
    public String getSubdivisionCityOfResidence() {
        return (String) getAttributeInternal(SUBDIVISIONCITYOFRESIDENCE);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBDIVISION_CITY_OF_RESIDENCE using the alias name SubdivisionCityOfResidence.
     * @param value value to set the SUBDIVISION_CITY_OF_RESIDENCE
     */
    public void setSubdivisionCityOfResidence(String value) {
        setAttributeInternal(SUBDIVISIONCITYOFRESIDENCE, value);
    }

    /**
     * Gets the attribute value for CLOSED_DATE using the alias name ClosedDate.
     * @return the CLOSED_DATE
     */
    public Timestamp getClosedDate() {
        return (Timestamp) getAttributeInternal(CLOSEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CLOSED_DATE using the alias name ClosedDate.
     * @param value value to set the CLOSED_DATE
     */
    public void setClosedDate(Timestamp value) {
        setAttributeInternal(CLOSEDDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Long getLastUpdatedBy() {
        return (Long) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Long value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Long getCreatedBy() {
        return (Long) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Long value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public Long getLastUpdateLogin() {
        return (Long) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(Long value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for BATCH_ID using the alias name BatchId.
     * @return the BATCH_ID
     */
    public BigDecimal getBatchId() {
        return (BigDecimal) getAttributeInternal(BATCHID);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_ID using the alias name BatchId.
     * @param value value to set the BATCH_ID
     */
    public void setBatchId(BigDecimal value) {
        setAttributeInternal(BATCHID, value);
    }

    /**
     * Gets the attribute value for COUNTRY_OF_ADDRESS using the alias name CountryOfAddress.
     * @return the COUNTRY_OF_ADDRESS
     */
    public String getCountryOfAddress() {
        return (String) getAttributeInternal(COUNTRYOFADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY_OF_ADDRESS using the alias name CountryOfAddress.
     * @param value value to set the COUNTRY_OF_ADDRESS
     */
    public void setCountryOfAddress(String value) {
        setAttributeInternal(COUNTRYOFADDRESS, value);
    }

    /**
     * Gets the attribute value for COUNTRY_OF_NATIONALITY using the alias name CountryOfNationality.
     * @return the COUNTRY_OF_NATIONALITY
     */
    public String getCountryOfNationality() {
        return (String) getAttributeInternal(COUNTRYOFNATIONALITY);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY_OF_NATIONALITY using the alias name CountryOfNationality.
     * @param value value to set the COUNTRY_OF_NATIONALITY
     */
    public void setCountryOfNationality(String value) {
        setAttributeInternal(COUNTRYOFNATIONALITY, value);
    }

    /**
     * Gets the attribute value for COUNTRY_OF_OPERATION using the alias name CountryOfOperation.
     * @return the COUNTRY_OF_OPERATION
     */
    public String getCountryOfOperation() {
        return (String) getAttributeInternal(COUNTRYOFOPERATION);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY_OF_OPERATION using the alias name CountryOfOperation.
     * @param value value to set the COUNTRY_OF_OPERATION
     */
    public void setCountryOfOperation(String value) {
        setAttributeInternal(COUNTRYOFOPERATION, value);
    }

    /**
     * Gets the attribute value for COUNTRY_OF_BIRTH using the alias name CountryOfBirth.
     * @return the COUNTRY_OF_BIRTH
     */
    public String getCountryOfBirth() {
        return (String) getAttributeInternal(COUNTRYOFBIRTH);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY_OF_BIRTH using the alias name CountryOfBirth.
     * @param value value to set the COUNTRY_OF_BIRTH
     */
    public void setCountryOfBirth(String value) {
        setAttributeInternal(COUNTRYOFBIRTH, value);
    }

    /**
     * Gets the attribute value for COUNTRY_OF_REGISTRATION using the alias name CountryOfRegistration.
     * @return the COUNTRY_OF_REGISTRATION
     */
    public String getCountryOfRegistration() {
        return (String) getAttributeInternal(COUNTRYOFREGISTRATION);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY_OF_REGISTRATION using the alias name CountryOfRegistration.
     * @param value value to set the COUNTRY_OF_REGISTRATION
     */
    public void setCountryOfRegistration(String value) {
        setAttributeInternal(COUNTRYOFREGISTRATION, value);
    }

    /**
     * Gets the attribute value for CITY_OF_RESIDENCE_ID using the alias name CityOfResidenceId.
     * @return the CITY_OF_RESIDENCE_ID
     */
    public BigDecimal getCityOfResidenceId() {
        return (BigDecimal) getAttributeInternal(CITYOFRESIDENCEID);
    }

    /**
     * Sets <code>value</code> as attribute value for CITY_OF_RESIDENCE_ID using the alias name CityOfResidenceId.
     * @param value value to set the CITY_OF_RESIDENCE_ID
     */
    public void setCityOfResidenceId(BigDecimal value) {
        setAttributeInternal(CITYOFRESIDENCEID, value);
    }

    /**
     * Gets the attribute value for REJECTION_REASON_OTHR using the alias name RejectionReasonOthr.
     * @return the REJECTION_REASON_OTHR
     */
    public String getRejectionReasonOthr() {
        return (String) getAttributeInternal(REJECTIONREASONOTHR);
    }

    /**
     * Sets <code>value</code> as attribute value for REJECTION_REASON_OTHR using the alias name RejectionReasonOthr.
     * @param value value to set the REJECTION_REASON_OTHR
     */
    public void setRejectionReasonOthr(String value) {
        setAttributeInternal(REJECTIONREASONOTHR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Opencnt.
     * @return the Opencnt
     */
    public BigDecimal getOpencnt() {
        return (BigDecimal) getAttributeInternal(OPENCNT);
    }

    /**
     * Gets the attribute value for the calculated attribute Possiblecnt.
     * @return the Possiblecnt
     */
    public BigDecimal getPossiblecnt() {
        return (BigDecimal) getAttributeInternal(POSSIBLECNT);
    }

    /**
     * Gets the attribute value for the calculated attribute LegalReviewcnt.
     * @return the LegalReviewcnt
     */
    public BigDecimal getLegalReviewcnt() {
        return (BigDecimal) getAttributeInternal(LEGALREVIEWCNT);
    }

    /**
     * Gets the attribute value for the calculated attribute Departmentext.
     * @return the Departmentext
     */
    public String getDepartmentext() {
        return (String) getAttributeInternal(DEPARTMENTEXT);
    }

    /**
     * Gets the attribute value for SENT_TO_LEGAL_DATE using the alias name SentToLegalDate.
     * @return the SENT_TO_LEGAL_DATE
     */
    public Timestamp getSentToLegalDate() {
        return (Timestamp) getAttributeInternal(SENTTOLEGALDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for SENT_TO_LEGAL_DATE using the alias name SentToLegalDate.
     * @param value value to set the SENT_TO_LEGAL_DATE
     */
    public void setSentToLegalDate(Timestamp value) {
        setAttributeInternal(SENTTOLEGALDATE, value);
    }

    /**
     * Gets the attribute value for ADDRESS_CONFIRMATION_DATE using the alias name AddressConfirmationDate.
     * @return the ADDRESS_CONFIRMATION_DATE
     */
    public Timestamp getAddressConfirmationDate() {
        return (Timestamp) getAttributeInternal(ADDRESSCONFIRMATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS_CONFIRMATION_DATE using the alias name AddressConfirmationDate.
     * @param value value to set the ADDRESS_CONFIRMATION_DATE
     */
    public void setAddressConfirmationDate(Timestamp value) {
        setAttributeInternal(ADDRESSCONFIRMATIONDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Finnumber.
     * @return the Finnumber
     */
    public BigDecimal getFinnumber() {
        return (BigDecimal) getAttributeInternal(FINNUMBER);
    }

    /**
     * Gets the attribute value for SENT_TO_LEGAL_BY using the alias name SentToLegalBy.
     * @return the SENT_TO_LEGAL_BY
     */
    public Long getSentToLegalBy() {
        return (Long) getAttributeInternal(SENTTOLEGALBY);
    }

    /**
     * Sets <code>value</code> as attribute value for SENT_TO_LEGAL_BY using the alias name SentToLegalBy.
     * @param value value to set the SENT_TO_LEGAL_BY
     */
    public void setSentToLegalBy(Long value) {
        setAttributeInternal(SENTTOLEGALBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Corpnumber.
     * @return the Corpnumber
     */
    public String getCorpnumber() {
        return (String) getAttributeInternal(CORPNUMBER);
    }

    /**
     * Gets the attribute value for the calculated attribute EsrUserEmailAddress.
     * @return the EsrUserEmailAddress
     */
    public String getEsrUserEmailAddress() {
        return (String) getAttributeInternal(ESRUSEREMAILADDRESS);
    }

    /**
     * Gets the attribute value for the calculated attribute EsrUserId.
     * @return the EsrUserId
     */
    public String getEsrUserId() {
        return (String) getAttributeInternal(ESRUSERID);
    }

    /**
     * Gets the attribute value for the calculated attribute ErbUserEmailAddress.
     * @return the ErbUserEmailAddress
     */
    public String getErbUserEmailAddress() {
        return (String) getAttributeInternal(ERBUSEREMAILADDRESS);
    }

    /**
     * Gets the attribute value for the calculated attribute ErbUserId.
     * @return the ErbUserId
     */
    public String getErbUserId() {
        return (String) getAttributeInternal(ERBUSERID);
    }

    /**
     * Gets the attribute value for GENDER using the alias name Gender.
     * @return the GENDER
     */
    public String getGender() {
        return (String) getAttributeInternal(GENDER);
    }

    /**
     * Sets <code>value</code> as attribute value for GENDER using the alias name Gender.
     * @param value value to set the GENDER
     */
    public void setGender(String value) {
        setAttributeInternal(GENDER, value);
    }

    /**
     * Gets the attribute value for PASSPORT_NUMBER using the alias name PassportNumber.
     * @return the PASSPORT_NUMBER
     */
    public String getPassportNumber() {
        return (String) getAttributeInternal(PASSPORTNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for PASSPORT_NUMBER using the alias name PassportNumber.
     * @param value value to set the PASSPORT_NUMBER
     */
    public void setPassportNumber(String value) {
        setAttributeInternal(PASSPORTNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PermanentAddress.
     * @return the PermanentAddress
     */
    public String getPermanentAddress() {
        //System.out.println("getPermanentAddress: "+PERMANENTADDRESS);
        //System.out.println("getPermanentAddress: "+getAttributeInternal(PERMANENTADDRESS));
        return (String) getAttributeInternal(PERMANENTADDRESS);
    }

    /**
     * Gets the attribute value for the calculated attribute ProvisionalRequest.
     * @return the ProvisionalRequest
     */
    public String getProvisionalRequest() {
        //System.out.println("getProvisionalRequest: "+PROVISIONALREQUEST);
        //System.out.println("getProvisionalRequest: "+getAttributeInternal(PROVISIONALREQUEST));
        return (String) getAttributeInternal(PROVISIONALREQUEST);
    }      
    
    /**
     * Gets the attribute value for the calculated attribute CaseStateAttr.
     * @return the CaseStateAttr
     */
    public String getCaseStateAttr() {
            String key = (String) getAttributeInternal(CASESTATE);
            String value = null;

            if (key != null) {
                Row[] rows;
                rows = this.getCaseStateLOV1().getFilteredRows("Optionkey", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Optionvalue");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CaseStateAttr.
     * @param value value to set the  CaseStateAttr
     */
    public void setCaseStateAttr(String value) {
        setAttributeInternal(CASESTATEATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CaseWorkFlowAttr.
     * @return the CaseWorkFlowAttr
     */
    public String getCaseWorkFlowAttr() {
            String key = (String) getAttributeInternal(CASEWORKFLOW);
            String value = null;

            if (key != null) {
                Row[] rows;
                rows = this.getCaseWorkflowLOV1().getFilteredRows("Optionkey", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Optionvalue");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CaseWorkFlowAttr.
     * @param value value to set the  CaseWorkFlowAttr
     */
    public void setCaseWorkFlowAttr(String value) {
        setAttributeInternal(CASEWORKFLOWATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CaseStatusAttr.
     * @return the CaseStatusAttr
     */
    public String getCaseStatusAttr() {
            String key = (String) getAttributeInternal(CASESTATUS);
            String value = null;

            if (key != null) {
                Row[] rows;
                rows = this.getCaseStatusLOV1().getFilteredRows("Optionkey", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Optionvalue");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CaseStatusAttr.
     * @param value value to set the  CaseStatusAttr
     */
    public void setCaseStatusAttr(String value) {
        setAttributeInternal(CASESTATUSATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PriorityAttr.
     * @return the PriorityAttr
     */
    public String getPriorityAttr() {
            String key = (String) getAttributeInternal(PRIORITY);
            String value = null;

            if (key != null) {
                Row[] rows;
                rows = this.getPriorityLOV1().getFilteredRows("Optionkey", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Optionvalue");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PriorityAttr.
     * @param value value to set the  PriorityAttr
     */
    public void setPriorityAttr(String value) {
        setAttributeInternal(PRIORITYATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RiskLevelAttr.
     * @return the RiskLevelAttr
     */
    public String getRiskLevelAttr() {
            String key = (String) getAttributeInternal(RISKLEVEL);
            String value = null;

            if (key != null) {
                Row[] rows;
                rows = this.getRiskLevelLOV1().getFilteredRows("Optionkey", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Optionvalue");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RiskLevelAttr.
     * @param value value to set the  RiskLevelAttr
     */
    public void setRiskLevelAttr(String value) {
        setAttributeInternal(RISKLEVELATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RejectionAttr.
     * @return the RejectionAttr
     */
    public String getRejectionAttr() {
            String key = (String) getAttributeInternal(REJECTIONREASON);
            String value = null;

            if (key != null) {
                Row[] rows;
                rows = this.getRejectionLOV1().getFilteredRows("Optionkey", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Optionvalue");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RejectionAttr.
     * @param value value to set the  RejectionAttr
     */
    public void setRejectionAttr(String value) {
        setAttributeInternal(REJECTIONATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OfficeAttr.
     * @return the OfficeAttr
     */
    public String getOfficeAttr() {
            String key = (String) getAttributeInternal(OFFICE);
            String value = null;

            if (key != null) {
                Row[] rows;
                rows = this.getOfficeLOV1().getFilteredRows("Optionkey", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Optionvalue");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OfficeAttr.
     * @param value value to set the  OfficeAttr
     */
    public void setOfficeAttr(String value) {
        setAttributeInternal(OFFICEATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DeptAttr.
     * @return the DeptAttr
     */
    public String getDeptAttr() {
            String key = (String) getAttributeInternal(DEPARTMENT);
            String value = null;

            if (key != null) {
                Row[] rows;
                rows = this.getCaseDepartmentsLOV1().getFilteredRows("Optionkey", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Optionvalue");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DeptAttr.
     * @param value value to set the  DeptAttr
     */
    public void setDeptAttr(String value) {
        setAttributeInternal(DEPTATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreatedByAttr.
     * @return the CreatedByAttr
     */
    public String getCreatedByAttr() {
            Long key = (Long) getAttributeInternal(CREATEDBY);
            String value = null;

            if (key != null) 
            {
                Row[] rows;
                rows = this.getFndUsersAllLov1().getFilteredRows("UserId", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Description");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreatedByAttr.
     * @param value value to set the  CreatedByAttr
     */
    public void setCreatedByAttr(String value) {
        setAttributeInternal(CREATEDBYATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastUpdatedByAttr.
     * @return the LastUpdatedByAttr
     */
    public String getLastUpdatedByAttr() { 
            Long key = (Long) getAttributeInternal(LASTUPDATEDBY);
            String value = null;

            if (key != null) {
                Row[] rows;
                rows = this.getFndUsersAllLov1().getFilteredRows("UserId", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Description");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdatedByAttr.
     * @param value value to set the  LastUpdatedByAttr
     */
    public void setLastUpdatedByAttr(String value) {
        setAttributeInternal(LASTUPDATEDBYATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocTypeAttr.
     * @return the DocTypeAttr
     */
    public String getDocTypeAttr() {
            String key = (String) getAttributeInternal(DOCUMENTTYPE);
            String value = null;

            if (key != null) {
                Row[] rows;
                rows = this.getCaseDocumentsLOV1().getFilteredRows("Optionkey", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Optionvalue");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocTypeAttr.
     * @param value value to set the  DocTypeAttr
     */
    public void setDocTypeAttr(String value) {
        setAttributeInternal(DOCTYPEATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RistrictedCountryAttr.
     * @return the RistrictedCountryAttr
     */
    public String getRistrictedCountryAttr() {
            String key = (String) getAttributeInternal(COUNTRYOFRESIDENCE);
            String value = null;

            if (key != null) {
                Row[] rows;
                rows = this.getCaseRestrictedCountryLOV1().getFilteredRows("Optionkey", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Optionvalue");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RistrictedCountryAttr.
     * @param value value to set the  RistrictedCountryAttr
     */
    public void setRistrictedCountryAttr(String value) {
        setAttributeInternal(RISTRICTEDCOUNTRYATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AssignedToAttr.
     * @return the AssignedToAttr
     */
    public String getAssignedToAttr() {
            Long key = (Long) getAttributeInternal(ASSIGNEDTO);
            String value = null;

            if (key != null) {
                Row[] rows;
                rows = this.getCaseAssignmentLOV1().getFilteredRows("UserId", key);
                if (rows.length > 0) {
                    value = (String) rows[0].getAttribute("Description");
                }
            }

            return value;
        }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AssignedToAttr.
     * @param value value to set the  AssignedToAttr
     */
    public void setAssignedToAttr(String value) {
        setAttributeInternal(ASSIGNEDTOATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CaseTypeAttr.
     * @return the CaseTypeAttr
     */
    public String getCaseTypeAttr() {
        return (String) getAttributeInternal(CASETYPEATTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CaseTypeAttr.
     * @param value value to set the  CaseTypeAttr
     */
    public void setCaseTypeAttr(String value) {
        setAttributeInternal(CASETYPEATTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IDType.
     * @return the IDType
     */
    public String getIDType() {
        return (String) getAttributeInternal(IDTYPE);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlRequestEntityColumnsView.
     */
    public RowIterator getXwrlRequestEntityColumnsView() {
        return (RowIterator) getAttributeInternal(XWRLREQUESTENTITYCOLUMNSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlResponseIndColumnsView.
     */
    public RowIterator getXwrlResponseIndColumnsView() {
        return (RowIterator) getAttributeInternal(XWRLRESPONSEINDCOLUMNSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlAlertNotesView.
     */
    public RowIterator getXwrlAlertNotesView() {
        return (RowIterator) getAttributeInternal(XWRLALERTNOTESVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlCaseNotesView1.
     */
    public RowIterator getXwrlCaseNotesView1() {
        return (RowIterator) getAttributeInternal(XWRLCASENOTESVIEW1);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlResponseRowsView.
     */
    public RowIterator getXwrlResponseRowsView() {
        return (RowIterator) getAttributeInternal(XWRLRESPONSEROWSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link WcMatchesView.
     */
    public RowIterator getWcMatchesView() {
        return (RowIterator) getAttributeInternal(WCMATCHESVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlRequestIndColumnsView.
     */
    public RowIterator getXwrlRequestIndColumnsView() {
        return (RowIterator) getAttributeInternal(XWRLREQUESTINDCOLUMNSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlRequestRowsView.
     */
    public RowIterator getXwrlRequestRowsView() {
        return (RowIterator) getAttributeInternal(XWRLREQUESTROWSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlResponseEntityColumnsView.
     */
    public RowIterator getXwrlResponseEntityColumnsView() {
        return (RowIterator) getAttributeInternal(XWRLRESPONSEENTITYCOLUMNSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link WcContentView.
     */
    public RowIterator getWcContentView() {
        return (RowIterator) getAttributeInternal(WCCONTENTVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlCaseDocumentsView1.
     */
    public RowIterator getXwrlCaseDocumentsView1() {
        return (RowIterator) getAttributeInternal(XWRLCASEDOCUMENTSVIEW1);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlCaseNotesView.
     */
    public RowIterator getXwrlCaseNotesView() {
        return (RowIterator) getAttributeInternal(XWRLCASENOTESVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CaseStateLOV1.
     */
    public RowSet getCaseStateLOV1() {
        return (RowSet) getAttributeInternal(CASESTATELOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CaseStatusLOV1.
     */
    public RowSet getCaseStatusLOV1() {
        return (RowSet) getAttributeInternal(CASESTATUSLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CaseWorkflowLOV1.
     */
    public RowSet getCaseWorkflowLOV1() {
        return (RowSet) getAttributeInternal(CASEWORKFLOWLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YesNullLOV1.
     */
    public RowSet getYesNullLOV1() {
        return (RowSet) getAttributeInternal(YESNULLLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PriorityLOV1.
     */
    public RowSet getPriorityLOV1() {
        return (RowSet) getAttributeInternal(PRIORITYLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RiskLevelLOV1.
     */
    public RowSet getRiskLevelLOV1() {
        return (RowSet) getAttributeInternal(RISKLEVELLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OfficeLOV1.
     */
    public RowSet getOfficeLOV1() {
        return (RowSet) getAttributeInternal(OFFICELOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CaseDepartmentsLOV1.
     */
    public RowSet getCaseDepartmentsLOV1() {
        return (RowSet) getAttributeInternal(CASEDEPARTMENTSLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RejectionLOV1.
     */
    public RowSet getRejectionLOV1() {
        return (RowSet) getAttributeInternal(REJECTIONLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CaseAssignmentLOV1.
     */
    public RowSet getCaseAssignmentLOV1() {
        return (RowSet) getAttributeInternal(CASEASSIGNMENTLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CaseDocumentsLOV1.
     */
    public RowSet getCaseDocumentsLOV1() {
        return (RowSet) getAttributeInternal(CASEDOCUMENTSLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CaseTypeLOV1.
     */
    public RowSet getCaseTypeLOV1() {
        return (RowSet) getAttributeInternal(CASETYPELOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CaseRestrictedCountryLOV1.
     */
    public RowSet getCaseRestrictedCountryLOV1() {
        return (RowSet) getAttributeInternal(CASERESTRICTEDCOUNTRYLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CaseRestrictedCityLOV1.
     */
    public RowSet getCaseRestrictedCityLOV1() {
        return (RowSet) getAttributeInternal(CASERESTRICTEDCITYLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> FndUsersAllLov1.
     */
    public RowSet getFndUsersAllLov1() {
        return (RowSet) getAttributeInternal(FNDUSERSALLLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GetCaseDocumentsLOV1.
     */
    public RowSet getGetCaseDocumentsLOV1() {
        return (RowSet) getAttributeInternal(GETCASEDOCUMENTSLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> IDTypesLOV1.
     */
    public RowSet getIDTypesLOV1() {
        return (RowSet) getAttributeInternal(IDTYPESLOV1);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlCaseDocumentsView.
     */
    public RowIterator getXwrlCaseDocumentsView() {
        return (RowIterator) getAttributeInternal(XWRLCASEDOCUMENTSVIEW);
    }
    public void restrictCity() 
    {
        String str = "";
        
        try {
            if (getCountryOfResidence() == null) {
                str = "TST";
            } else {
                str = getCountryOfResidence();
            }

            LOGGER.finest("getCountryOfResidence::" + getCountryOfResidence());
            getCaseRestrictedCityLOV1().ensureVariableManager().setVariableValue("varCountryCode", str);
            getCaseRestrictedCityLOV1().executeQuery();

            LOGGER.finest("count::" + getCaseRestrictedCityLOV1().getEstimatedRowCount());
        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
    }
    
    public long executeDocType(String dept, String priority) 
    {
        try {
            getCaseDocumentsLOV1().ensureVariableManager().setVariableValue("pDept", dept);
            getCaseDocumentsLOV1().ensureVariableManager().setVariableValue("pPriority", priority);
            getCaseDocumentsLOV1().executeQuery();

            LOGGER.finest("count::" + getCaseDocumentsLOV1().getEstimatedRowCount());
        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
        
        return getCaseDocumentsLOV1().getEstimatedRowCount();
    }
}

