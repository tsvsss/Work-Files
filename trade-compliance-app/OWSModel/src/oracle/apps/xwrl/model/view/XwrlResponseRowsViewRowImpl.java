package oracle.apps.xwrl.model.view;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Oct 27 14:16:39 EDT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XwrlResponseRowsViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_XWRLRESPONSEROWS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CreatedBy,
        CreationDate,
        DetRow,
        Display,
        Id,
        Key1,
        Label,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        OwsId,
        Path,
        RecRow,
        RequestId,
        SortId,
        Value,
        CreatedByAttr,
        LastUpdatedByAttr,
        FndUsersAllLov1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int DETROW = AttributesEnum.DetRow.index();
    public static final int DISPLAY = AttributesEnum.Display.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int KEY1 = AttributesEnum.Key1.index();
    public static final int LABEL = AttributesEnum.Label.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OWSID = AttributesEnum.OwsId.index();
    public static final int PATH = AttributesEnum.Path.index();
    public static final int RECROW = AttributesEnum.RecRow.index();
    public static final int REQUESTID = AttributesEnum.RequestId.index();
    public static final int SORTID = AttributesEnum.SortId.index();
    public static final int VALUE = AttributesEnum.Value.index();
    public static final int CREATEDBYATTR = AttributesEnum.CreatedByAttr.index();
    public static final int LASTUPDATEDBYATTR = AttributesEnum.LastUpdatedByAttr.index();
    public static final int FNDUSERSALLLOV1 = AttributesEnum.FndUsersAllLov1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XwrlResponseRowsViewRowImpl() {
    }

    /**
     * Gets XwrlResponseRows entity object.
     * @return the XwrlResponseRows
     */
    public EntityImpl getXwrlResponseRows() {
        return (EntityImpl) getEntity(ENTITY_XWRLRESPONSEROWS);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Long getCreatedBy() {
        return (Long) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Long value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for DET_ROW using the alias name DetRow.
     * @return the DET_ROW
     */
    public BigDecimal getDetRow() {
        return (BigDecimal) getAttributeInternal(DETROW);
    }

    /**
     * Sets <code>value</code> as attribute value for DET_ROW using the alias name DetRow.
     * @param value value to set the DET_ROW
     */
    public void setDetRow(BigDecimal value) {
        setAttributeInternal(DETROW, value);
    }

    /**
     * Gets the attribute value for DISPLAY using the alias name Display.
     * @return the DISPLAY
     */
    public String getDisplay() {
        return (String) getAttributeInternal(DISPLAY);
    }

    /**
     * Sets <code>value</code> as attribute value for DISPLAY using the alias name Display.
     * @param value value to set the DISPLAY
     */
    public void setDisplay(String value) {
        setAttributeInternal(DISPLAY, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for KEY using the alias name Key1.
     * @return the KEY
     */
    public String getKey1() {
        return (String) getAttributeInternal(KEY1);
    }

    /**
     * Sets <code>value</code> as attribute value for KEY using the alias name Key1.
     * @param value value to set the KEY
     */
    public void setKey1(String value) {
        setAttributeInternal(KEY1, value);
    }

    /**
     * Gets the attribute value for LABEL using the alias name Label.
     * @return the LABEL
     */
    public String getLabel() {
        return (String) getAttributeInternal(LABEL);
    }

    /**
     * Sets <code>value</code> as attribute value for LABEL using the alias name Label.
     * @param value value to set the LABEL
     */
    public void setLabel(String value) {
        setAttributeInternal(LABEL, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public Long getLastUpdateLogin() {
        return (Long) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(Long value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Long getLastUpdatedBy() {
        return (Long) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Long value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for OWS_ID using the alias name OwsId.
     * @return the OWS_ID
     */
    public String getOwsId() {
        return (String) getAttributeInternal(OWSID);
    }

    /**
     * Sets <code>value</code> as attribute value for OWS_ID using the alias name OwsId.
     * @param value value to set the OWS_ID
     */
    public void setOwsId(String value) {
        setAttributeInternal(OWSID, value);
    }

    /**
     * Gets the attribute value for PATH using the alias name Path.
     * @return the PATH
     */
    public String getPath() {
        return (String) getAttributeInternal(PATH);
    }

    /**
     * Sets <code>value</code> as attribute value for PATH using the alias name Path.
     * @param value value to set the PATH
     */
    public void setPath(String value) {
        setAttributeInternal(PATH, value);
    }

    /**
     * Gets the attribute value for REC_ROW using the alias name RecRow.
     * @return the REC_ROW
     */
    public BigDecimal getRecRow() {
        return (BigDecimal) getAttributeInternal(RECROW);
    }

    /**
     * Sets <code>value</code> as attribute value for REC_ROW using the alias name RecRow.
     * @param value value to set the REC_ROW
     */
    public void setRecRow(BigDecimal value) {
        setAttributeInternal(RECROW, value);
    }

    /**
     * Gets the attribute value for REQUEST_ID using the alias name RequestId.
     * @return the REQUEST_ID
     */
    public BigDecimal getRequestId() {
        return (BigDecimal) getAttributeInternal(REQUESTID);
    }

    /**
     * Sets <code>value</code> as attribute value for REQUEST_ID using the alias name RequestId.
     * @param value value to set the REQUEST_ID
     */
    public void setRequestId(BigDecimal value) {
        setAttributeInternal(REQUESTID, value);
    }

    /**
     * Gets the attribute value for SORT_ID using the alias name SortId.
     * @return the SORT_ID
     */
    public BigDecimal getSortId() {
        return (BigDecimal) getAttributeInternal(SORTID);
    }

    /**
     * Sets <code>value</code> as attribute value for SORT_ID using the alias name SortId.
     * @param value value to set the SORT_ID
     */
    public void setSortId(BigDecimal value) {
        setAttributeInternal(SORTID, value);
    }

    /**
     * Gets the attribute value for VALUE using the alias name Value.
     * @return the VALUE
     */
    public String getValue() {
        return (String) getAttributeInternal(VALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for VALUE using the alias name Value.
     * @param value value to set the VALUE
     */
    public void setValue(String value) {
        setAttributeInternal(VALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreatedByAttr.
     * @return the CreatedByAttr
     
    public String getCreatedByAttr() {
        return (String) getAttributeInternal(CREATEDBYATTR);
    }
*/
    /**
     * Gets the attribute value for the calculated attribute LastUpdatedByAttr.
     * @return the LastUpdatedByAttr
     
    public String getLastUpdatedByAttr() {
        return (String) getAttributeInternal(LASTUPDATEDBYATTR);
    }
*/
    /**
     * Gets the view accessor <code>RowSet</code> FndUsersAllLov1.
     */
    public RowSet getFndUsersAllLov1() {
        return (RowSet) getAttributeInternal(FNDUSERSALLLOV1);
    }
    
    public String getCreatedByAttr() {
        //return (String) getAttributeInternal(CREATEDBYATTR);
        Long key = (Long) getAttributeInternal(CREATEDBY);
        //LOGGER.finest("Key: " + key);
        String value = null;

        if (key != null) {
            Row[] rows;
            rows = this.getFndUsersAllLov1().getFilteredRows("UserId", key);
            if (rows.length > 0) {
                value = (String) rows[0].getAttribute("Description");
            }
        }
        
        //LOGGER.finest("Value: " + value);
        
        return value;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreatedByAttr.
     * @param value value to set the  CreatedByAttr
     */
    public void setCreatedByAttr(String value) {
        setAttributeInternal(CREATEDBYATTR, value);
    }

    public String getLastUpdatedByAttr() {
        //return (String) getAttributeInternal(LASTUPDATEDBYATTR);
        Long key = (Long) getAttributeInternal(LASTUPDATEDBY);
        //LOGGER.finest("Key: " + key);
        String value = null;

        if (key != null) {
            Row[] rows;
            rows = this.getFndUsersAllLov1().getFilteredRows("UserId", key);
            if (rows.length > 0) {
                value = (String) rows[0].getAttribute("Description");
            }
        }
        
        //LOGGER.finest("Value: " + value);
        
        return value;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdatedByAttr.
     * @param value value to set the  LastUpdatedByAttr
     */
    public void setLastUpdatedByAttr(String value) {
        setAttributeInternal(LASTUPDATEDBYATTR, value);
    }
}

