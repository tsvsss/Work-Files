package oracle.apps.xwrl.model.entity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 18 10:49:29 EST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XwrlResponseIndColumnsImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        RequestId,
        Rec,
        Listkey,
        Listsubkey,
        Listrecordtype,
        Listrecordorigin,
        Listid,
        Listgivennames,
        Listfamilyname,
        Listfullname,
        Listnametype,
        Listprimaryname,
        Listoriginalscriptname,
        Listdob,
        Listcity,
        Listcountry,
        Listcountryofbirth,
        Listnationality,
        Matchrule,
        Matchscore,
        Casekey,
        Alertid,
        Riskscore,
        Riskscorepep,
        LastUpdateDate,
        LastUpdatedBy,
        CreationDate,
        CreatedBy,
        LastUpdateLogin,
        XState,
        Category,
        Dnpassportnumber,
        Dnnationalid,
        Dntitle,
        Dnyob,
        Dngender,
        Deceasedflag,
        Deceaseddate,
        Dnoccupation,
        Dnaddress,
        Dncity,
        Dnstate,
        Dnpostalcode,
        Dnaddresscountrycode,
        Dnresidencycountrycode,
        Dncountryofbirthcode,
        Dnnationalitycountrycodes,
        Externalsources,
        Cachedextsources,
        Dnaddeddate,
        Dnlastupdateddate,
        LegalReview,
        CorporateReview,
        XwrlRequests,
        XwrlAlertNotes,
        XwrlAlertDocuments;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int REQUESTID = AttributesEnum.RequestId.index();
    public static final int REC = AttributesEnum.Rec.index();
    public static final int LISTKEY = AttributesEnum.Listkey.index();
    public static final int LISTSUBKEY = AttributesEnum.Listsubkey.index();
    public static final int LISTRECORDTYPE = AttributesEnum.Listrecordtype.index();
    public static final int LISTRECORDORIGIN = AttributesEnum.Listrecordorigin.index();
    public static final int LISTID = AttributesEnum.Listid.index();
    public static final int LISTGIVENNAMES = AttributesEnum.Listgivennames.index();
    public static final int LISTFAMILYNAME = AttributesEnum.Listfamilyname.index();
    public static final int LISTFULLNAME = AttributesEnum.Listfullname.index();
    public static final int LISTNAMETYPE = AttributesEnum.Listnametype.index();
    public static final int LISTPRIMARYNAME = AttributesEnum.Listprimaryname.index();
    public static final int LISTORIGINALSCRIPTNAME = AttributesEnum.Listoriginalscriptname.index();
    public static final int LISTDOB = AttributesEnum.Listdob.index();
    public static final int LISTCITY = AttributesEnum.Listcity.index();
    public static final int LISTCOUNTRY = AttributesEnum.Listcountry.index();
    public static final int LISTCOUNTRYOFBIRTH = AttributesEnum.Listcountryofbirth.index();
    public static final int LISTNATIONALITY = AttributesEnum.Listnationality.index();
    public static final int MATCHRULE = AttributesEnum.Matchrule.index();
    public static final int MATCHSCORE = AttributesEnum.Matchscore.index();
    public static final int CASEKEY = AttributesEnum.Casekey.index();
    public static final int ALERTID = AttributesEnum.Alertid.index();
    public static final int RISKSCORE = AttributesEnum.Riskscore.index();
    public static final int RISKSCOREPEP = AttributesEnum.Riskscorepep.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int XSTATE = AttributesEnum.XState.index();
    public static final int CATEGORY = AttributesEnum.Category.index();
    public static final int DNPASSPORTNUMBER = AttributesEnum.Dnpassportnumber.index();
    public static final int DNNATIONALID = AttributesEnum.Dnnationalid.index();
    public static final int DNTITLE = AttributesEnum.Dntitle.index();
    public static final int DNYOB = AttributesEnum.Dnyob.index();
    public static final int DNGENDER = AttributesEnum.Dngender.index();
    public static final int DECEASEDFLAG = AttributesEnum.Deceasedflag.index();
    public static final int DECEASEDDATE = AttributesEnum.Deceaseddate.index();
    public static final int DNOCCUPATION = AttributesEnum.Dnoccupation.index();
    public static final int DNADDRESS = AttributesEnum.Dnaddress.index();
    public static final int DNCITY = AttributesEnum.Dncity.index();
    public static final int DNSTATE = AttributesEnum.Dnstate.index();
    public static final int DNPOSTALCODE = AttributesEnum.Dnpostalcode.index();
    public static final int DNADDRESSCOUNTRYCODE = AttributesEnum.Dnaddresscountrycode.index();
    public static final int DNRESIDENCYCOUNTRYCODE = AttributesEnum.Dnresidencycountrycode.index();
    public static final int DNCOUNTRYOFBIRTHCODE = AttributesEnum.Dncountryofbirthcode.index();
    public static final int DNNATIONALITYCOUNTRYCODES = AttributesEnum.Dnnationalitycountrycodes.index();
    public static final int EXTERNALSOURCES = AttributesEnum.Externalsources.index();
    public static final int CACHEDEXTSOURCES = AttributesEnum.Cachedextsources.index();
    public static final int DNADDEDDATE = AttributesEnum.Dnaddeddate.index();
    public static final int DNLASTUPDATEDDATE = AttributesEnum.Dnlastupdateddate.index();
    public static final int LEGALREVIEW = AttributesEnum.LegalReview.index();
    public static final int CORPORATEREVIEW = AttributesEnum.CorporateReview.index();
    public static final int XWRLREQUESTS = AttributesEnum.XwrlRequests.index();
    public static final int XWRLALERTNOTES = AttributesEnum.XwrlAlertNotes.index();
    public static final int XWRLALERTDOCUMENTS = AttributesEnum.XwrlAlertDocuments.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XwrlResponseIndColumnsImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("oracle.apps.xwrl.model.entity.XwrlResponseIndColumns");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for RequestId, using the alias name RequestId.
     * @return the value of RequestId
     */
    public BigDecimal getRequestId() {
        return (BigDecimal) getAttributeInternal(REQUESTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestId.
     * @param value value to set the RequestId
     */
    public void setRequestId(BigDecimal value) {
        setAttributeInternal(REQUESTID, value);
    }

    /**
     * Gets the attribute value for Rec, using the alias name Rec.
     * @return the value of Rec
     */
    public BigDecimal getRec() {
        return (BigDecimal) getAttributeInternal(REC);
    }

    /**
     * Sets <code>value</code> as the attribute value for Rec.
     * @param value value to set the Rec
     */
    public void setRec(BigDecimal value) {
        setAttributeInternal(REC, value);
    }

    /**
     * Gets the attribute value for Listkey, using the alias name Listkey.
     * @return the value of Listkey
     */
    public String getListkey() {
        return (String) getAttributeInternal(LISTKEY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listkey.
     * @param value value to set the Listkey
     */
    public void setListkey(String value) {
        setAttributeInternal(LISTKEY, value);
    }

    /**
     * Gets the attribute value for Listsubkey, using the alias name Listsubkey.
     * @return the value of Listsubkey
     */
    public String getListsubkey() {
        return (String) getAttributeInternal(LISTSUBKEY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listsubkey.
     * @param value value to set the Listsubkey
     */
    public void setListsubkey(String value) {
        setAttributeInternal(LISTSUBKEY, value);
    }

    /**
     * Gets the attribute value for Listrecordtype, using the alias name Listrecordtype.
     * @return the value of Listrecordtype
     */
    public String getListrecordtype() {
        return (String) getAttributeInternal(LISTRECORDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listrecordtype.
     * @param value value to set the Listrecordtype
     */
    public void setListrecordtype(String value) {
        setAttributeInternal(LISTRECORDTYPE, value);
    }

    /**
     * Gets the attribute value for Listrecordorigin, using the alias name Listrecordorigin.
     * @return the value of Listrecordorigin
     */
    public String getListrecordorigin() {
        return (String) getAttributeInternal(LISTRECORDORIGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listrecordorigin.
     * @param value value to set the Listrecordorigin
     */
    public void setListrecordorigin(String value) {
        setAttributeInternal(LISTRECORDORIGIN, value);
    }

    /**
     * Gets the attribute value for Listid, using the alias name Listid.
     * @return the value of Listid
     */
    public String getListid() {
        return (String) getAttributeInternal(LISTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listid.
     * @param value value to set the Listid
     */
    public void setListid(String value) {
        setAttributeInternal(LISTID, value);
    }

    /**
     * Gets the attribute value for Listgivennames, using the alias name Listgivennames.
     * @return the value of Listgivennames
     */
    public String getListgivennames() {
        return (String) getAttributeInternal(LISTGIVENNAMES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listgivennames.
     * @param value value to set the Listgivennames
     */
    public void setListgivennames(String value) {
        setAttributeInternal(LISTGIVENNAMES, value);
    }

    /**
     * Gets the attribute value for Listfamilyname, using the alias name Listfamilyname.
     * @return the value of Listfamilyname
     */
    public String getListfamilyname() {
        return (String) getAttributeInternal(LISTFAMILYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listfamilyname.
     * @param value value to set the Listfamilyname
     */
    public void setListfamilyname(String value) {
        setAttributeInternal(LISTFAMILYNAME, value);
    }

    /**
     * Gets the attribute value for Listfullname, using the alias name Listfullname.
     * @return the value of Listfullname
     */
    public String getListfullname() {
        return (String) getAttributeInternal(LISTFULLNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listfullname.
     * @param value value to set the Listfullname
     */
    public void setListfullname(String value) {
        setAttributeInternal(LISTFULLNAME, value);
    }

    /**
     * Gets the attribute value for Listnametype, using the alias name Listnametype.
     * @return the value of Listnametype
     */
    public String getListnametype() {
        return (String) getAttributeInternal(LISTNAMETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listnametype.
     * @param value value to set the Listnametype
     */
    public void setListnametype(String value) {
        setAttributeInternal(LISTNAMETYPE, value);
    }

    /**
     * Gets the attribute value for Listprimaryname, using the alias name Listprimaryname.
     * @return the value of Listprimaryname
     */
    public String getListprimaryname() {
        return (String) getAttributeInternal(LISTPRIMARYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listprimaryname.
     * @param value value to set the Listprimaryname
     */
    public void setListprimaryname(String value) {
        setAttributeInternal(LISTPRIMARYNAME, value);
    }

    /**
     * Gets the attribute value for Listoriginalscriptname, using the alias name Listoriginalscriptname.
     * @return the value of Listoriginalscriptname
     */
    public String getListoriginalscriptname() {
        return (String) getAttributeInternal(LISTORIGINALSCRIPTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listoriginalscriptname.
     * @param value value to set the Listoriginalscriptname
     */
    public void setListoriginalscriptname(String value) {
        setAttributeInternal(LISTORIGINALSCRIPTNAME, value);
    }

    /**
     * Gets the attribute value for Listdob, using the alias name Listdob.
     * @return the value of Listdob
     */
    public String getListdob() {
        return (String) getAttributeInternal(LISTDOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listdob.
     * @param value value to set the Listdob
     */
    public void setListdob(String value) {
        setAttributeInternal(LISTDOB, value);
    }

    /**
     * Gets the attribute value for Listcity, using the alias name Listcity.
     * @return the value of Listcity
     */
    public String getListcity() {
        return (String) getAttributeInternal(LISTCITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listcity.
     * @param value value to set the Listcity
     */
    public void setListcity(String value) {
        setAttributeInternal(LISTCITY, value);
    }

    /**
     * Gets the attribute value for Listcountry, using the alias name Listcountry.
     * @return the value of Listcountry
     */
    public String getListcountry() {
        return (String) getAttributeInternal(LISTCOUNTRY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listcountry.
     * @param value value to set the Listcountry
     */
    public void setListcountry(String value) {
        setAttributeInternal(LISTCOUNTRY, value);
    }

    /**
     * Gets the attribute value for Listcountryofbirth, using the alias name Listcountryofbirth.
     * @return the value of Listcountryofbirth
     */
    public String getListcountryofbirth() {
        return (String) getAttributeInternal(LISTCOUNTRYOFBIRTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listcountryofbirth.
     * @param value value to set the Listcountryofbirth
     */
    public void setListcountryofbirth(String value) {
        setAttributeInternal(LISTCOUNTRYOFBIRTH, value);
    }

    /**
     * Gets the attribute value for Listnationality, using the alias name Listnationality.
     * @return the value of Listnationality
     */
    public String getListnationality() {
        return (String) getAttributeInternal(LISTNATIONALITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Listnationality.
     * @param value value to set the Listnationality
     */
    public void setListnationality(String value) {
        setAttributeInternal(LISTNATIONALITY, value);
    }

    /**
     * Gets the attribute value for Matchrule, using the alias name Matchrule.
     * @return the value of Matchrule
     */
    public String getMatchrule() {
        return (String) getAttributeInternal(MATCHRULE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Matchrule.
     * @param value value to set the Matchrule
     */
    public void setMatchrule(String value) {
        setAttributeInternal(MATCHRULE, value);
    }

    /**
     * Gets the attribute value for Matchscore, using the alias name Matchscore.
     * @return the value of Matchscore
     */
    public String getMatchscore() {
        return (String) getAttributeInternal(MATCHSCORE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Matchscore.
     * @param value value to set the Matchscore
     */
    public void setMatchscore(String value) {
        setAttributeInternal(MATCHSCORE, value);
    }

    /**
     * Gets the attribute value for Casekey, using the alias name Casekey.
     * @return the value of Casekey
     */
    public String getCasekey() {
        return (String) getAttributeInternal(CASEKEY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Casekey.
     * @param value value to set the Casekey
     */
    public void setCasekey(String value) {
        setAttributeInternal(CASEKEY, value);
    }

    /**
     * Gets the attribute value for Alertid, using the alias name Alertid.
     * @return the value of Alertid
     */
    public String getAlertid() {
        return (String) getAttributeInternal(ALERTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Alertid.
     * @param value value to set the Alertid
     */
    public void setAlertid(String value) {
        setAttributeInternal(ALERTID, value);
    }

    /**
     * Gets the attribute value for Riskscore, using the alias name Riskscore.
     * @return the value of Riskscore
     */
    public String getRiskscore() {
        return (String) getAttributeInternal(RISKSCORE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Riskscore.
     * @param value value to set the Riskscore
     */
    public void setRiskscore(String value) {
        setAttributeInternal(RISKSCORE, value);
    }

    /**
     * Gets the attribute value for Riskscorepep, using the alias name Riskscorepep.
     * @return the value of Riskscorepep
     */
    public String getRiskscorepep() {
        return (String) getAttributeInternal(RISKSCOREPEP);
    }

    /**
     * Sets <code>value</code> as the attribute value for Riskscorepep.
     * @param value value to set the Riskscorepep
     */
    public void setRiskscorepep(String value) {
        setAttributeInternal(RISKSCOREPEP, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Long getLastUpdatedBy() {
        return (Long) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Long value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Long getCreatedBy() {
        return (Long) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Long value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the value of LastUpdateLogin
     */
    public Long getLastUpdateLogin() {
        return (Long) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(Long value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for XState, using the alias name XState.
     * @return the value of XState
     */
    public String getXState() {
        return (String) getAttributeInternal(XSTATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XState.
     * @param value value to set the XState
     */
    public void setXState(String value) {
        setAttributeInternal(XSTATE, value);
    }

    /**
     * Gets the attribute value for Category, using the alias name Category.
     * @return the value of Category
     */
    public String getCategory() {
        return (String) getAttributeInternal(CATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Category.
     * @param value value to set the Category
     */
    public void setCategory(String value) {
        setAttributeInternal(CATEGORY, value);
    }

    /**
     * Gets the attribute value for Dnpassportnumber, using the alias name Dnpassportnumber.
     * @return the value of Dnpassportnumber
     */
    public String getDnpassportnumber() {
        return (String) getAttributeInternal(DNPASSPORTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dnpassportnumber.
     * @param value value to set the Dnpassportnumber
     */
    public void setDnpassportnumber(String value) {
        setAttributeInternal(DNPASSPORTNUMBER, value);
    }

    /**
     * Gets the attribute value for Dnnationalid, using the alias name Dnnationalid.
     * @return the value of Dnnationalid
     */
    public String getDnnationalid() {
        return (String) getAttributeInternal(DNNATIONALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dnnationalid.
     * @param value value to set the Dnnationalid
     */
    public void setDnnationalid(String value) {
        setAttributeInternal(DNNATIONALID, value);
    }

    /**
     * Gets the attribute value for Dntitle, using the alias name Dntitle.
     * @return the value of Dntitle
     */
    public String getDntitle() {
        return (String) getAttributeInternal(DNTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dntitle.
     * @param value value to set the Dntitle
     */
    public void setDntitle(String value) {
        setAttributeInternal(DNTITLE, value);
    }

    /**
     * Gets the attribute value for Dnyob, using the alias name Dnyob.
     * @return the value of Dnyob
     */
    public String getDnyob() {
        return (String) getAttributeInternal(DNYOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dnyob.
     * @param value value to set the Dnyob
     */
    public void setDnyob(String value) {
        setAttributeInternal(DNYOB, value);
    }

    /**
     * Gets the attribute value for Dngender, using the alias name Dngender.
     * @return the value of Dngender
     */
    public String getDngender() {
        return (String) getAttributeInternal(DNGENDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dngender.
     * @param value value to set the Dngender
     */
    public void setDngender(String value) {
        setAttributeInternal(DNGENDER, value);
    }

    /**
     * Gets the attribute value for Deceasedflag, using the alias name Deceasedflag.
     * @return the value of Deceasedflag
     */
    public String getDeceasedflag() {
        return (String) getAttributeInternal(DECEASEDFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for Deceasedflag.
     * @param value value to set the Deceasedflag
     */
    public void setDeceasedflag(String value) {
        setAttributeInternal(DECEASEDFLAG, value);
    }

    /**
     * Gets the attribute value for Deceaseddate, using the alias name Deceaseddate.
     * @return the value of Deceaseddate
     */
    public String getDeceaseddate() {
        return (String) getAttributeInternal(DECEASEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Deceaseddate.
     * @param value value to set the Deceaseddate
     */
    public void setDeceaseddate(String value) {
        setAttributeInternal(DECEASEDDATE, value);
    }

    /**
     * Gets the attribute value for Dnoccupation, using the alias name Dnoccupation.
     * @return the value of Dnoccupation
     */
    public String getDnoccupation() {
        return (String) getAttributeInternal(DNOCCUPATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dnoccupation.
     * @param value value to set the Dnoccupation
     */
    public void setDnoccupation(String value) {
        setAttributeInternal(DNOCCUPATION, value);
    }

    /**
     * Gets the attribute value for Dnaddress, using the alias name Dnaddress.
     * @return the value of Dnaddress
     */
    public String getDnaddress() {
        return (String) getAttributeInternal(DNADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dnaddress.
     * @param value value to set the Dnaddress
     */
    public void setDnaddress(String value) {
        setAttributeInternal(DNADDRESS, value);
    }

    /**
     * Gets the attribute value for Dncity, using the alias name Dncity.
     * @return the value of Dncity
     */
    public String getDncity() {
        return (String) getAttributeInternal(DNCITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dncity.
     * @param value value to set the Dncity
     */
    public void setDncity(String value) {
        setAttributeInternal(DNCITY, value);
    }

    /**
     * Gets the attribute value for Dnstate, using the alias name Dnstate.
     * @return the value of Dnstate
     */
    public String getDnstate() {
        return (String) getAttributeInternal(DNSTATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dnstate.
     * @param value value to set the Dnstate
     */
    public void setDnstate(String value) {
        setAttributeInternal(DNSTATE, value);
    }

    /**
     * Gets the attribute value for Dnpostalcode, using the alias name Dnpostalcode.
     * @return the value of Dnpostalcode
     */
    public String getDnpostalcode() {
        return (String) getAttributeInternal(DNPOSTALCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dnpostalcode.
     * @param value value to set the Dnpostalcode
     */
    public void setDnpostalcode(String value) {
        setAttributeInternal(DNPOSTALCODE, value);
    }

    /**
     * Gets the attribute value for Dnaddresscountrycode, using the alias name Dnaddresscountrycode.
     * @return the value of Dnaddresscountrycode
     */
    public String getDnaddresscountrycode() {
        return (String) getAttributeInternal(DNADDRESSCOUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dnaddresscountrycode.
     * @param value value to set the Dnaddresscountrycode
     */
    public void setDnaddresscountrycode(String value) {
        setAttributeInternal(DNADDRESSCOUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for Dnresidencycountrycode, using the alias name Dnresidencycountrycode.
     * @return the value of Dnresidencycountrycode
     */
    public String getDnresidencycountrycode() {
        return (String) getAttributeInternal(DNRESIDENCYCOUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dnresidencycountrycode.
     * @param value value to set the Dnresidencycountrycode
     */
    public void setDnresidencycountrycode(String value) {
        setAttributeInternal(DNRESIDENCYCOUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for Dncountryofbirthcode, using the alias name Dncountryofbirthcode.
     * @return the value of Dncountryofbirthcode
     */
    public String getDncountryofbirthcode() {
        return (String) getAttributeInternal(DNCOUNTRYOFBIRTHCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dncountryofbirthcode.
     * @param value value to set the Dncountryofbirthcode
     */
    public void setDncountryofbirthcode(String value) {
        setAttributeInternal(DNCOUNTRYOFBIRTHCODE, value);
    }

    /**
     * Gets the attribute value for Dnnationalitycountrycodes, using the alias name Dnnationalitycountrycodes.
     * @return the value of Dnnationalitycountrycodes
     */
    public String getDnnationalitycountrycodes() {
        return (String) getAttributeInternal(DNNATIONALITYCOUNTRYCODES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dnnationalitycountrycodes.
     * @param value value to set the Dnnationalitycountrycodes
     */
    public void setDnnationalitycountrycodes(String value) {
        setAttributeInternal(DNNATIONALITYCOUNTRYCODES, value);
    }

    /**
     * Gets the attribute value for Externalsources, using the alias name Externalsources.
     * @return the value of Externalsources
     */
    public String getExternalsources() {
        return (String) getAttributeInternal(EXTERNALSOURCES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Externalsources.
     * @param value value to set the Externalsources
     */
    public void setExternalsources(String value) {
        setAttributeInternal(EXTERNALSOURCES, value);
    }

    /**
     * Gets the attribute value for Cachedextsources, using the alias name Cachedextsources.
     * @return the value of Cachedextsources
     */
    public String getCachedextsources() {
        return (String) getAttributeInternal(CACHEDEXTSOURCES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cachedextsources.
     * @param value value to set the Cachedextsources
     */
    public void setCachedextsources(String value) {
        setAttributeInternal(CACHEDEXTSOURCES, value);
    }

    /**
     * Gets the attribute value for Dnaddeddate, using the alias name Dnaddeddate.
     * @return the value of Dnaddeddate
     */
    public String getDnaddeddate() {
        return (String) getAttributeInternal(DNADDEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dnaddeddate.
     * @param value value to set the Dnaddeddate
     */
    public void setDnaddeddate(String value) {
        setAttributeInternal(DNADDEDDATE, value);
    }

    /**
     * Gets the attribute value for Dnlastupdateddate, using the alias name Dnlastupdateddate.
     * @return the value of Dnlastupdateddate
     */
    public String getDnlastupdateddate() {
        return (String) getAttributeInternal(DNLASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dnlastupdateddate.
     * @param value value to set the Dnlastupdateddate
     */
    public void setDnlastupdateddate(String value) {
        setAttributeInternal(DNLASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for LegalReview, using the alias name LegalReview.
     * @return the value of LegalReview
     */
    public String getLegalReview() {
        return (String) getAttributeInternal(LEGALREVIEW);
    }

    /**
     * Sets <code>value</code> as the attribute value for LegalReview.
     * @param value value to set the LegalReview
     */
    public void setLegalReview(String value) {
        setAttributeInternal(LEGALREVIEW, value);
    }

    /**
     * Gets the attribute value for CorporateReview, using the alias name CorporateReview.
     * @return the value of CorporateReview
     */
    public String getCorporateReview() {
        return (String) getAttributeInternal(CORPORATEREVIEW);
    }

    /**
     * Sets <code>value</code> as the attribute value for CorporateReview.
     * @param value value to set the CorporateReview
     */
    public void setCorporateReview(String value) {
        setAttributeInternal(CORPORATEREVIEW, value);
    }

    /**
     * @return the associated entity XwrlRequestsImpl.
     */
    public XwrlRequestsImpl getXwrlRequests() {
        return (XwrlRequestsImpl) getAttributeInternal(XWRLREQUESTS);
    }

    /**
     * Sets <code>value</code> as the associated entity XwrlRequestsImpl.
     */
    public void setXwrlRequests(XwrlRequestsImpl value) {
        setAttributeInternal(XWRLREQUESTS, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXwrlAlertNotes() {
        return (RowIterator) getAttributeInternal(XWRLALERTNOTES);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXwrlAlertDocuments() {
        return (RowIterator) getAttributeInternal(XWRLALERTDOCUMENTS);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        try{
        if (operation == DML_UPDATE) {
            Integer userId = (Integer) ADFContext.getCurrent().getSessionScope().get("UserId");
            Integer sessionId = (Integer) ADFContext.getCurrent().getSessionScope().get("SessionId");
            Timestamp time = new Timestamp(System.currentTimeMillis());

            if (userId != null) {                
                this.setLastUpdatedBy(Long.valueOf(userId));
            }

            if (sessionId != null) {
                this.setLastUpdateLogin(Long.valueOf(sessionId));
            }

            this.setLastUpdateDate(time);            
        }
        super.doDML(operation, e);
        }catch(Exception se){
            if(se.getCause() != null && !"".equals(se.getCause())) {
                String error = se.getCause().getLocalizedMessage().split("\n")[0];
                String msg = "";
                if(error.contains(": Error: "))
                    msg = error.substring(("ORA-"+": Error: ").length()+5,error.length());
                else
                    msg = error.substring(("ORA-").length()+5,error.length());
                
                FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_ERROR, msg, null);
                FacesContext.getCurrentInstance().addMessage(null, message);
            }
            return;
        }
    }
}

