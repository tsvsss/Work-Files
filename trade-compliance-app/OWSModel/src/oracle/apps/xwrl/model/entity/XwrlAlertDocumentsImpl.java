package oracle.apps.xwrl.model.entity;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;

import oracle.adf.share.ADFContext;
import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 01 13:50:17 EDT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XwrlAlertDocumentsImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        RequestId,
        AlertId,
        EdocId,
        DocumentFile,
        DocumentName,
        DocumentCategory,
        DocumentType,
        FileName,
        FilePath,
        ContentType,
        ImageFile,
        ImageName,
        ImagePath,
        UrlPath,
        Comment,
        LastUpdateDate,
        LastUpdatedBy,
        CreationDate,
        CreatedBy,
        LastUpdateLogin,
        XwrlResponseEntityColumns,
        XwrlResponseIndColumns;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }  

    private static ADFLogger LOGGER = ADFLogger.createADFLogger(XwrlAlertDocumentsImpl.class);


    public static final int ID = AttributesEnum.Id.index();
    public static final int REQUESTID = AttributesEnum.RequestId.index();
    public static final int ALERTID = AttributesEnum.AlertId.index();
    public static final int EDOCID = AttributesEnum.EdocId.index();
    public static final int DOCUMENTFILE = AttributesEnum.DocumentFile.index();
    public static final int DOCUMENTNAME = AttributesEnum.DocumentName.index();
    public static final int DOCUMENTCATEGORY = AttributesEnum.DocumentCategory.index();
    public static final int DOCUMENTTYPE = AttributesEnum.DocumentType.index();
    public static final int FILENAME = AttributesEnum.FileName.index();
    public static final int FILEPATH = AttributesEnum.FilePath.index();
    public static final int CONTENTTYPE = AttributesEnum.ContentType.index();
    public static final int IMAGEFILE = AttributesEnum.ImageFile.index();
    public static final int IMAGENAME = AttributesEnum.ImageName.index();
    public static final int IMAGEPATH = AttributesEnum.ImagePath.index();
    public static final int URLPATH = AttributesEnum.UrlPath.index();
    public static final int COMMENT = AttributesEnum.Comment.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int XWRLRESPONSEENTITYCOLUMNS = AttributesEnum.XwrlResponseEntityColumns.index();
    public static final int XWRLRESPONSEINDCOLUMNS = AttributesEnum.XwrlResponseIndColumns.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XwrlAlertDocumentsImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("oracle.apps.xwrl.model.entity.XwrlAlertDocuments");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for RequestId, using the alias name RequestId.
     * @return the value of RequestId
     */
    public BigDecimal getRequestId() {
        return (BigDecimal) getAttributeInternal(REQUESTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestId.
     * @param value value to set the RequestId
     */
    public void setRequestId(BigDecimal value) {
        setAttributeInternal(REQUESTID, value);
    }

    /**
     * Gets the attribute value for AlertId, using the alias name AlertId.
     * @return the value of AlertId
     */
    public String getAlertId() {
        return (String) getAttributeInternal(ALERTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AlertId.
     * @param value value to set the AlertId
     */
    public void setAlertId(String value) {
        setAttributeInternal(ALERTID, value);
    }

    /**
     * Gets the attribute value for EdocId, using the alias name EdocId.
     * @return the value of EdocId
     */
    public BigDecimal getEdocId() {
        return (BigDecimal) getAttributeInternal(EDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EdocId.
     * @param value value to set the EdocId
     */
    public void setEdocId(BigDecimal value) {
        setAttributeInternal(EDOCID, value);
    }

    /**
     * Gets the attribute value for DocumentName, using the alias name DocumentName.
     * @return the value of DocumentName
     */
    public String getDocumentName() {
        return (String) getAttributeInternal(DOCUMENTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocumentName.
     * @param value value to set the DocumentName
     */
    public void setDocumentName(String value) {
        setAttributeInternal(DOCUMENTNAME, value);
    }

    /**
     * Gets the attribute value for DocumentCategory, using the alias name DocumentCategory.
     * @return the value of DocumentCategory
     */
    public String getDocumentCategory() {
        return (String) getAttributeInternal(DOCUMENTCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocumentCategory.
     * @param value value to set the DocumentCategory
     */
    public void setDocumentCategory(String value) {
        setAttributeInternal(DOCUMENTCATEGORY, value);
    }

    /**
     * Gets the attribute value for DocumentType, using the alias name DocumentType.
     * @return the value of DocumentType
     */
    public String getDocumentType() {
        return (String) getAttributeInternal(DOCUMENTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocumentType.
     * @param value value to set the DocumentType
     */
    public void setDocumentType(String value) {
        setAttributeInternal(DOCUMENTTYPE, value);
    }

    /**
     * Gets the attribute value for FileName, using the alias name FileName.
     * @return the value of FileName
     */
    public String getFileName() {
        return (String) getAttributeInternal(FILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileName.
     * @param value value to set the FileName
     */
    public void setFileName(String value) {
        setAttributeInternal(FILENAME, value);
    }

    /**
     * Gets the attribute value for FilePath, using the alias name FilePath.
     * @return the value of FilePath
     */
    public String getFilePath() {
        return (String) getAttributeInternal(FILEPATH);
    }

    /**
     * Sets <code>value</code> as the attribute value for FilePath.
     * @param value value to set the FilePath
     */
    public void setFilePath(String value) {
        setAttributeInternal(FILEPATH, value);
    }

    /**
     * Gets the attribute value for ContentType, using the alias name ContentType.
     * @return the value of ContentType
     */
    public String getContentType() {
        return (String) getAttributeInternal(CONTENTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContentType.
     * @param value value to set the ContentType
     */
    public void setContentType(String value) {
        setAttributeInternal(CONTENTTYPE, value);
    }

    /**
     * Gets the attribute value for UrlPath, using the alias name UrlPath.
     * @return the value of UrlPath
     */
    public String getUrlPath() {
        return (String) getAttributeInternal(URLPATH);
    }

    /**
     * Sets <code>value</code> as the attribute value for UrlPath.
     * @param value value to set the UrlPath
     */
    public void setUrlPath(String value) {
        setAttributeInternal(URLPATH, value);
    }

    /**
     * Gets the attribute value for Comment, using the alias name Comment.
     * @return the value of Comment
     */
    public String getComment() {
        return (String) getAttributeInternal(COMMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Comment.
     * @param value value to set the Comment
     */
    public void setComment(String value) {
        setAttributeInternal(COMMENT, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Long getLastUpdatedBy() {
        return (Long) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Long value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Long getCreatedBy() {
        return (Long) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Long value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the value of LastUpdateLogin
     */
    public Long getLastUpdateLogin() {
        return (Long) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(Long value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for ImageName, using the alias name ImageName.
     * @return the value of ImageName
     */
    public String getImageName() {
        return (String) getAttributeInternal(IMAGENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImageName.
     * @param value value to set the ImageName
     */
    public void setImageName(String value) {
        setAttributeInternal(IMAGENAME, value);
    }

    /**
     * Gets the attribute value for ImagePath, using the alias name ImagePath.
     * @return the value of ImagePath
     */
    public String getImagePath() {
        return (String) getAttributeInternal(IMAGEPATH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImagePath.
     * @param value value to set the ImagePath
     */
    public void setImagePath(String value) {
        setAttributeInternal(IMAGEPATH, value);
    }

    /**
     * Gets the attribute value for DocumentFile, using the alias name DocumentFile.
     * @return the value of DocumentFile
     */
    public String getDocumentFile() {
        return (String) getAttributeInternal(DOCUMENTFILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocumentFile.
     * @param value value to set the DocumentFile
     */
    public void setDocumentFile(String value) {
        setAttributeInternal(DOCUMENTFILE, value);
    }

    /**
     * Gets the attribute value for ImageFile, using the alias name ImageFile.
     * @return the value of ImageFile
     */
    public String getImageFile() {
        return (String) getAttributeInternal(IMAGEFILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImageFile.
     * @param value value to set the ImageFile
     */
    public void setImageFile(String value) {
        setAttributeInternal(IMAGEFILE, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getXwrlResponseEntityColumns() {
        return (EntityImpl) getAttributeInternal(XWRLRESPONSEENTITYCOLUMNS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setXwrlResponseEntityColumns(EntityImpl value) {
        setAttributeInternal(XWRLRESPONSEENTITYCOLUMNS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getXwrlResponseIndColumns() {
        return (EntityImpl) getAttributeInternal(XWRLRESPONSEINDCOLUMNS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setXwrlResponseIndColumns(EntityImpl value) {
        setAttributeInternal(XWRLRESPONSEINDCOLUMNS, value);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);

        LOGGER.finest("create");
        String sql = null;
        BigDecimal id = null;
        String caseId = null;
        CallableStatement stmt = null;
        String result = null;
        BigDecimal lineNumber = null;
        ResultSet rs;

        id = nextVal("XWRL_ALERT_DOCUMENTS_SEQ").bigDecimalValue();
        LOGGER.finest("id: " + id.toString());
        this.setId(id);

        Integer userId = (Integer) ADFContext.getCurrent().getSessionScope().get("UserId");
        Integer sessionId = (Integer) ADFContext.getCurrent().getSessionScope().get("SessionId");
        Timestamp time = new Timestamp(System.currentTimeMillis());

        if (userId != null) {
            this.setCreatedBy(Long.valueOf(userId));
            this.setLastUpdatedBy(Long.valueOf(userId));
        }

        if (sessionId != null) {
            this.setLastUpdateLogin(Long.valueOf(sessionId));
        }

        this.setCreationDate(time);
        this.setLastUpdateDate(time);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            super.lock();
        }
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == this.DML_UPDATE) {
            Integer userId = (Integer) ADFContext.getCurrent().getSessionScope().get("UserId");
            Integer sessionId = (Integer) ADFContext.getCurrent().getSessionScope().get("SessionId");
            Timestamp time = new Timestamp(System.currentTimeMillis());

            if (userId != null) {                
                this.setLastUpdatedBy(Long.valueOf(userId));
            }

            if (sessionId != null) {
                this.setLastUpdateLogin(Long.valueOf(sessionId));
            }

            this.setLastUpdateDate(time);            
        }
        super.doDML(operation, e);
    }

    protected oracle.jbo.domain.Number nextVal(String sequenceName) {
        SequenceImpl s = new SequenceImpl(sequenceName, getDBTransaction());
        return s.getSequenceNumber();
    }
    }

