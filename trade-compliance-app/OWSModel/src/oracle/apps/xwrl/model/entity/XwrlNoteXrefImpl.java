package oracle.apps.xwrl.model.entity;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 07 15:49:53 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XwrlNoteXrefImpl extends EntityImpl {
   

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);

        
        BigDecimal id = null;
       

        id = nextVal("xwrl_note_xref_seq").bigDecimalValue();
       
        this.setId(id);
        
        
        System.out.println("Id:"+id.intValue());
        
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        AlertId,
        AliasId,
        CaseKey,
        CreatedBy,
        CreationDate,
        EnabledFlag,
        FromState,
        Id,
        LastUpdatedBy,
        LastUpdateDate,
        LastUpdateLogin,
        LineNumber,
        ListId,
        MasterId,
        NoteId,
        RecordComment,
        RequestId,
        RowID,
        SourceId,
        SourceTable,
        SourceTableColumn,
        Status,
        ToState,
        XrefId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ALERTID = AttributesEnum.AlertId.index();
    public static final int ALIASID = AttributesEnum.AliasId.index();
    public static final int CASEKEY = AttributesEnum.CaseKey.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int ENABLEDFLAG = AttributesEnum.EnabledFlag.index();
    public static final int FROMSTATE = AttributesEnum.FromState.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LINENUMBER = AttributesEnum.LineNumber.index();
    public static final int LISTID = AttributesEnum.ListId.index();
    public static final int MASTERID = AttributesEnum.MasterId.index();
    public static final int NOTEID = AttributesEnum.NoteId.index();
    public static final int RECORDCOMMENT = AttributesEnum.RecordComment.index();
    public static final int REQUESTID = AttributesEnum.RequestId.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int SOURCEID = AttributesEnum.SourceId.index();
    public static final int SOURCETABLE = AttributesEnum.SourceTable.index();
    public static final int SOURCETABLECOLUMN = AttributesEnum.SourceTableColumn.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int TOSTATE = AttributesEnum.ToState.index();
    public static final int XREFID = AttributesEnum.XrefId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XwrlNoteXrefImpl() {
    }

    /**
     * Gets the attribute value for AlertId, using the alias name AlertId.
     * @return the value of AlertId
     */
    public String getAlertId() {
        return (String) getAttributeInternal(ALERTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AlertId.
     * @param value value to set the AlertId
     */
    public void setAlertId(String value) {
        setAttributeInternal(ALERTID, value);
    }

    /**
     * Gets the attribute value for AliasId, using the alias name AliasId.
     * @return the value of AliasId
     */
    public BigDecimal getAliasId() {
        return (BigDecimal) getAttributeInternal(ALIASID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AliasId.
     * @param value value to set the AliasId
     */
    public void setAliasId(BigDecimal value) {
        setAttributeInternal(ALIASID, value);
    }

    /**
     * Gets the attribute value for CaseKey, using the alias name CaseKey.
     * @return the value of CaseKey
     */
    public String getCaseKey() {
        return (String) getAttributeInternal(CASEKEY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CaseKey.
     * @param value value to set the CaseKey
     */
    public void setCaseKey(String value) {
        setAttributeInternal(CASEKEY, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Long getCreatedBy() {
        return (Long) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Long value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for EnabledFlag, using the alias name EnabledFlag.
     * @return the value of EnabledFlag
     */
    public String getEnabledFlag() {
        return (String) getAttributeInternal(ENABLEDFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnabledFlag.
     * @param value value to set the EnabledFlag
     */
    public void setEnabledFlag(String value) {
        setAttributeInternal(ENABLEDFLAG, value);
    }

    /**
     * Gets the attribute value for FromState, using the alias name FromState.
     * @return the value of FromState
     */
    public String getFromState() {
        return (String) getAttributeInternal(FROMSTATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromState.
     * @param value value to set the FromState
     */
    public void setFromState(String value) {
        setAttributeInternal(FROMSTATE, value);
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Long getLastUpdatedBy() {
        return (Long) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Long value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the value of LastUpdateLogin
     */
    public Long getLastUpdateLogin() {
        return (Long) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(Long value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LineNumber, using the alias name LineNumber.
     * @return the value of LineNumber
     */
    public BigDecimal getLineNumber() {
        return (BigDecimal) getAttributeInternal(LINENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineNumber.
     * @param value value to set the LineNumber
     */
    public void setLineNumber(BigDecimal value) {
        setAttributeInternal(LINENUMBER, value);
    }

    /**
     * Gets the attribute value for ListId, using the alias name ListId.
     * @return the value of ListId
     */
    public BigDecimal getListId() {
        return (BigDecimal) getAttributeInternal(LISTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ListId.
     * @param value value to set the ListId
     */
    public void setListId(BigDecimal value) {
        setAttributeInternal(LISTID, value);
    }

    /**
     * Gets the attribute value for MasterId, using the alias name MasterId.
     * @return the value of MasterId
     */
    public BigDecimal getMasterId() {
        return (BigDecimal) getAttributeInternal(MASTERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MasterId.
     * @param value value to set the MasterId
     */
    public void setMasterId(BigDecimal value) {
        setAttributeInternal(MASTERID, value);
    }

    /**
     * Gets the attribute value for NoteId, using the alias name NoteId.
     * @return the value of NoteId
     */
    public BigDecimal getNoteId() {
        return (BigDecimal) getAttributeInternal(NOTEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoteId.
     * @param value value to set the NoteId
     */
    public void setNoteId(BigDecimal value) {
        setAttributeInternal(NOTEID, value);
    }

    /**
     * Gets the attribute value for RecordComment, using the alias name RecordComment.
     * @return the value of RecordComment
     */
    public String getRecordComment() {
        return (String) getAttributeInternal(RECORDCOMMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecordComment.
     * @param value value to set the RecordComment
     */
    public void setRecordComment(String value) {
        setAttributeInternal(RECORDCOMMENT, value);
    }

    /**
     * Gets the attribute value for RequestId, using the alias name RequestId.
     * @return the value of RequestId
     */
    public BigDecimal getRequestId() {
        return (BigDecimal) getAttributeInternal(REQUESTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestId.
     * @param value value to set the RequestId
     */
    public void setRequestId(BigDecimal value) {
        setAttributeInternal(REQUESTID, value);
    }

    /**
     * Gets the attribute value for RowID, using the alias name RowID.
     * @return the value of RowID
     */
    public RowID getRowID() {
        return (RowID) getAttributeInternal(ROWID);
    }

    /**
     * Gets the attribute value for SourceId, using the alias name SourceId.
     * @return the value of SourceId
     */
    public BigDecimal getSourceId() {
        return (BigDecimal) getAttributeInternal(SOURCEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceId.
     * @param value value to set the SourceId
     */
    public void setSourceId(BigDecimal value) {
        setAttributeInternal(SOURCEID, value);
    }

    /**
     * Gets the attribute value for SourceTable, using the alias name SourceTable.
     * @return the value of SourceTable
     */
    public String getSourceTable() {
        return (String) getAttributeInternal(SOURCETABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceTable.
     * @param value value to set the SourceTable
     */
    public void setSourceTable(String value) {
        setAttributeInternal(SOURCETABLE, value);
    }

    /**
     * Gets the attribute value for SourceTableColumn, using the alias name SourceTableColumn.
     * @return the value of SourceTableColumn
     */
    public String getSourceTableColumn() {
        return (String) getAttributeInternal(SOURCETABLECOLUMN);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceTableColumn.
     * @param value value to set the SourceTableColumn
     */
    public void setSourceTableColumn(String value) {
        setAttributeInternal(SOURCETABLECOLUMN, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for ToState, using the alias name ToState.
     * @return the value of ToState
     */
    public String getToState() {
        return (String) getAttributeInternal(TOSTATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToState.
     * @param value value to set the ToState
     */
    public void setToState(String value) {
        setAttributeInternal(TOSTATE, value);
    }

    /**
     * Gets the attribute value for XrefId, using the alias name XrefId.
     * @return the value of XrefId
     */
    public BigDecimal getXrefId() {
        return (BigDecimal) getAttributeInternal(XREFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for XrefId.
     * @param value value to set the XrefId
     */
    public void setXrefId(BigDecimal value) {
        setAttributeInternal(XREFID, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("oracle.apps.xwrl.model.entity.XwrlNoteXref");
    }
    
    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) 
        {
            try {
                Integer userId = (Integer) ADFContext.getCurrent().getSessionScope().get("UserId");
                Integer sessionId = (Integer) ADFContext.getCurrent().getSessionScope().get("SessionId");
                Timestamp time = new Timestamp(System.currentTimeMillis());

                if (userId != null) {
                    this.setLastUpdatedBy(Long.valueOf(userId));
                }

                if (sessionId != null) {
                    this.setLastUpdateLogin(Long.valueOf(sessionId));
                }

                this.setLastUpdateDate(time);
            } catch (Exception e1) {
                // TODO: Add catch code
                e1.printStackTrace();
            }           
        }
        super.doDML(operation, e);
    }

    protected oracle.jbo.domain.Number nextVal(String sequenceName) {
        SequenceImpl s = new SequenceImpl(sequenceName, getDBTransaction());
        return s.getSequenceNumber();
    }
}

