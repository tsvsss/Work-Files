package com.rmi.manualtradecompliance.adfbc.views;

import com.rmi.manualtradecompliance.adfbc.services.RMIManualTradeComplianceAppModuleImpl;

import com.rmi.manualtradecompliance.adfbc.utils.AdfUtils;

import java.math.BigDecimal;

import java.util.Date;

import javax.faces.application.FacesMessage;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.RowID;
import oracle.jbo.domain.Timestamp;

import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 06 12:32:58 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DualCreateVettingViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Selectobjects0,
        TransNameScreened,
        TransEntityType,
        TransGender,
        TransDateOfBirth,
        TransIdType,
        TransIdNumber,
        TransPassIssuCntryCode,
        TransPassIssuCntryName,
        TransCtznshpCntryCode,
        TransCtznshpCntryName,
        TransResdnceCntryCode,
        TransResdnceCntryName,
        TransCityName,
        TransCityId,
        TransOnlineConfirmationNumber,
        TransOnlineConsentStartDate,
        TransOnlineConsentEndDate,
        TransUploadedConsentStartDate,
        TransUploadedConsentEndDate,
        TransUploadedConsentEdocId,
        TransOperationType,
        TransAliasNameScreened,
        TransNameScreenedUpdatable,
        TransUpdateCountryName,
        TransUpdateCountryIsoAlphaCode,
        TransUpdateCountryCode,
        TransUpdateCityName,
        TransUpdateCityId,
        TransId,
        TransSeafarerId,
        TransConsentEntityType,
        TransMarketingCommFlag,
        TransIMONumber,
        TransLegacyVettingFlag,
        TransRelationshipType,
        TransSourceId,
        TransSourceTable,
        TransSourceTableColumn,
        TransOnlineConfirmationNumberVerify,
        TransOnlineConsentId,
        TransOnlineUploadedConsentEdocId,
        TransEastAsianOriginName,
        TransPassIssuCntryCode1,
        TransCtznshpCntryCode1,
        LovEntityTypeVO1,
        LovGenderVO1,
        LovIdTypeVO1,
        LovCountriesVO1,
        CityNameByIdRO1,
        LovCityNameVO1,
        LovVettingsNameScreenedView1,
        LovOperationTypeVew1,
        LovAliasNameScreenedView1,
        LovCityNameView1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return DualCreateVettingViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return DualCreateVettingViewRowImpl.AttributesEnum.firstIndex() +
                   DualCreateVettingViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = DualCreateVettingViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SELECTOBJECTS0 = AttributesEnum.Selectobjects0.index();
    public static final int TRANSNAMESCREENED = AttributesEnum.TransNameScreened.index();
    public static final int TRANSENTITYTYPE = AttributesEnum.TransEntityType.index();
    public static final int TRANSGENDER = AttributesEnum.TransGender.index();
    public static final int TRANSDATEOFBIRTH = AttributesEnum.TransDateOfBirth.index();
    public static final int TRANSIDTYPE = AttributesEnum.TransIdType.index();
    public static final int TRANSIDNUMBER = AttributesEnum.TransIdNumber.index();
    public static final int TRANSPASSISSUCNTRYCODE = AttributesEnum.TransPassIssuCntryCode.index();
    public static final int TRANSPASSISSUCNTRYNAME = AttributesEnum.TransPassIssuCntryName.index();
    public static final int TRANSCTZNSHPCNTRYCODE = AttributesEnum.TransCtznshpCntryCode.index();
    public static final int TRANSCTZNSHPCNTRYNAME = AttributesEnum.TransCtznshpCntryName.index();
    public static final int TRANSRESDNCECNTRYCODE = AttributesEnum.TransResdnceCntryCode.index();
    public static final int TRANSRESDNCECNTRYNAME = AttributesEnum.TransResdnceCntryName.index();
    public static final int TRANSCITYNAME = AttributesEnum.TransCityName.index();
    public static final int TRANSCITYID = AttributesEnum.TransCityId.index();
    public static final int TRANSONLINECONFIRMATIONNUMBER = AttributesEnum.TransOnlineConfirmationNumber.index();
    public static final int TRANSONLINECONSENTSTARTDATE = AttributesEnum.TransOnlineConsentStartDate.index();
    public static final int TRANSONLINECONSENTENDDATE = AttributesEnum.TransOnlineConsentEndDate.index();
    public static final int TRANSUPLOADEDCONSENTSTARTDATE = AttributesEnum.TransUploadedConsentStartDate.index();
    public static final int TRANSUPLOADEDCONSENTENDDATE = AttributesEnum.TransUploadedConsentEndDate.index();
    public static final int TRANSUPLOADEDCONSENTEDOCID = AttributesEnum.TransUploadedConsentEdocId.index();
    public static final int TRANSOPERATIONTYPE = AttributesEnum.TransOperationType.index();
    public static final int TRANSALIASNAMESCREENED = AttributesEnum.TransAliasNameScreened.index();
    public static final int TRANSNAMESCREENEDUPDATABLE = AttributesEnum.TransNameScreenedUpdatable.index();
    public static final int TRANSUPDATECOUNTRYNAME = AttributesEnum.TransUpdateCountryName.index();
    public static final int TRANSUPDATECOUNTRYISOALPHACODE = AttributesEnum.TransUpdateCountryIsoAlphaCode.index();
    public static final int TRANSUPDATECOUNTRYCODE = AttributesEnum.TransUpdateCountryCode.index();
    public static final int TRANSUPDATECITYNAME = AttributesEnum.TransUpdateCityName.index();
    public static final int TRANSUPDATECITYID = AttributesEnum.TransUpdateCityId.index();
    public static final int TRANSID = AttributesEnum.TransId.index();
    public static final int TRANSSEAFARERID = AttributesEnum.TransSeafarerId.index();
    public static final int TRANSCONSENTENTITYTYPE = AttributesEnum.TransConsentEntityType.index();
    public static final int TRANSMARKETINGCOMMFLAG = AttributesEnum.TransMarketingCommFlag.index();
    public static final int TRANSIMONUMBER = AttributesEnum.TransIMONumber.index();
    public static final int TRANSLEGACYVETTINGFLAG = AttributesEnum.TransLegacyVettingFlag.index();
    public static final int TRANSRELATIONSHIPTYPE = AttributesEnum.TransRelationshipType.index();
    public static final int TRANSSOURCEID = AttributesEnum.TransSourceId.index();
    public static final int TRANSSOURCETABLE = AttributesEnum.TransSourceTable.index();
    public static final int TRANSSOURCETABLECOLUMN = AttributesEnum.TransSourceTableColumn.index();
    public static final int TRANSONLINECONFIRMATIONNUMBERVERIFY =
        AttributesEnum.TransOnlineConfirmationNumberVerify.index();
    public static final int TRANSONLINECONSENTID = AttributesEnum.TransOnlineConsentId.index();
    public static final int TRANSONLINEUPLOADEDCONSENTEDOCID = AttributesEnum.TransOnlineUploadedConsentEdocId.index();
    public static final int TRANSEASTASIANORIGINNAME = AttributesEnum.TransEastAsianOriginName.index();
    public static final int TRANSPASSISSUCNTRYCODE1 = AttributesEnum.TransPassIssuCntryCode1.index();
    public static final int TRANSCTZNSHPCNTRYCODE1 = AttributesEnum.TransCtznshpCntryCode1.index();
    public static final int LOVENTITYTYPEVO1 = AttributesEnum.LovEntityTypeVO1.index();
    public static final int LOVGENDERVO1 = AttributesEnum.LovGenderVO1.index();
    public static final int LOVIDTYPEVO1 = AttributesEnum.LovIdTypeVO1.index();
    public static final int LOVCOUNTRIESVO1 = AttributesEnum.LovCountriesVO1.index();
    public static final int CITYNAMEBYIDRO1 = AttributesEnum.CityNameByIdRO1.index();
    public static final int LOVCITYNAMEVO1 = AttributesEnum.LovCityNameVO1.index();
    public static final int LOVVETTINGSNAMESCREENEDVIEW1 = AttributesEnum.LovVettingsNameScreenedView1.index();
    public static final int LOVOPERATIONTYPEVEW1 = AttributesEnum.LovOperationTypeVew1.index();
    public static final int LOVALIASNAMESCREENEDVIEW1 = AttributesEnum.LovAliasNameScreenedView1.index();
    public static final int LOVCITYNAMEVIEW1 = AttributesEnum.LovCityNameView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DualCreateVettingViewRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Selectobjects0.
     * @return the Selectobjects0
     */
    public String getSelectobjects0() {
        return (String) getAttributeInternal(SELECTOBJECTS0);
    }

    /**
     * Gets the attribute value for the calculated attribute TransNameScreened.
     * @return the TransNameScreened
     */
    public String getTransNameScreened() {
        return (String) getAttributeInternal(TRANSNAMESCREENED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransNameScreened.
     * @param value value to set the  TransNameScreened
     */
    public void setTransNameScreened(String value) {
        setAttributeInternal(TRANSNAMESCREENED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEntityType.
     * @return the TransEntityType
     */
    public String getTransEntityType() {
        return (String) getAttributeInternal(TRANSENTITYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEntityType.
     * @param value value to set the  TransEntityType
     */
    public void setTransEntityType(String value) {
        setAttributeInternal(TRANSENTITYTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGender.
     * @return the TransGender
     */
    public String getTransGender() {
        return (String) getAttributeInternal(TRANSGENDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGender.
     * @param value value to set the  TransGender
     */
    public void setTransGender(String value) {
        setAttributeInternal(TRANSGENDER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDateOfBirth.
     * @return the TransDateOfBirth
     */
    public Timestamp getTransDateOfBirth() {
        return (Timestamp) getAttributeInternal(TRANSDATEOFBIRTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDateOfBirth.
     * @param value value to set the  TransDateOfBirth
     */
    public void setTransDateOfBirth(Timestamp value) {
        setAttributeInternal(TRANSDATEOFBIRTH, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIdType.
     * @return the TransIdType
     */
    public String getTransIdType() {
        return (String) getAttributeInternal(TRANSIDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIdType.
     * @param value value to set the  TransIdType
     */
    public void setTransIdType(String value) {
        setAttributeInternal(TRANSIDTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIdNumber.
     * @return the TransIdNumber
     */
    public String getTransIdNumber() {
        return (String) getAttributeInternal(TRANSIDNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIdNumber.
     * @param value value to set the  TransIdNumber
     */
    public void setTransIdNumber(String value) {
        setAttributeInternal(TRANSIDNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPassIssuCntryCode.
     * @return the TransPassIssuCntryCode
     */
    public String getTransPassIssuCntryCode() {
        return (String) getAttributeInternal(TRANSPASSISSUCNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPassIssuCntryCode.
     * @param value value to set the  TransPassIssuCntryCode
     */
    public void setTransPassIssuCntryCode(String value) {
        setAttributeInternal(TRANSPASSISSUCNTRYCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPassIssuCntryName.
     * @return the TransPassIssuCntryName
     */
    public String getTransPassIssuCntryName() 
    {
        try 
        {
            if (getAttributeInternal(TRANSPASSISSUCNTRYNAME) == null && getTransPassIssuCntryCode() != null) {
                ViewObjectImpl cntryVo = getAm().getLovCountriesView1();
                cntryVo.setNamedWhereClauseParam("pIsoCode", getTransPassIssuCntryCode());
                cntryVo.executeQuery();
                
                Row[] frRows = cntryVo.getAllRowsInRange();

                if (frRows.length > 0 && frRows[0].getAttribute("CountryName") != null) {
                    return (String) frRows[0].getAttribute("CountryName");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                                   "Please contact your System Administrator.", "",
                                                   FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANSPASSISSUCNTRYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPassIssuCntryName.
     * @param value value to set the  TransPassIssuCntryName
     */
    public void setTransPassIssuCntryName(String value) {
        setAttributeInternal(TRANSPASSISSUCNTRYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCtznshpCntryCode.
     * @return the TransCtznshpCntryCode
     */
    public String getTransCtznshpCntryCode() {
        return (String) getAttributeInternal(TRANSCTZNSHPCNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCtznshpCntryCode.
     * @param value value to set the  TransCtznshpCntryCode
     */
    public void setTransCtznshpCntryCode(String value) {
        setAttributeInternal(TRANSCTZNSHPCNTRYCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCtznshpCntryName.
     * @return the TransCtznshpCntryName
     */
    public String getTransCtznshpCntryName() 
    {
        try 
        {
            if (getAttributeInternal(TRANSCTZNSHPCNTRYNAME) == null && getTransCtznshpCntryCode() != null) {
                ViewObjectImpl cntryVo = getAm().getLovCountriesView1();
                cntryVo.setNamedWhereClauseParam("pIsoCode", getTransCtznshpCntryCode());
                cntryVo.executeQuery();
                
                Row[] frRows = cntryVo.getAllRowsInRange();

                if (frRows.length > 0 && frRows[0].getAttribute("CountryName") != null) {
                    return (String) frRows[0].getAttribute("CountryName");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                                   "Please contact your System Administrator.", "",
                                                   FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANSCTZNSHPCNTRYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCtznshpCntryName.
     * @param value value to set the  TransCtznshpCntryName
     */
    public void setTransCtznshpCntryName(String value) {
        setAttributeInternal(TRANSCTZNSHPCNTRYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransResdnceCntryCode.
     * @return the TransResdnceCntryCode
     */
    public String getTransResdnceCntryCode() {
        return (String) getAttributeInternal(TRANSRESDNCECNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransResdnceCntryCode.
     * @param value value to set the  TransResdnceCntryCode
     */
    public void setTransResdnceCntryCode(String value)
    {
        try 
        {
            if (value != null) {
                setTransCityId(null);
                setTransCityName(null);
            }
        } catch (Exception e) {
            e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while updating data." +
                                                   "Please contact your System Administrator.", "",
                                                   FacesMessage.SEVERITY_ERROR);
        }
        
        setAttributeInternal(TRANSRESDNCECNTRYCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransResdnceCntryName.
     * @return the TransResdnceCntryName
     */
    public String getTransResdnceCntryName() 
    {
        try 
        {
            if (getAttributeInternal(TRANSRESDNCECNTRYNAME) == null && getTransResdnceCntryCode() != null) {
                ViewObjectImpl cntryVo = getAm().getLovCountriesView1();
                cntryVo.setNamedWhereClauseParam("pIsoCode", getTransResdnceCntryCode());
                cntryVo.executeQuery();
                
                Row[] frRows = cntryVo.getAllRowsInRange();

                if (frRows.length > 0 && frRows[0].getAttribute("CountryName") != null) {
                    return (String) frRows[0].getAttribute("CountryName");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                                   "Please contact your System Administrator.", "",
                                                   FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANSRESDNCECNTRYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransResdnceCntryName.
     * @param value value to set the  TransResdnceCntryName
     */
    public void setTransResdnceCntryName(String value) {
        setAttributeInternal(TRANSRESDNCECNTRYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCityName.
     * @return the TransCityName
     */
    public String getTransCityName()
    {
        try 
        {
            if (getAttributeInternal(TRANSCITYNAME) == null && this.getTransCityId() != null) {
                ViewObjectImpl cityVo = getAm().getCityNameByIdView();
                cityVo.setNamedWhereClauseParam("pCityId", getTransCityId());
                cityVo.executeQuery();

                Row[] cityRows = cityVo.getAllRowsInRange();

                if (cityRows.length > 0 && cityRows[0].getAttribute("CityName") != null)
                    return (String) cityRows[0].getAttribute("CityName");
            }
        } catch (Exception e) {
            e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                                   "Please contact your System Administrator.", "",
                                                   FacesMessage.SEVERITY_ERROR);
        } 
        
        return (String) getAttributeInternal(TRANSCITYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCityName.
     * @param value value to set the  TransCityName
     */
    public void setTransCityName(String value) {
        setAttributeInternal(TRANSCITYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCityCode.
     * @return the TransCityCode
     */
    public Integer getTransCityId() {
        return (Integer) getAttributeInternal(TRANSCITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCityId.
     * @param value value to set the  TransCityId
     */
    public void setTransCityId(Integer value) {
        setAttributeInternal(TRANSCITYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOnlineConfirmationNumber.
     * @return the TransOnlineConfirmationNumber
     */
    public String getTransOnlineConfirmationNumber() {
        return (String) getAttributeInternal(TRANSONLINECONFIRMATIONNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOnlineConfirmationNumber.
     * @param value value to set the  TransOnlineConfirmationNumber
     */
    public void setTransOnlineConfirmationNumber(String value) {
        setAttributeInternal(TRANSONLINECONFIRMATIONNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOnlineConsentStartDate.
     * @return the TransOnlineConsentStartDate
     */
    public Timestamp getTransOnlineConsentStartDate() {
        return (Timestamp) getAttributeInternal(TRANSONLINECONSENTSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOnlineConsentStartDate.
     * @param value value to set the  TransOnlineConsentStartDate
     */
    public void setTransOnlineConsentStartDate(Timestamp value) {
        setAttributeInternal(TRANSONLINECONSENTSTARTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOnlineConsentEndDate.
     * @return the TransOnlineConsentEndDate
     */
    public Timestamp getTransOnlineConsentEndDate() {
        return (Timestamp) getAttributeInternal(TRANSONLINECONSENTENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOnlineConsentEndDate.
     * @param value value to set the  TransOnlineConsentEndDate
     */
    public void setTransOnlineConsentEndDate(Timestamp value) {
        setAttributeInternal(TRANSONLINECONSENTENDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUploadedConsentStartDate.
     * @return the TransUploadedConsentStartDate
     */
    public Timestamp getTransUploadedConsentStartDate() {
        return (Timestamp) getAttributeInternal(TRANSUPLOADEDCONSENTSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUploadedConsentStartDate.
     * @param value value to set the  TransUploadedConsentStartDate
     */
    public void setTransUploadedConsentStartDate(Timestamp value)
    {
        if (value != null) 
        {
            try 
            {
                Date issueDate = (new oracle.jbo.domain.Timestamp(value)).dateValue();
                Date expDate = new Date(issueDate.getTime() + 1825l * 24l * 60l * 60l * 1000l);
                if (expDate != null)
                    this.setTransUploadedConsentEndDate(new oracle.jbo.domain.Timestamp(expDate.getTime()));
            } catch (Exception e) {
                e.printStackTrace();
                AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while setting Expiration date." +
                                                 "Please contact your System Administrator." , 
                                                 "", FacesMessage.SEVERITY_ERROR); 
            }
        }
        setAttributeInternal(TRANSUPLOADEDCONSENTSTARTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUploadedConsentEndDate.
     * @return the TransUploadedConsentEndDate
     */
    public Timestamp getTransUploadedConsentEndDate() {
        return (Timestamp) getAttributeInternal(TRANSUPLOADEDCONSENTENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUploadedConsentEndDate.
     * @param value value to set the  TransUploadedConsentEndDate
     */
    public void setTransUploadedConsentEndDate(Timestamp value) {
        setAttributeInternal(TRANSUPLOADEDCONSENTENDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUploadedConsentEdocId.
     * @return the TransUploadedConsentEdocId
     */
    public Integer getTransUploadedConsentEdocId() {
        return (Integer) getAttributeInternal(TRANSUPLOADEDCONSENTEDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUploadedConsentEdocId.
     * @param value value to set the  TransUploadedConsentEdocId
     */
    public void setTransUploadedConsentEdocId(Integer value) {
        setAttributeInternal(TRANSUPLOADEDCONSENTEDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOperationType.
     * @return the TransOperationType
     */
    public String getTransOperationType()
    {
        if(getAttributeInternal(TRANSOPERATIONTYPE) != null)
            return (String) getAttributeInternal(TRANSOPERATIONTYPE);
        else
            return "C";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOperationType.
     * @param value value to set the  TransOperationType
     */
    public void setTransOperationType(String value) {
        setAttributeInternal(TRANSOPERATIONTYPE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransAliasNameScreened.
     * @return the TransAliasNameScreened
     */
    public String getTransAliasNameScreened() {
        return (String) getAttributeInternal(TRANSALIASNAMESCREENED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAliasNameScreened.
     * @param value value to set the  TransAliasNameScreened
     */
    public void setTransAliasNameScreened(String value) {
        setAttributeInternal(TRANSALIASNAMESCREENED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransNameScreenedUpdatable.
     * @return the TransNameScreenedUpdatable
     */
    public String getTransNameScreenedUpdatable() {
        return (String) getAttributeInternal(TRANSNAMESCREENEDUPDATABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransNameScreenedUpdatable.
     * @param value value to set the  TransNameScreenedUpdatable
     */
    public void setTransNameScreenedUpdatable(String value) {
        setAttributeInternal(TRANSNAMESCREENEDUPDATABLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UpdateCountryName.
     * @return the UpdateCountryName
     */
    public String getTransUpdateCountryName() {
        return (String) getAttributeInternal(TRANSUPDATECOUNTRYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UpdateCountryName.
     * @param value value to set the  UpdateCountryName
     */
    public void setTransUpdateCountryName(String value) {
        setAttributeInternal(TRANSUPDATECOUNTRYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UpdateCountryIsoAlphaCode.
     * @return the UpdateCountryIsoAlphaCode
     */
    public String getTransUpdateCountryIsoAlphaCode() {
        return (String) getAttributeInternal(TRANSUPDATECOUNTRYISOALPHACODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UpdateCountryIsoAlphaCode.
     * @param value value to set the  UpdateCountryIsoAlphaCode
     */
    public void setTransUpdateCountryIsoAlphaCode(String value) {
        setAttributeInternal(TRANSUPDATECOUNTRYISOALPHACODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UpdateCountryCode.
     * @return the UpdateCountryCode
     */
    public String getTransUpdateCountryCode() {
        return (String) getAttributeInternal(TRANSUPDATECOUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UpdateCountryCode.
     * @param value value to set the  UpdateCountryCode
     */
    public void setTransUpdateCountryCode(String value) {
        setAttributeInternal(TRANSUPDATECOUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UpdateCityName.
     * @return the UpdateCityName
     */
    public String getTransUpdateCityName() {
        return (String) getAttributeInternal(TRANSUPDATECITYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UpdateCityName.
     * @param value value to set the  UpdateCityName
     */
    public void setTransUpdateCityName(String value) {
        setAttributeInternal(TRANSUPDATECITYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UpdateCityId.
     * @return the UpdateCityId
     */
    public Integer getTransUpdateCityId() {
        return (Integer) getAttributeInternal(TRANSUPDATECITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UpdateCityId.
     * @param value value to set the  UpdateCityId
     */
    public void setTransUpdateCityId(Integer value) {
        setAttributeInternal(TRANSUPDATECITYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransId.
     * @return the TransId
     */
    public Integer getTransId() {
        return (Integer) getAttributeInternal(TRANSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransId.
     * @param value value to set the  TransId
     */
    public void setTransId(Integer value) {
        setAttributeInternal(TRANSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSeafarerId.
     * @return the TransSeafarerId
     */
    public String getTransSeafarerId() {
        return (String) getAttributeInternal(TRANSSEAFARERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSeafarerId.
     * @param value value to set the  TransSeafarerId
     */
    public void setTransSeafarerId(String value) {
        setAttributeInternal(TRANSSEAFARERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransConsentEntityType.
     * @return the TransConsentEntityType
     */
    public String getTransConsentEntityType() {
        return (String) getAttributeInternal(TRANSCONSENTENTITYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransConsentEntityType.
     * @param value value to set the  TransConsentEntityType
     */
    public void setTransConsentEntityType(String value) {
        setAttributeInternal(TRANSCONSENTENTITYTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMarketingCommFlag.
     * @return the TransMarketingCommFlag
     */
    public String getTransMarketingCommFlag() {
        return (String) getAttributeInternal(TRANSMARKETINGCOMMFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMarketingCommFlag.
     * @param value value to set the  TransMarketingCommFlag
     */
    public void setTransMarketingCommFlag(String value) {
        setAttributeInternal(TRANSMARKETINGCOMMFLAG, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransIMONumber.
     * @return the TransIMONumber
     */
    public String getTransIMONumber() {
        return (String) getAttributeInternal(TRANSIMONUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIMONumber.
     * @param value value to set the  TransIMONumber
     */
    public void setTransIMONumber(String value) {
        setAttributeInternal(TRANSIMONUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLegacyVettingFlag.
     * @return the TransLegacyVettingFlag
     */
    public String getTransLegacyVettingFlag() {
        return (String) getAttributeInternal(TRANSLEGACYVETTINGFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLegacyVettingFlag.
     * @param value value to set the  TransLegacyVettingFlag
     */
    public void setTransLegacyVettingFlag(String value) {
        setAttributeInternal(TRANSLEGACYVETTINGFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RelationshipType.
     * @return the RelationshipType
     */
    public String getTransRelationshipType() {
        return (String) getAttributeInternal(TRANSRELATIONSHIPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RelationshipType.
     * @param value value to set the  RelationshipType
     */
    public void setTransRelationshipType(String value) {
        setAttributeInternal(TRANSRELATIONSHIPTYPE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransSourceId.
     * @return the TransSourceId
     */
    public String getTransSourceId() {
        return (String) getAttributeInternal(TRANSSOURCEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSourceId.
     * @param value value to set the  TransSourceId
     */
    public void setTransSourceId(String value) {
        setAttributeInternal(TRANSSOURCEID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransSourceTable.
     * @return the TransSourceTable
     */
    public String getTransSourceTable() {
        return (String) getAttributeInternal(TRANSSOURCETABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSourceTable.
     * @param value value to set the  TransSourceTable
     */
    public void setTransSourceTable(String value) {
        setAttributeInternal(TRANSSOURCETABLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSourceTableColumn.
     * @return the TransSourceTableColumn
     */
    public String getTransSourceTableColumn() {
        return (String) getAttributeInternal(TRANSSOURCETABLECOLUMN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSourceTableColumn.
     * @param value value to set the  TransSourceTableColumn
     */
    public void setTransSourceTableColumn(String value) {
        setAttributeInternal(TRANSSOURCETABLECOLUMN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOnlineConfirmationNumberVerify.
     * @return the TransOnlineConfirmationNumberVerify
     */
    public String getTransOnlineConfirmationNumberVerify() {
        return (String) getAttributeInternal(TRANSONLINECONFIRMATIONNUMBERVERIFY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOnlineConfirmationNumberVerify.
     * @param value value to set the  TransOnlineConfirmationNumberVerify
     */
    public void setTransOnlineConfirmationNumberVerify(String value) {
        setAttributeInternal(TRANSONLINECONFIRMATIONNUMBERVERIFY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOnlineConsentId.
     * @return the TransOnlineConsentId
     */
    public BigDecimal getTransOnlineConsentId() {
        return (BigDecimal) getAttributeInternal(TRANSONLINECONSENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOnlineConsentId.
     * @param value value to set the  TransOnlineConsentId
     */
    public void setTransOnlineConsentId(BigDecimal value) {
        setAttributeInternal(TRANSONLINECONSENTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOnlineUploadedConsentEdocId.
     * @return the TransOnlineUploadedConsentEdocId
     */
    public String getTransOnlineUploadedConsentEdocId() {
        return (String) getAttributeInternal(TRANSONLINEUPLOADEDCONSENTEDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOnlineUploadedConsentEdocId.
     * @param value value to set the  TransOnlineUploadedConsentEdocId
     */
    public void setTransOnlineUploadedConsentEdocId(String value) {
        setAttributeInternal(TRANSONLINEUPLOADEDCONSENTEDOCID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransEastAsianOriginName.
     * @return the TransEastAsianOriginName
     */
    public String getTransEastAsianOriginName() {
        return (String) getAttributeInternal(TRANSEASTASIANORIGINNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEastAsianOriginName.
     * @param value value to set the  TransEastAsianOriginName
     */
    public void setTransEastAsianOriginName(String value) {
        setAttributeInternal(TRANSEASTASIANORIGINNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PassportIssuingCountryCode1.
     * @return the PassportIssuingCountryCode1
     */
    public String getTransPassIssuCntryCode1() {
        return (String) getAttributeInternal(TRANSPASSISSUCNTRYCODE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPassIssuCntryCode1.
     * @param value value to set the  TransPassIssuCntryCode1
     */
    public void setTransPassIssuCntryCode1(String value) {
        setAttributeInternal(TRANSPASSISSUCNTRYCODE1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CitizenshipCountryCode1.
     * @return the CitizenshipCountryCode1
     */
    public String getTransCtznshpCntryCode1() {
        return (String) getAttributeInternal(TRANSCTZNSHPCNTRYCODE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCtznshpCntryCode1.
     * @param value value to set the  TransCtznshpCntryCode1
     */
    public void setTransCtznshpCntryCode1(String value) {
        setAttributeInternal(TRANSCTZNSHPCNTRYCODE1, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEntityTypeVO1.
     */
    public RowSet getLovEntityTypeVO1() {
        return (RowSet) getAttributeInternal(LOVENTITYTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovGenderVO1.
     */
    public RowSet getLovGenderVO1() {
        return (RowSet) getAttributeInternal(LOVGENDERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovIdTypeVO1.
     */
    public RowSet getLovIdTypeVO1() {
        return (RowSet) getAttributeInternal(LOVIDTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCountriesVO1.
     */
    public RowSet getLovCountriesVO1() {
        return (RowSet) getAttributeInternal(LOVCOUNTRIESVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CityNameByIdRO1.
     */
    public RowSet getCityNameByIdRO1() {
        return (RowSet) getAttributeInternal(CITYNAMEBYIDRO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCityNameVO1.
     */
    public RowSet getLovCityNameVO1() {
        return (RowSet) getAttributeInternal(LOVCITYNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovVettingsNameScreenedView1.
     */
    public RowSet getLovVettingsNameScreenedView1() {
        return (RowSet) getAttributeInternal(LOVVETTINGSNAMESCREENEDVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOperationTypeVew1.
     */
    public RowSet getLovOperationTypeVew1() {
        return (RowSet) getAttributeInternal(LOVOPERATIONTYPEVEW1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovAliasNameScreenedView1.
     */
    public RowSet getLovAliasNameScreenedView1() {
        return (RowSet) getAttributeInternal(LOVALIASNAMESCREENEDVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCityNameView1.
     */
    public RowSet getLovCityNameView1() {
        return (RowSet) getAttributeInternal(LOVCITYNAMEVIEW1);
    }


    public RMIManualTradeComplianceAppModuleImpl getAm()
    {
        return (RMIManualTradeComplianceAppModuleImpl) this.getApplicationModule();
    }
}

