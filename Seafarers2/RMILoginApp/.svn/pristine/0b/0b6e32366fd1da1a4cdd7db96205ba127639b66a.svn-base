package com.rmi.login.adfbc.entities;

import com.rmi.login.adfbc.extensions.CustomEntity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 31 11:15:29 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RmiUserImpl extends CustomEntity {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        UserId,
        UserName,
        DefaultDateFormat,
        CreatedBy,
        CreationDate,
        LastUpdatedBy,
        LastUpdateDate,
        LastUpdateLogin,
        Password,
        LockoutTime,
        Lockout,
        ResetPassword,
        UserAgreementAccept,
        FirstName,
        LastName,
        EmailId,
        Contact,
        UserType,
        Status,
        Address,
        DefaultProcessingOffice,
        MasterOperator,
        OperatorFlag,
        ApprovalDate,
        ExpirationDate,
        EmailCc,
        EmailBcc,
        InactiveDate,
        AppsContactId,
        ViewOrders,
        FndUserId,
        PasswordUpdationDate,
        OtpStartTime,
        UserLoginTime,
        OtpEndTime;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int USERID = AttributesEnum.UserId.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int DEFAULTDATEFORMAT = AttributesEnum.DefaultDateFormat.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int PASSWORD = AttributesEnum.Password.index();
    public static final int LOCKOUTTIME = AttributesEnum.LockoutTime.index();
    public static final int LOCKOUT = AttributesEnum.Lockout.index();
    public static final int RESETPASSWORD = AttributesEnum.ResetPassword.index();
    public static final int USERAGREEMENTACCEPT = AttributesEnum.UserAgreementAccept.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int EMAILID = AttributesEnum.EmailId.index();
    public static final int CONTACT = AttributesEnum.Contact.index();
    public static final int USERTYPE = AttributesEnum.UserType.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int DEFAULTPROCESSINGOFFICE = AttributesEnum.DefaultProcessingOffice.index();
    public static final int MASTEROPERATOR = AttributesEnum.MasterOperator.index();
    public static final int OPERATORFLAG = AttributesEnum.OperatorFlag.index();
    public static final int APPROVALDATE = AttributesEnum.ApprovalDate.index();
    public static final int EXPIRATIONDATE = AttributesEnum.ExpirationDate.index();
    public static final int EMAILCC = AttributesEnum.EmailCc.index();
    public static final int EMAILBCC = AttributesEnum.EmailBcc.index();
    public static final int INACTIVEDATE = AttributesEnum.InactiveDate.index();
    public static final int APPSCONTACTID = AttributesEnum.AppsContactId.index();
    public static final int VIEWORDERS = AttributesEnum.ViewOrders.index();
    public static final int FNDUSERID = AttributesEnum.FndUserId.index();
    public static final int PASSWORDUPDATIONDATE = AttributesEnum.PasswordUpdationDate.index();
    public static final int OTPSTARTTIME = AttributesEnum.OtpStartTime.index();
    public static final int USERLOGINTIME = AttributesEnum.UserLoginTime.index();
    public static final int OTPENDTIME = AttributesEnum.OtpEndTime.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RmiUserImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.rmi.login.adfbc.entities.RmiUser");
    }


    /**
     * Gets the attribute value for UserId, using the alias name UserId.
     * @return the value of UserId
     */
    public BigDecimal getUserId() {
        return (BigDecimal) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserId.
     * @param value value to set the UserId
     */
    public void setUserId(BigDecimal value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for UserName, using the alias name UserName.
     * @return the value of UserName
     */
    public String getUserName() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserName.
     * @param value value to set the UserName
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for DefaultDateFormat, using the alias name DefaultDateFormat.
     * @return the value of DefaultDateFormat
     */
    public String getDefaultDateFormat() {
        return (String) getAttributeInternal(DEFAULTDATEFORMAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DefaultDateFormat.
     * @param value value to set the DefaultDateFormat
     */
    public void setDefaultDateFormat(String value) {
        setAttributeInternal(DEFAULTDATEFORMAT, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public BigDecimal getLastUpdatedBy() {
        return (BigDecimal) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(BigDecimal value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the value of LastUpdateLogin
     */
    public BigDecimal getLastUpdateLogin() {
        return (BigDecimal) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(BigDecimal value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for Password, using the alias name Password.
     * @return the value of Password
     */
    public String getPassword() {
        return (String) getAttributeInternal(PASSWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Password.
     * @param value value to set the Password
     */
    public void setPassword(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for LockoutTime, using the alias name LockoutTime.
     * @return the value of LockoutTime
     */
    public Timestamp getLockoutTime() {
        return (Timestamp) getAttributeInternal(LOCKOUTTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for LockoutTime.
     * @param value value to set the LockoutTime
     */
    public void setLockoutTime(Timestamp value) {
        setAttributeInternal(LOCKOUTTIME, value);
    }

    /**
     * Gets the attribute value for Lockout, using the alias name Lockout.
     * @return the value of Lockout
     */
    public String getLockout() {
        return (String) getAttributeInternal(LOCKOUT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Lockout.
     * @param value value to set the Lockout
     */
    public void setLockout(String value) {
        setAttributeInternal(LOCKOUT, value);
    }

    /**
     * Gets the attribute value for ResetPassword, using the alias name ResetPassword.
     * @return the value of ResetPassword
     */
    public String getResetPassword() {
        return (String) getAttributeInternal(RESETPASSWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for ResetPassword.
     * @param value value to set the ResetPassword
     */
    public void setResetPassword(String value) {
        setAttributeInternal(RESETPASSWORD, value);
    }

    /**
     * Gets the attribute value for UserAgreementAccept, using the alias name UserAgreementAccept.
     * @return the value of UserAgreementAccept
     */
    public String getUserAgreementAccept() {
        return (String) getAttributeInternal(USERAGREEMENTACCEPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserAgreementAccept.
     * @param value value to set the UserAgreementAccept
     */
    public void setUserAgreementAccept(String value) {
        setAttributeInternal(USERAGREEMENTACCEPT, value);
    }

    /**
     * Gets the attribute value for FirstName, using the alias name FirstName.
     * @return the value of FirstName
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FirstName.
     * @param value value to set the FirstName
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for LastName, using the alias name LastName.
     * @return the value of LastName
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastName.
     * @param value value to set the LastName
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for EmailId, using the alias name EmailId.
     * @return the value of EmailId
     */
    public String getEmailId() {
        return (String) getAttributeInternal(EMAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmailId.
     * @param value value to set the EmailId
     */
    public void setEmailId(String value) {
        setAttributeInternal(EMAILID, value);
    }

    /**
     * Gets the attribute value for Contact, using the alias name Contact.
     * @return the value of Contact
     */
    public BigDecimal getContact() {
        return (BigDecimal) getAttributeInternal(CONTACT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Contact.
     * @param value value to set the Contact
     */
    public void setContact(BigDecimal value) {
        setAttributeInternal(CONTACT, value);
    }

    /**
     * Gets the attribute value for UserType, using the alias name UserType.
     * @return the value of UserType
     */
    public String getUserType() {
        return (String) getAttributeInternal(USERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserType.
     * @param value value to set the UserType
     */
    public void setUserType(String value) {
        setAttributeInternal(USERTYPE, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for Address, using the alias name Address.
     * @return the value of Address
     */
    public String getAddress() {
        return (String) getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Address.
     * @param value value to set the Address
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for DefaultProcessingOffice, using the alias name DefaultProcessingOffice.
     * @return the value of DefaultProcessingOffice
     */
    public String getDefaultProcessingOffice() {
        return (String) getAttributeInternal(DEFAULTPROCESSINGOFFICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DefaultProcessingOffice.
     * @param value value to set the DefaultProcessingOffice
     */
    public void setDefaultProcessingOffice(String value) {
        setAttributeInternal(DEFAULTPROCESSINGOFFICE, value);
    }

    /**
     * Gets the attribute value for MasterOperator, using the alias name MasterOperator.
     * @return the value of MasterOperator
     */
    public String getMasterOperator() {
        return (String) getAttributeInternal(MASTEROPERATOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for MasterOperator.
     * @param value value to set the MasterOperator
     */
    public void setMasterOperator(String value) {
        setAttributeInternal(MASTEROPERATOR, value);
    }

    /**
     * Gets the attribute value for OperatorFlag, using the alias name OperatorFlag.
     * @return the value of OperatorFlag
     */
    public String getOperatorFlag() {
        return (String) getAttributeInternal(OPERATORFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperatorFlag.
     * @param value value to set the OperatorFlag
     */
    public void setOperatorFlag(String value) {
        setAttributeInternal(OPERATORFLAG, value);
    }

    /**
     * Gets the attribute value for ApprovalDate, using the alias name ApprovalDate.
     * @return the value of ApprovalDate
     */
    public Timestamp getApprovalDate() {
        return (Timestamp) getAttributeInternal(APPROVALDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApprovalDate.
     * @param value value to set the ApprovalDate
     */
    public void setApprovalDate(Timestamp value) {
        setAttributeInternal(APPROVALDATE, value);
    }

    /**
     * Gets the attribute value for ExpirationDate, using the alias name ExpirationDate.
     * @return the value of ExpirationDate
     */
    public Timestamp getExpirationDate() {
        return (Timestamp) getAttributeInternal(EXPIRATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpirationDate.
     * @param value value to set the ExpirationDate
     */
    public void setExpirationDate(Timestamp value) {
        setAttributeInternal(EXPIRATIONDATE, value);
    }

    /**
     * Gets the attribute value for EmailCc, using the alias name EmailCc.
     * @return the value of EmailCc
     */
    public String getEmailCc() {
        return (String) getAttributeInternal(EMAILCC);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmailCc.
     * @param value value to set the EmailCc
     */
    public void setEmailCc(String value) {
        setAttributeInternal(EMAILCC, value);
    }

    /**
     * Gets the attribute value for EmailBcc, using the alias name EmailBcc.
     * @return the value of EmailBcc
     */
    public String getEmailBcc() {
        return (String) getAttributeInternal(EMAILBCC);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmailBcc.
     * @param value value to set the EmailBcc
     */
    public void setEmailBcc(String value) {
        setAttributeInternal(EMAILBCC, value);
    }

    /**
     * Gets the attribute value for InactiveDate, using the alias name InactiveDate.
     * @return the value of InactiveDate
     */
    public Timestamp getInactiveDate() {
        return (Timestamp) getAttributeInternal(INACTIVEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactiveDate.
     * @param value value to set the InactiveDate
     */
    public void setInactiveDate(Timestamp value) {
        setAttributeInternal(INACTIVEDATE, value);
    }

    /**
     * Gets the attribute value for AppsContactId, using the alias name AppsContactId.
     * @return the value of AppsContactId
     */
    public BigDecimal getAppsContactId() {
        return (BigDecimal) getAttributeInternal(APPSCONTACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AppsContactId.
     * @param value value to set the AppsContactId
     */
    public void setAppsContactId(BigDecimal value) {
        setAttributeInternal(APPSCONTACTID, value);
    }

    /**
     * Gets the attribute value for ViewOrders, using the alias name ViewOrders.
     * @return the value of ViewOrders
     */
    public String getViewOrders() {
        return (String) getAttributeInternal(VIEWORDERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ViewOrders.
     * @param value value to set the ViewOrders
     */
    public void setViewOrders(String value) {
        setAttributeInternal(VIEWORDERS, value);
    }

    /**
     * Gets the attribute value for FndUserId, using the alias name FndUserId.
     * @return the value of FndUserId
     */
    public Long getFndUserId() {
        return (Long) getAttributeInternal(FNDUSERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FndUserId.
     * @param value value to set the FndUserId
     */
    public void setFndUserId(Long value) {
        setAttributeInternal(FNDUSERID, value);
    }

    /**
     * Gets the attribute value for PasswordUpdationDate, using the alias name PasswordUpdationDate.
     * @return the value of PasswordUpdationDate
     */
    public Timestamp getPasswordUpdationDate() {
        return (Timestamp) getAttributeInternal(PASSWORDUPDATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PasswordUpdationDate.
     * @param value value to set the PasswordUpdationDate
     */
    public void setPasswordUpdationDate(Timestamp value) {
        setAttributeInternal(PASSWORDUPDATIONDATE, value);
    }


    /**
     * Gets the attribute value for OtpStartTime, using the alias name OtpStartTime.
     * @return the value of OtpStartTime
     */
    public Timestamp getOtpStartTime() {
        return (Timestamp) getAttributeInternal(OTPSTARTTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for OtpStartTime.
     * @param value value to set the OtpStartTime
     */
    public void setOtpStartTime(Timestamp value) {
        setAttributeInternal(OTPSTARTTIME, value);
    }

    /**
     * Gets the attribute value for UserLoginTime, using the alias name UserLoginTime.
     * @return the value of UserLoginTime
     */
    public Timestamp getUserLoginTime() {
        return (Timestamp) getAttributeInternal(USERLOGINTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserLoginTime.
     * @param value value to set the UserLoginTime
     */
    public void setUserLoginTime(Timestamp value) {
        setAttributeInternal(USERLOGINTIME, value);
    }

    /**
     * Gets the attribute value for OtpEndTime, using the alias name OtpEndTime.
     * @return the value of OtpEndTime
     */
    public Timestamp getOtpEndTime() {
        return (Timestamp) getAttributeInternal(OTPENDTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for OtpEndTime.
     * @param value value to set the OtpEndTime
     */
    public void setOtpEndTime(Timestamp value) {
        setAttributeInternal(OTPENDTIME, value);
    }

    /**
     * @param userId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal userId) {
        return new Key(new Object[] { userId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
//        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

