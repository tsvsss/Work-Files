package com.rmi.applicationEntry.adfbc.views;

import com.rmi.applicationEntry.adfbc.entities.SeafarerIfaceImpl;

import com.rmi.applicationEntry.adfbc.services.RMIApplicationEntryAppModuleImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 01 23:45:22 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SeafarerIfaceViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_SEAFAREREO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        AffidavitApvdBy,
        AffidavitApvdDate,
        AffidavitEdocId,
        AffidavitGrdComnt,
        AffidavitGrdStatus,
        ApplicationApvdBy,
        ApplicationApvdDate,
        ApplicationEdocId,
        ApplicationGrdComnt,
        ApplicationGrdStatus,
        BirthDate,
        BirthPlace,
        BookApprovedBy,
        BookApprovedDate,
        BookGrdComnt,
        BookGrdStatus,
        CreatedBy,
        CreationDate,
        DistinguishingMarks,
        EsiBatchId,
        EsiId,
        FirstName,
        Gender,
        IdCardApprovedBy,
        IdCardApprovedDate,
        IdCardGrdCmnt,
        IdCardGrdStatus,
        IdentityDocApprovedBy,
        IdentityDocApprovedDate,
        IdentityDocEdocId,
        IdentityDocGrdComnt,
        IdentityDocGrdStatus,
        IssueType,
        IssueTypeIdCard,
        LastName,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        MiddleInitial,
        Nationality,
        Notes,
        PassportIssuingCountryCode,
        PermanentAddress,
        PhotoApprovedBy,
        PhotoApprovedDate,
        PhotoEdocId,
        PhotoGrdComnt,
        PhotoGrdStatus,
        PhysicalApprovedBy,
        PhysicalApprovedDate,
        PhysicalEdocId,
        PhysicalGrdComnt,
        PhysicalGrdStatus,
        PreviousBookDocumentId,
        PreviousIdCardDocumentId,
        ResidenceCountryCode,
        SatApvdBy,
        SatApvdDate,
        SatEdocId,
        SatGrdComnt,
        SatGrdStatus,
        SeafarerApprovedBy,
        SeafarerApprovedDate,
        SeafarerGrdComnt,
        SeafarerGrdStatus,
        SeafarerId,
        SeaserviceGrdComnt,
        SeaserviceGrdStatus,
        SeaserviceTranscriptApvdBy,
        SeaserviceTranscriptApvdDt,
        SeaserviceTranscriptEdocId,
        Status,
        VesselPk,
        WcCityListId,
        transNationality,
        tranPassportCntry,
        tranResidenceCntry,
        tranVesselNo,
        tranVesselName,
        InternalEdocId,
        tranPhotoFilename,
        tranIdentityFileName,
        tranMedicalFileName,
        tranAffidavitFileName,
        tranAttestationFileName,
        tranSecurityFileName,
        tranSeaServiceFileName,
        tranAckNoConsent,
        tranConsentStartDate,
        tranConsentExpDate,
        ConsentEdocId,
        tranUploadedConsentStartDate,
        tranUploadedConsentExpireDate,
        tranConsentUploadedBoolean,
        tranUploadButtonLabel,
        tranInternalDocStatus,
        tranCity,
        tranOfficialNo,
        tranImotype,
        tranSupportingFileName,
        tranPhotoHistoryLink,
        tranAttestationHistoryLink,
        tranIdentityHistoryLink,
        tranMedicalHistoryLink,
        tranSeaserviceHistoryLink,
        tranSecurityHistoryLink,
        tranAffidavitHistoryLink,
        tranInternalHistoryLink,
        SeafarerWfStatus,
        tranAdditionalDocument,
        AdditionalDocEdocId,
        SeafarerWfStatusFinal,
        UploadTabColor,
        OcTabColor,
        SqcTabColor,
        tranCraCount,
        checkRowStatus,
        DeficientAckDate,
        DeficientAckFlag,
        tranConsentMarketing,
        tranVesselNameInternal,
        tranEntityType,
        consentType,
        ConGrdStatus,
        tranAdditionalDocStatus,
        BookIssueTypeUpd,
        BookIssueTypeUpdDt,
        IdcardIssueTypeUpd,
        IdcardIssueTypeUpdDt,
        CorrectedFlag,
        TransBatchName,
        ExternalOld,
        SeafarerDocsSqcVO,
        SeafarerDocsOcVO,
        CountriesLOV1,
        VesselRO1,
        WcCityListLOV,
        GetCityNameByCityIdRO,
        DocumentHistoryDetailsView,
        VesselListView,
        EntityTypeView1,
        CheckOldSeafarerView1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return SeafarerIfaceViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return SeafarerIfaceViewRowImpl.AttributesEnum.firstIndex() +
                   SeafarerIfaceViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = SeafarerIfaceViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int AFFIDAVITAPVDBY = AttributesEnum.AffidavitApvdBy.index();
    public static final int AFFIDAVITAPVDDATE = AttributesEnum.AffidavitApvdDate.index();
    public static final int AFFIDAVITEDOCID = AttributesEnum.AffidavitEdocId.index();
    public static final int AFFIDAVITGRDCOMNT = AttributesEnum.AffidavitGrdComnt.index();
    public static final int AFFIDAVITGRDSTATUS = AttributesEnum.AffidavitGrdStatus.index();
    public static final int APPLICATIONAPVDBY = AttributesEnum.ApplicationApvdBy.index();
    public static final int APPLICATIONAPVDDATE = AttributesEnum.ApplicationApvdDate.index();
    public static final int APPLICATIONEDOCID = AttributesEnum.ApplicationEdocId.index();
    public static final int APPLICATIONGRDCOMNT = AttributesEnum.ApplicationGrdComnt.index();
    public static final int APPLICATIONGRDSTATUS = AttributesEnum.ApplicationGrdStatus.index();
    public static final int BIRTHDATE = AttributesEnum.BirthDate.index();
    public static final int BIRTHPLACE = AttributesEnum.BirthPlace.index();
    public static final int BOOKAPPROVEDBY = AttributesEnum.BookApprovedBy.index();
    public static final int BOOKAPPROVEDDATE = AttributesEnum.BookApprovedDate.index();
    public static final int BOOKGRDCOMNT = AttributesEnum.BookGrdComnt.index();
    public static final int BOOKGRDSTATUS = AttributesEnum.BookGrdStatus.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int DISTINGUISHINGMARKS = AttributesEnum.DistinguishingMarks.index();
    public static final int ESIBATCHID = AttributesEnum.EsiBatchId.index();
    public static final int ESIID = AttributesEnum.EsiId.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int IDCARDAPPROVEDBY = AttributesEnum.IdCardApprovedBy.index();
    public static final int IDCARDAPPROVEDDATE = AttributesEnum.IdCardApprovedDate.index();
    public static final int IDCARDGRDCMNT = AttributesEnum.IdCardGrdCmnt.index();
    public static final int IDCARDGRDSTATUS = AttributesEnum.IdCardGrdStatus.index();
    public static final int IDENTITYDOCAPPROVEDBY = AttributesEnum.IdentityDocApprovedBy.index();
    public static final int IDENTITYDOCAPPROVEDDATE = AttributesEnum.IdentityDocApprovedDate.index();
    public static final int IDENTITYDOCEDOCID = AttributesEnum.IdentityDocEdocId.index();
    public static final int IDENTITYDOCGRDCOMNT = AttributesEnum.IdentityDocGrdComnt.index();
    public static final int IDENTITYDOCGRDSTATUS = AttributesEnum.IdentityDocGrdStatus.index();
    public static final int ISSUETYPE = AttributesEnum.IssueType.index();
    public static final int ISSUETYPEIDCARD = AttributesEnum.IssueTypeIdCard.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int MIDDLEINITIAL = AttributesEnum.MiddleInitial.index();
    public static final int NATIONALITY = AttributesEnum.Nationality.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int PASSPORTISSUINGCOUNTRYCODE = AttributesEnum.PassportIssuingCountryCode.index();
    public static final int PERMANENTADDRESS = AttributesEnum.PermanentAddress.index();
    public static final int PHOTOAPPROVEDBY = AttributesEnum.PhotoApprovedBy.index();
    public static final int PHOTOAPPROVEDDATE = AttributesEnum.PhotoApprovedDate.index();
    public static final int PHOTOEDOCID = AttributesEnum.PhotoEdocId.index();
    public static final int PHOTOGRDCOMNT = AttributesEnum.PhotoGrdComnt.index();
    public static final int PHOTOGRDSTATUS = AttributesEnum.PhotoGrdStatus.index();
    public static final int PHYSICALAPPROVEDBY = AttributesEnum.PhysicalApprovedBy.index();
    public static final int PHYSICALAPPROVEDDATE = AttributesEnum.PhysicalApprovedDate.index();
    public static final int PHYSICALEDOCID = AttributesEnum.PhysicalEdocId.index();
    public static final int PHYSICALGRDCOMNT = AttributesEnum.PhysicalGrdComnt.index();
    public static final int PHYSICALGRDSTATUS = AttributesEnum.PhysicalGrdStatus.index();
    public static final int PREVIOUSBOOKDOCUMENTID = AttributesEnum.PreviousBookDocumentId.index();
    public static final int PREVIOUSIDCARDDOCUMENTID = AttributesEnum.PreviousIdCardDocumentId.index();
    public static final int RESIDENCECOUNTRYCODE = AttributesEnum.ResidenceCountryCode.index();
    public static final int SATAPVDBY = AttributesEnum.SatApvdBy.index();
    public static final int SATAPVDDATE = AttributesEnum.SatApvdDate.index();
    public static final int SATEDOCID = AttributesEnum.SatEdocId.index();
    public static final int SATGRDCOMNT = AttributesEnum.SatGrdComnt.index();
    public static final int SATGRDSTATUS = AttributesEnum.SatGrdStatus.index();
    public static final int SEAFARERAPPROVEDBY = AttributesEnum.SeafarerApprovedBy.index();
    public static final int SEAFARERAPPROVEDDATE = AttributesEnum.SeafarerApprovedDate.index();
    public static final int SEAFARERGRDCOMNT = AttributesEnum.SeafarerGrdComnt.index();
    public static final int SEAFARERGRDSTATUS = AttributesEnum.SeafarerGrdStatus.index();
    public static final int SEAFARERID = AttributesEnum.SeafarerId.index();
    public static final int SEASERVICEGRDCOMNT = AttributesEnum.SeaserviceGrdComnt.index();
    public static final int SEASERVICEGRDSTATUS = AttributesEnum.SeaserviceGrdStatus.index();
    public static final int SEASERVICETRANSCRIPTAPVDBY = AttributesEnum.SeaserviceTranscriptApvdBy.index();
    public static final int SEASERVICETRANSCRIPTAPVDDT = AttributesEnum.SeaserviceTranscriptApvdDt.index();
    public static final int SEASERVICETRANSCRIPTEDOCID = AttributesEnum.SeaserviceTranscriptEdocId.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int VESSELPK = AttributesEnum.VesselPk.index();
    public static final int WCCITYLISTID = AttributesEnum.WcCityListId.index();
    public static final int TRANSNATIONALITY = AttributesEnum.transNationality.index();
    public static final int TRANPASSPORTCNTRY = AttributesEnum.tranPassportCntry.index();
    public static final int TRANRESIDENCECNTRY = AttributesEnum.tranResidenceCntry.index();
    public static final int TRANVESSELNO = AttributesEnum.tranVesselNo.index();
    public static final int TRANVESSELNAME = AttributesEnum.tranVesselName.index();
    public static final int INTERNALEDOCID = AttributesEnum.InternalEdocId.index();
    public static final int TRANPHOTOFILENAME = AttributesEnum.tranPhotoFilename.index();
    public static final int TRANIDENTITYFILENAME = AttributesEnum.tranIdentityFileName.index();
    public static final int TRANMEDICALFILENAME = AttributesEnum.tranMedicalFileName.index();
    public static final int TRANAFFIDAVITFILENAME = AttributesEnum.tranAffidavitFileName.index();
    public static final int TRANATTESTATIONFILENAME = AttributesEnum.tranAttestationFileName.index();
    public static final int TRANSECURITYFILENAME = AttributesEnum.tranSecurityFileName.index();
    public static final int TRANSEASERVICEFILENAME = AttributesEnum.tranSeaServiceFileName.index();
    public static final int TRANACKNOCONSENT = AttributesEnum.tranAckNoConsent.index();
    public static final int TRANCONSENTSTARTDATE = AttributesEnum.tranConsentStartDate.index();
    public static final int TRANCONSENTEXPDATE = AttributesEnum.tranConsentExpDate.index();
    public static final int CONSENTEDOCID = AttributesEnum.ConsentEdocId.index();
    public static final int TRANUPLOADEDCONSENTSTARTDATE = AttributesEnum.tranUploadedConsentStartDate.index();
    public static final int TRANUPLOADEDCONSENTEXPIREDATE = AttributesEnum.tranUploadedConsentExpireDate.index();
    public static final int TRANCONSENTUPLOADEDBOOLEAN = AttributesEnum.tranConsentUploadedBoolean.index();
    public static final int TRANUPLOADBUTTONLABEL = AttributesEnum.tranUploadButtonLabel.index();
    public static final int TRANINTERNALDOCSTATUS = AttributesEnum.tranInternalDocStatus.index();
    public static final int TRANCITY = AttributesEnum.tranCity.index();
    public static final int TRANOFFICIALNO = AttributesEnum.tranOfficialNo.index();
    public static final int TRANIMOTYPE = AttributesEnum.tranImotype.index();
    public static final int TRANSUPPORTINGFILENAME = AttributesEnum.tranSupportingFileName.index();
    public static final int TRANPHOTOHISTORYLINK = AttributesEnum.tranPhotoHistoryLink.index();
    public static final int TRANATTESTATIONHISTORYLINK = AttributesEnum.tranAttestationHistoryLink.index();
    public static final int TRANIDENTITYHISTORYLINK = AttributesEnum.tranIdentityHistoryLink.index();
    public static final int TRANMEDICALHISTORYLINK = AttributesEnum.tranMedicalHistoryLink.index();
    public static final int TRANSEASERVICEHISTORYLINK = AttributesEnum.tranSeaserviceHistoryLink.index();
    public static final int TRANSECURITYHISTORYLINK = AttributesEnum.tranSecurityHistoryLink.index();
    public static final int TRANAFFIDAVITHISTORYLINK = AttributesEnum.tranAffidavitHistoryLink.index();
    public static final int TRANINTERNALHISTORYLINK = AttributesEnum.tranInternalHistoryLink.index();
    public static final int SEAFARERWFSTATUS = AttributesEnum.SeafarerWfStatus.index();
    public static final int TRANADDITIONALDOCUMENT = AttributesEnum.tranAdditionalDocument.index();
    public static final int ADDITIONALDOCEDOCID = AttributesEnum.AdditionalDocEdocId.index();
    public static final int SEAFARERWFSTATUSFINAL = AttributesEnum.SeafarerWfStatusFinal.index();
    public static final int UPLOADTABCOLOR = AttributesEnum.UploadTabColor.index();
    public static final int OCTABCOLOR = AttributesEnum.OcTabColor.index();
    public static final int SQCTABCOLOR = AttributesEnum.SqcTabColor.index();
    public static final int TRANCRACOUNT = AttributesEnum.tranCraCount.index();
    public static final int CHECKROWSTATUS = AttributesEnum.checkRowStatus.index();
    public static final int DEFICIENTACKDATE = AttributesEnum.DeficientAckDate.index();
    public static final int DEFICIENTACKFLAG = AttributesEnum.DeficientAckFlag.index();
    public static final int TRANCONSENTMARKETING = AttributesEnum.tranConsentMarketing.index();
    public static final int TRANVESSELNAMEINTERNAL = AttributesEnum.tranVesselNameInternal.index();
    public static final int TRANENTITYTYPE = AttributesEnum.tranEntityType.index();
    public static final int CONSENTTYPE = AttributesEnum.consentType.index();
    public static final int CONGRDSTATUS = AttributesEnum.ConGrdStatus.index();
    public static final int TRANADDITIONALDOCSTATUS = AttributesEnum.tranAdditionalDocStatus.index();
    public static final int BOOKISSUETYPEUPD = AttributesEnum.BookIssueTypeUpd.index();
    public static final int BOOKISSUETYPEUPDDT = AttributesEnum.BookIssueTypeUpdDt.index();
    public static final int IDCARDISSUETYPEUPD = AttributesEnum.IdcardIssueTypeUpd.index();
    public static final int IDCARDISSUETYPEUPDDT = AttributesEnum.IdcardIssueTypeUpdDt.index();
    public static final int CORRECTEDFLAG = AttributesEnum.CorrectedFlag.index();
    public static final int TRANSBATCHNAME = AttributesEnum.TransBatchName.index();
    public static final int EXTERNALOLD = AttributesEnum.ExternalOld.index();
    public static final int SEAFARERDOCSSQCVO = AttributesEnum.SeafarerDocsSqcVO.index();
    public static final int SEAFARERDOCSOCVO = AttributesEnum.SeafarerDocsOcVO.index();
    public static final int COUNTRIESLOV1 = AttributesEnum.CountriesLOV1.index();
    public static final int VESSELRO1 = AttributesEnum.VesselRO1.index();
    public static final int WCCITYLISTLOV = AttributesEnum.WcCityListLOV.index();
    public static final int GETCITYNAMEBYCITYIDRO = AttributesEnum.GetCityNameByCityIdRO.index();
    public static final int DOCUMENTHISTORYDETAILSVIEW = AttributesEnum.DocumentHistoryDetailsView.index();
    public static final int VESSELLISTVIEW = AttributesEnum.VesselListView.index();
    public static final int ENTITYTYPEVIEW1 = AttributesEnum.EntityTypeView1.index();
    public static final int CHECKOLDSEAFARERVIEW1 = AttributesEnum.CheckOldSeafarerView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SeafarerIfaceViewRowImpl() {
    }

    /**
     * Gets SeafarerEO entity object.
     * @return the SeafarerEO
     */
    public SeafarerIfaceImpl getSeafarerEO() {
        return (SeafarerIfaceImpl) getEntity(ENTITY_SEAFAREREO);
    }

    /**
     * Gets the attribute value for AFFIDAVIT_APVD_BY using the alias name AffidavitApvdBy.
     * @return the AFFIDAVIT_APVD_BY
     */
    public BigDecimal getAffidavitApvdBy() {
        return (BigDecimal) getAttributeInternal(AFFIDAVITAPVDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for AFFIDAVIT_APVD_BY using the alias name AffidavitApvdBy.
     * @param value value to set the AFFIDAVIT_APVD_BY
     */
    public void setAffidavitApvdBy(BigDecimal value) {
        setAttributeInternal(AFFIDAVITAPVDBY, value);
    }

    /**
     * Gets the attribute value for AFFIDAVIT_APVD_DATE using the alias name AffidavitApvdDate.
     * @return the AFFIDAVIT_APVD_DATE
     */
    public Date getAffidavitApvdDate() {
        return (Date) getAttributeInternal(AFFIDAVITAPVDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for AFFIDAVIT_APVD_DATE using the alias name AffidavitApvdDate.
     * @param value value to set the AFFIDAVIT_APVD_DATE
     */
    public void setAffidavitApvdDate(Date value) {
        setAttributeInternal(AFFIDAVITAPVDDATE, value);
    }

    /**
     * Gets the attribute value for AFFIDAVIT_EDOC_ID using the alias name AffidavitEdocId.
     * @return the AFFIDAVIT_EDOC_ID
     */
    public BigDecimal getAffidavitEdocId() {
        return (BigDecimal) getAttributeInternal(AFFIDAVITEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for AFFIDAVIT_EDOC_ID using the alias name AffidavitEdocId.
     * @param value value to set the AFFIDAVIT_EDOC_ID
     */
    public void setAffidavitEdocId(BigDecimal value) {
        setAttributeInternal(AFFIDAVITEDOCID, value);
    }

    /**
     * Gets the attribute value for AFFIDAVIT_GRD_COMNT using the alias name AffidavitGrdComnt.
     * @return the AFFIDAVIT_GRD_COMNT
     */
    public String getAffidavitGrdComnt() {
        return (String) getAttributeInternal(AFFIDAVITGRDCOMNT);
    }

    /**
     * Sets <code>value</code> as attribute value for AFFIDAVIT_GRD_COMNT using the alias name AffidavitGrdComnt.
     * @param value value to set the AFFIDAVIT_GRD_COMNT
     */
    public void setAffidavitGrdComnt(String value) {
        setAttributeInternal(AFFIDAVITGRDCOMNT, value);
    }

    /**
     * Gets the attribute value for AFFIDAVIT_GRD_STATUS using the alias name AffidavitGrdStatus.
     * @return the AFFIDAVIT_GRD_STATUS
     */
    public String getAffidavitGrdStatus() {
        return (String) getAttributeInternal(AFFIDAVITGRDSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for AFFIDAVIT_GRD_STATUS using the alias name AffidavitGrdStatus.
     * @param value value to set the AFFIDAVIT_GRD_STATUS
     */
    public void setAffidavitGrdStatus(String value) {
        setAttributeInternal(AFFIDAVITGRDSTATUS, value);
    }

    /**
     * Gets the attribute value for APPLICATION_APVD_BY using the alias name ApplicationApvdBy.
     * @return the APPLICATION_APVD_BY
     */
    public BigDecimal getApplicationApvdBy() {
        return (BigDecimal) getAttributeInternal(APPLICATIONAPVDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for APPLICATION_APVD_BY using the alias name ApplicationApvdBy.
     * @param value value to set the APPLICATION_APVD_BY
     */
    public void setApplicationApvdBy(BigDecimal value) {
        setAttributeInternal(APPLICATIONAPVDBY, value);
    }

    /**
     * Gets the attribute value for APPLICATION_APVD_DATE using the alias name ApplicationApvdDate.
     * @return the APPLICATION_APVD_DATE
     */
    public Date getApplicationApvdDate() {
        return (Date) getAttributeInternal(APPLICATIONAPVDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for APPLICATION_APVD_DATE using the alias name ApplicationApvdDate.
     * @param value value to set the APPLICATION_APVD_DATE
     */
    public void setApplicationApvdDate(Date value) {
        setAttributeInternal(APPLICATIONAPVDDATE, value);
    }

    /**
     * Gets the attribute value for APPLICATION_EDOC_ID using the alias name ApplicationEdocId.
     * @return the APPLICATION_EDOC_ID
     */
    public BigDecimal getApplicationEdocId() {
        return (BigDecimal) getAttributeInternal(APPLICATIONEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for APPLICATION_EDOC_ID using the alias name ApplicationEdocId.
     * @param value value to set the APPLICATION_EDOC_ID
     */
    public void setApplicationEdocId(BigDecimal value) {
        setAttributeInternal(APPLICATIONEDOCID, value);
    }

    /**
     * Gets the attribute value for APPLICATION_GRD_COMNT using the alias name ApplicationGrdComnt.
     * @return the APPLICATION_GRD_COMNT
     */
    public String getApplicationGrdComnt() {
        return (String) getAttributeInternal(APPLICATIONGRDCOMNT);
    }

    /**
     * Sets <code>value</code> as attribute value for APPLICATION_GRD_COMNT using the alias name ApplicationGrdComnt.
     * @param value value to set the APPLICATION_GRD_COMNT
     */
    public void setApplicationGrdComnt(String value) {
        setAttributeInternal(APPLICATIONGRDCOMNT, value);
    }

    /**
     * Gets the attribute value for APPLICATION_GRD_STATUS using the alias name ApplicationGrdStatus.
     * @return the APPLICATION_GRD_STATUS
     */
    public String getApplicationGrdStatus() {
        return (String) getAttributeInternal(APPLICATIONGRDSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for APPLICATION_GRD_STATUS using the alias name ApplicationGrdStatus.
     * @param value value to set the APPLICATION_GRD_STATUS
     */
    public void setApplicationGrdStatus(String value) {
        setAttributeInternal(APPLICATIONGRDSTATUS, value);
    }

    /**
     * Gets the attribute value for BIRTH_DATE using the alias name BirthDate.
     * @return the BIRTH_DATE
     */
    public Date getBirthDate() {
        return (Date) getAttributeInternal(BIRTHDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for BIRTH_DATE using the alias name BirthDate.
     * @param value value to set the BIRTH_DATE
     */
    public void setBirthDate(Date value) {
        setAttributeInternal(BIRTHDATE, value);
    }

    /**
     * Gets the attribute value for BIRTH_PLACE using the alias name BirthPlace.
     * @return the BIRTH_PLACE
     */
    public String getBirthPlace() {
        return (String) getAttributeInternal(BIRTHPLACE);
    }

    /**
     * Sets <code>value</code> as attribute value for BIRTH_PLACE using the alias name BirthPlace.
     * @param value value to set the BIRTH_PLACE
     */
    public void setBirthPlace(String value) {
        setAttributeInternal(BIRTHPLACE, value);
    }

    /**
     * Gets the attribute value for BOOK_APPROVED_BY using the alias name BookApprovedBy.
     * @return the BOOK_APPROVED_BY
     */
    public BigDecimal getBookApprovedBy() {
        return (BigDecimal) getAttributeInternal(BOOKAPPROVEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for BOOK_APPROVED_BY using the alias name BookApprovedBy.
     * @param value value to set the BOOK_APPROVED_BY
     */
    public void setBookApprovedBy(BigDecimal value) {
        setAttributeInternal(BOOKAPPROVEDBY, value);
    }

    /**
     * Gets the attribute value for BOOK_APPROVED_DATE using the alias name BookApprovedDate.
     * @return the BOOK_APPROVED_DATE
     */
    public Date getBookApprovedDate() {
        return (Date) getAttributeInternal(BOOKAPPROVEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for BOOK_APPROVED_DATE using the alias name BookApprovedDate.
     * @param value value to set the BOOK_APPROVED_DATE
     */
    public void setBookApprovedDate(Date value) {
        setAttributeInternal(BOOKAPPROVEDDATE, value);
    }

    /**
     * Gets the attribute value for BOOK_GRD_COMNT using the alias name BookGrdComnt.
     * @return the BOOK_GRD_COMNT
     */
    public String getBookGrdComnt() {
        return (String) getAttributeInternal(BOOKGRDCOMNT);
    }

    /**
     * Sets <code>value</code> as attribute value for BOOK_GRD_COMNT using the alias name BookGrdComnt.
     * @param value value to set the BOOK_GRD_COMNT
     */
    public void setBookGrdComnt(String value) {
        setAttributeInternal(BOOKGRDCOMNT, value);
    }

    /**
     * Gets the attribute value for BOOK_GRD_STATUS using the alias name BookGrdStatus.
     * @return the BOOK_GRD_STATUS
     */
    public String getBookGrdStatus() {
        return (String) getAttributeInternal(BOOKGRDSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for BOOK_GRD_STATUS using the alias name BookGrdStatus.
     * @param value value to set the BOOK_GRD_STATUS
     */
    public void setBookGrdStatus(String value) {
        setAttributeInternal(BOOKGRDSTATUS, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for DISTINGUISHING_MARKS using the alias name DistinguishingMarks.
     * @return the DISTINGUISHING_MARKS
     */
    public String getDistinguishingMarks() {
        return (String) getAttributeInternal(DISTINGUISHINGMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for DISTINGUISHING_MARKS using the alias name DistinguishingMarks.
     * @param value value to set the DISTINGUISHING_MARKS
     */
    public void setDistinguishingMarks(String value) {
        setAttributeInternal(DISTINGUISHINGMARKS, value);
    }

    /**
     * Gets the attribute value for ESI_BATCH_ID using the alias name EsiBatchId.
     * @return the ESI_BATCH_ID
     */
    public Integer getEsiBatchId() {
        return (Integer) getAttributeInternal(ESIBATCHID);
    }

    /**
     * Sets <code>value</code> as attribute value for ESI_BATCH_ID using the alias name EsiBatchId.
     * @param value value to set the ESI_BATCH_ID
     */
    public void setEsiBatchId(Integer value) {
        setAttributeInternal(ESIBATCHID, value);
    }

    /**
     * Gets the attribute value for ESI_ID using the alias name EsiId.
     * @return the ESI_ID
     */
    public BigDecimal getEsiId() {
        return (BigDecimal) getAttributeInternal(ESIID);
    }

    /**
     * Sets <code>value</code> as attribute value for ESI_ID using the alias name EsiId.
     * @param value value to set the ESI_ID
     */
    public void setEsiId(BigDecimal value) {
        setAttributeInternal(ESIID, value);
    }

    /**
     * Gets the attribute value for FIRST_NAME using the alias name FirstName.
     * @return the FIRST_NAME
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FIRST_NAME using the alias name FirstName.
     * @param value value to set the FIRST_NAME
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for GENDER using the alias name Gender.
     * @return the GENDER
     */
    public String getGender() {
        return (String) getAttributeInternal(GENDER);
    }

    /**
     * Sets <code>value</code> as attribute value for GENDER using the alias name Gender.
     * @param value value to set the GENDER
     */
    public void setGender(String value) {
        if(value != null)
            setAttributeInternal(GENDER, value);
    }

    /**
     * Gets the attribute value for ID_CARD_APPROVED_BY using the alias name IdCardApprovedBy.
     * @return the ID_CARD_APPROVED_BY
     */
    public BigDecimal getIdCardApprovedBy() {
        return (BigDecimal) getAttributeInternal(IDCARDAPPROVEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for ID_CARD_APPROVED_BY using the alias name IdCardApprovedBy.
     * @param value value to set the ID_CARD_APPROVED_BY
     */
    public void setIdCardApprovedBy(BigDecimal value) {
        setAttributeInternal(IDCARDAPPROVEDBY, value);
    }

    /**
     * Gets the attribute value for ID_CARD_APPROVED_DATE using the alias name IdCardApprovedDate.
     * @return the ID_CARD_APPROVED_DATE
     */
    public Date getIdCardApprovedDate() {
        return (Date) getAttributeInternal(IDCARDAPPROVEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ID_CARD_APPROVED_DATE using the alias name IdCardApprovedDate.
     * @param value value to set the ID_CARD_APPROVED_DATE
     */
    public void setIdCardApprovedDate(Date value) {
        setAttributeInternal(IDCARDAPPROVEDDATE, value);
    }

    /**
     * Gets the attribute value for ID_CARD_GRD_CMNT using the alias name IdCardGrdCmnt.
     * @return the ID_CARD_GRD_CMNT
     */
    public String getIdCardGrdCmnt() {
        return (String) getAttributeInternal(IDCARDGRDCMNT);
    }

    /**
     * Sets <code>value</code> as attribute value for ID_CARD_GRD_CMNT using the alias name IdCardGrdCmnt.
     * @param value value to set the ID_CARD_GRD_CMNT
     */
    public void setIdCardGrdCmnt(String value) {
        setAttributeInternal(IDCARDGRDCMNT, value);
    }

    /**
     * Gets the attribute value for ID_CARD_GRD_STATUS using the alias name IdCardGrdStatus.
     * @return the ID_CARD_GRD_STATUS
     */
    public String getIdCardGrdStatus() {
        return (String) getAttributeInternal(IDCARDGRDSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for ID_CARD_GRD_STATUS using the alias name IdCardGrdStatus.
     * @param value value to set the ID_CARD_GRD_STATUS
     */
    public void setIdCardGrdStatus(String value) {
        setAttributeInternal(IDCARDGRDSTATUS, value);
    }

    /**
     * Gets the attribute value for IDENTITY_DOC_APPROVED_BY using the alias name IdentityDocApprovedBy.
     * @return the IDENTITY_DOC_APPROVED_BY
     */
    public BigDecimal getIdentityDocApprovedBy() {
        return (BigDecimal) getAttributeInternal(IDENTITYDOCAPPROVEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for IDENTITY_DOC_APPROVED_BY using the alias name IdentityDocApprovedBy.
     * @param value value to set the IDENTITY_DOC_APPROVED_BY
     */
    public void setIdentityDocApprovedBy(BigDecimal value) {
        setAttributeInternal(IDENTITYDOCAPPROVEDBY, value);
    }

    /**
     * Gets the attribute value for IDENTITY_DOC_APPROVED_DATE using the alias name IdentityDocApprovedDate.
     * @return the IDENTITY_DOC_APPROVED_DATE
     */
    public Date getIdentityDocApprovedDate() {
        return (Date) getAttributeInternal(IDENTITYDOCAPPROVEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for IDENTITY_DOC_APPROVED_DATE using the alias name IdentityDocApprovedDate.
     * @param value value to set the IDENTITY_DOC_APPROVED_DATE
     */
    public void setIdentityDocApprovedDate(Date value) {
        setAttributeInternal(IDENTITYDOCAPPROVEDDATE, value);
    }

    /**
     * Gets the attribute value for IDENTITY_DOC_EDOC_ID using the alias name IdentityDocEdocId.
     * @return the IDENTITY_DOC_EDOC_ID
     */
    public BigDecimal getIdentityDocEdocId() {
        return (BigDecimal) getAttributeInternal(IDENTITYDOCEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for IDENTITY_DOC_EDOC_ID using the alias name IdentityDocEdocId.
     * @param value value to set the IDENTITY_DOC_EDOC_ID
     */
    public void setIdentityDocEdocId(BigDecimal value) {
        setAttributeInternal(IDENTITYDOCEDOCID, value);
    }

    /**
     * Gets the attribute value for IDENTITY_DOC_GRD_COMNT using the alias name IdentityDocGrdComnt.
     * @return the IDENTITY_DOC_GRD_COMNT
     */
    public String getIdentityDocGrdComnt() {
        return (String) getAttributeInternal(IDENTITYDOCGRDCOMNT);
    }

    /**
     * Sets <code>value</code> as attribute value for IDENTITY_DOC_GRD_COMNT using the alias name IdentityDocGrdComnt.
     * @param value value to set the IDENTITY_DOC_GRD_COMNT
     */
    public void setIdentityDocGrdComnt(String value) {
        setAttributeInternal(IDENTITYDOCGRDCOMNT, value);
    }

    /**
     * Gets the attribute value for IDENTITY_DOC_GRD_STATUS using the alias name IdentityDocGrdStatus.
     * @return the IDENTITY_DOC_GRD_STATUS
     */
    public String getIdentityDocGrdStatus() {
        return (String) getAttributeInternal(IDENTITYDOCGRDSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for IDENTITY_DOC_GRD_STATUS using the alias name IdentityDocGrdStatus.
     * @param value value to set the IDENTITY_DOC_GRD_STATUS
     */
    public void setIdentityDocGrdStatus(String value) {
        setAttributeInternal(IDENTITYDOCGRDSTATUS, value);
    }

    /**
     * Gets the attribute value for ISSUE_TYPE using the alias name IssueType.
     * @return the ISSUE_TYPE
     */
    public String getIssueType() {
        return (String) getAttributeInternal(ISSUETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSUE_TYPE using the alias name IssueType.
     * @param value value to set the ISSUE_TYPE
     */
    public void setIssueType(String value) {
        setAttributeInternal(ISSUETYPE, value);
    }

    /**
     * Gets the attribute value for ISSUE_TYPE_ID_CARD using the alias name IssueTypeIdCard.
     * @return the ISSUE_TYPE_ID_CARD
     */
    public String getIssueTypeIdCard() {
        return (String) getAttributeInternal(ISSUETYPEIDCARD);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSUE_TYPE_ID_CARD using the alias name IssueTypeIdCard.
     * @param value value to set the ISSUE_TYPE_ID_CARD
     */
    public void setIssueTypeIdCard(String value) {
        setAttributeInternal(ISSUETYPEIDCARD, value);
    }

    /**
     * Gets the attribute value for LAST_NAME using the alias name LastName.
     * @return the LAST_NAME
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_NAME using the alias name LastName.
     * @param value value to set the LAST_NAME
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public BigDecimal getLastUpdateLogin() {
        return (BigDecimal) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(BigDecimal value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public BigDecimal getLastUpdatedBy() {
        return (BigDecimal) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(BigDecimal value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for MIDDLE_INITIAL using the alias name MiddleInitial.
     * @return the MIDDLE_INITIAL
     */
    public String getMiddleInitial() {
        return (String) getAttributeInternal(MIDDLEINITIAL);
    }

    /**
     * Sets <code>value</code> as attribute value for MIDDLE_INITIAL using the alias name MiddleInitial.
     * @param value value to set the MIDDLE_INITIAL
     */
    public void setMiddleInitial(String value) {
        setAttributeInternal(MIDDLEINITIAL, value);
    }

    /**
     * Gets the attribute value for NATIONALITY using the alias name Nationality.
     * @return the NATIONALITY
     */
    public String getNationality() {
        return (String) getAttributeInternal(NATIONALITY);
    }

    /**
     * Sets <code>value</code> as attribute value for NATIONALITY using the alias name Nationality.
     * @param value value to set the NATIONALITY
     */
    public void setNationality(String value) {
        setAttributeInternal(NATIONALITY, value);
    }

    /**
     * Gets the attribute value for NOTES using the alias name Notes.
     * @return the NOTES
     */
    public String getNotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTES using the alias name Notes.
     * @param value value to set the NOTES
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * Gets the attribute value for PASSPORT_ISSUING_COUNTRY_CODE using the alias name PassportIssuingCountryCode.
     * @return the PASSPORT_ISSUING_COUNTRY_CODE
     */
    public String getPassportIssuingCountryCode() {
        return (String) getAttributeInternal(PASSPORTISSUINGCOUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for PASSPORT_ISSUING_COUNTRY_CODE using the alias name PassportIssuingCountryCode.
     * @param value value to set the PASSPORT_ISSUING_COUNTRY_CODE
     */
    public void setPassportIssuingCountryCode(String value) {
        setAttributeInternal(PASSPORTISSUINGCOUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for PERMANENT_ADDRESS using the alias name PermanentAddress.
     * @return the PERMANENT_ADDRESS
     */
    public String getPermanentAddress() {
        return (String) getAttributeInternal(PERMANENTADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for PERMANENT_ADDRESS using the alias name PermanentAddress.
     * @param value value to set the PERMANENT_ADDRESS
     */
    public void setPermanentAddress(String value) {
        setAttributeInternal(PERMANENTADDRESS, value);
    }

    /**
     * Gets the attribute value for PHOTO_APPROVED_BY using the alias name PhotoApprovedBy.
     * @return the PHOTO_APPROVED_BY
     */
    public BigDecimal getPhotoApprovedBy() {
        return (BigDecimal) getAttributeInternal(PHOTOAPPROVEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for PHOTO_APPROVED_BY using the alias name PhotoApprovedBy.
     * @param value value to set the PHOTO_APPROVED_BY
     */
    public void setPhotoApprovedBy(BigDecimal value) {
        setAttributeInternal(PHOTOAPPROVEDBY, value);
    }

    /**
     * Gets the attribute value for PHOTO_APPROVED_DATE using the alias name PhotoApprovedDate.
     * @return the PHOTO_APPROVED_DATE
     */
    public Date getPhotoApprovedDate() {
        return (Date) getAttributeInternal(PHOTOAPPROVEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for PHOTO_APPROVED_DATE using the alias name PhotoApprovedDate.
     * @param value value to set the PHOTO_APPROVED_DATE
     */
    public void setPhotoApprovedDate(Date value) {
        setAttributeInternal(PHOTOAPPROVEDDATE, value);
    }

    /**
     * Gets the attribute value for PHOTO_EDOC_ID using the alias name PhotoEdocId.
     * @return the PHOTO_EDOC_ID
     */
    public BigDecimal getPhotoEdocId() {
        return (BigDecimal) getAttributeInternal(PHOTOEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for PHOTO_EDOC_ID using the alias name PhotoEdocId.
     * @param value value to set the PHOTO_EDOC_ID
     */
    public void setPhotoEdocId(BigDecimal value) {
        setAttributeInternal(PHOTOEDOCID, value);
    }

    /**
     * Gets the attribute value for PHOTO_GRD_COMNT using the alias name PhotoGrdComnt.
     * @return the PHOTO_GRD_COMNT
     */
    public String getPhotoGrdComnt() {
        return (String) getAttributeInternal(PHOTOGRDCOMNT);
    }

    /**
     * Sets <code>value</code> as attribute value for PHOTO_GRD_COMNT using the alias name PhotoGrdComnt.
     * @param value value to set the PHOTO_GRD_COMNT
     */
    public void setPhotoGrdComnt(String value) {
        setAttributeInternal(PHOTOGRDCOMNT, value);
    }

    /**
     * Gets the attribute value for PHOTO_GRD_STATUS using the alias name PhotoGrdStatus.
     * @return the PHOTO_GRD_STATUS
     */
    public String getPhotoGrdStatus() {
        return (String) getAttributeInternal(PHOTOGRDSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for PHOTO_GRD_STATUS using the alias name PhotoGrdStatus.
     * @param value value to set the PHOTO_GRD_STATUS
     */
    public void setPhotoGrdStatus(String value) {
        setAttributeInternal(PHOTOGRDSTATUS, value);
    }

    /**
     * Gets the attribute value for PHYSICAL_APPROVED_BY using the alias name PhysicalApprovedBy.
     * @return the PHYSICAL_APPROVED_BY
     */
    public BigDecimal getPhysicalApprovedBy() {
        return (BigDecimal) getAttributeInternal(PHYSICALAPPROVEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for PHYSICAL_APPROVED_BY using the alias name PhysicalApprovedBy.
     * @param value value to set the PHYSICAL_APPROVED_BY
     */
    public void setPhysicalApprovedBy(BigDecimal value) {
        setAttributeInternal(PHYSICALAPPROVEDBY, value);
    }

    /**
     * Gets the attribute value for PHYSICAL_APPROVED_DATE using the alias name PhysicalApprovedDate.
     * @return the PHYSICAL_APPROVED_DATE
     */
    public Date getPhysicalApprovedDate() {
        return (Date) getAttributeInternal(PHYSICALAPPROVEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for PHYSICAL_APPROVED_DATE using the alias name PhysicalApprovedDate.
     * @param value value to set the PHYSICAL_APPROVED_DATE
     */
    public void setPhysicalApprovedDate(Date value) {
        setAttributeInternal(PHYSICALAPPROVEDDATE, value);
    }

    /**
     * Gets the attribute value for PHYSICAL_EDOC_ID using the alias name PhysicalEdocId.
     * @return the PHYSICAL_EDOC_ID
     */
    public BigDecimal getPhysicalEdocId() {
        return (BigDecimal) getAttributeInternal(PHYSICALEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for PHYSICAL_EDOC_ID using the alias name PhysicalEdocId.
     * @param value value to set the PHYSICAL_EDOC_ID
     */
    public void setPhysicalEdocId(BigDecimal value) {
        setAttributeInternal(PHYSICALEDOCID, value);
    }

    /**
     * Gets the attribute value for PHYSICAL_GRD_COMNT using the alias name PhysicalGrdComnt.
     * @return the PHYSICAL_GRD_COMNT
     */
    public String getPhysicalGrdComnt() {
        return (String) getAttributeInternal(PHYSICALGRDCOMNT);
    }

    /**
     * Sets <code>value</code> as attribute value for PHYSICAL_GRD_COMNT using the alias name PhysicalGrdComnt.
     * @param value value to set the PHYSICAL_GRD_COMNT
     */
    public void setPhysicalGrdComnt(String value) {
        setAttributeInternal(PHYSICALGRDCOMNT, value);
    }

    /**
     * Gets the attribute value for PHYSICAL_GRD_STATUS using the alias name PhysicalGrdStatus.
     * @return the PHYSICAL_GRD_STATUS
     */
    public String getPhysicalGrdStatus() {
        return (String) getAttributeInternal(PHYSICALGRDSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for PHYSICAL_GRD_STATUS using the alias name PhysicalGrdStatus.
     * @param value value to set the PHYSICAL_GRD_STATUS
     */
    public void setPhysicalGrdStatus(String value) {
        setAttributeInternal(PHYSICALGRDSTATUS, value);
    }

    /**
     * Gets the attribute value for PREVIOUS_BOOK_DOCUMENT_ID using the alias name PreviousBookDocumentId.
     * @return the PREVIOUS_BOOK_DOCUMENT_ID
     */
    public BigDecimal getPreviousBookDocumentId() {
        return (BigDecimal) getAttributeInternal(PREVIOUSBOOKDOCUMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PREVIOUS_BOOK_DOCUMENT_ID using the alias name PreviousBookDocumentId.
     * @param value value to set the PREVIOUS_BOOK_DOCUMENT_ID
     */
    public void setPreviousBookDocumentId(BigDecimal value) {
        setAttributeInternal(PREVIOUSBOOKDOCUMENTID, value);
    }

    /**
     * Gets the attribute value for PREVIOUS_ID_CARD_DOCUMENT_ID using the alias name PreviousIdCardDocumentId.
     * @return the PREVIOUS_ID_CARD_DOCUMENT_ID
     */
    public BigDecimal getPreviousIdCardDocumentId() {
        return (BigDecimal) getAttributeInternal(PREVIOUSIDCARDDOCUMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PREVIOUS_ID_CARD_DOCUMENT_ID using the alias name PreviousIdCardDocumentId.
     * @param value value to set the PREVIOUS_ID_CARD_DOCUMENT_ID
     */
    public void setPreviousIdCardDocumentId(BigDecimal value) {
        setAttributeInternal(PREVIOUSIDCARDDOCUMENTID, value);
    }

    /**
     * Gets the attribute value for RESIDENCE_COUNTRY_CODE using the alias name ResidenceCountryCode.
     * @return the RESIDENCE_COUNTRY_CODE
     */
    public String getResidenceCountryCode() {
        return (String) getAttributeInternal(RESIDENCECOUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for RESIDENCE_COUNTRY_CODE using the alias name ResidenceCountryCode.
     * @param value value to set the RESIDENCE_COUNTRY_CODE
     */
    public void setResidenceCountryCode(String value) {
        setAttributeInternal(RESIDENCECOUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for SAT_APVD_BY using the alias name SatApvdBy.
     * @return the SAT_APVD_BY
     */
    public BigDecimal getSatApvdBy() {
        return (BigDecimal) getAttributeInternal(SATAPVDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for SAT_APVD_BY using the alias name SatApvdBy.
     * @param value value to set the SAT_APVD_BY
     */
    public void setSatApvdBy(BigDecimal value) {
        setAttributeInternal(SATAPVDBY, value);
    }

    /**
     * Gets the attribute value for SAT_APVD_DATE using the alias name SatApvdDate.
     * @return the SAT_APVD_DATE
     */
    public Date getSatApvdDate() {
        return (Date) getAttributeInternal(SATAPVDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for SAT_APVD_DATE using the alias name SatApvdDate.
     * @param value value to set the SAT_APVD_DATE
     */
    public void setSatApvdDate(Date value) {
        setAttributeInternal(SATAPVDDATE, value);
    }

    /**
     * Gets the attribute value for SAT_EDOC_ID using the alias name SatEdocId.
     * @return the SAT_EDOC_ID
     */
    public BigDecimal getSatEdocId() {
        return (BigDecimal) getAttributeInternal(SATEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SAT_EDOC_ID using the alias name SatEdocId.
     * @param value value to set the SAT_EDOC_ID
     */
    public void setSatEdocId(BigDecimal value) {
        setAttributeInternal(SATEDOCID, value);
    }

    /**
     * Gets the attribute value for SAT_GRD_COMNT using the alias name SatGrdComnt.
     * @return the SAT_GRD_COMNT
     */
    public String getSatGrdComnt() {
        return (String) getAttributeInternal(SATGRDCOMNT);
    }

    /**
     * Sets <code>value</code> as attribute value for SAT_GRD_COMNT using the alias name SatGrdComnt.
     * @param value value to set the SAT_GRD_COMNT
     */
    public void setSatGrdComnt(String value) {
        setAttributeInternal(SATGRDCOMNT, value);
    }

    /**
     * Gets the attribute value for SAT_GRD_STATUS using the alias name SatGrdStatus.
     * @return the SAT_GRD_STATUS
     */
    public String getSatGrdStatus() {
        return (String) getAttributeInternal(SATGRDSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for SAT_GRD_STATUS using the alias name SatGrdStatus.
     * @param value value to set the SAT_GRD_STATUS
     */
    public void setSatGrdStatus(String value) {
        setAttributeInternal(SATGRDSTATUS, value);
    }

    /**
     * Gets the attribute value for SEAFARER_APPROVED_BY using the alias name SeafarerApprovedBy.
     * @return the SEAFARER_APPROVED_BY
     */
    public BigDecimal getSeafarerApprovedBy() {
        return (BigDecimal) getAttributeInternal(SEAFARERAPPROVEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for SEAFARER_APPROVED_BY using the alias name SeafarerApprovedBy.
     * @param value value to set the SEAFARER_APPROVED_BY
     */
    public void setSeafarerApprovedBy(BigDecimal value) {
        setAttributeInternal(SEAFARERAPPROVEDBY, value);
    }

    /**
     * Gets the attribute value for SEAFARER_APPROVED_DATE using the alias name SeafarerApprovedDate.
     * @return the SEAFARER_APPROVED_DATE
     */
    public Date getSeafarerApprovedDate() {
        return (Date) getAttributeInternal(SEAFARERAPPROVEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for SEAFARER_APPROVED_DATE using the alias name SeafarerApprovedDate.
     * @param value value to set the SEAFARER_APPROVED_DATE
     */
    public void setSeafarerApprovedDate(Date value) {
        setAttributeInternal(SEAFARERAPPROVEDDATE, value);
    }

    /**
     * Gets the attribute value for SEAFARER_GRD_COMNT using the alias name SeafarerGrdComnt.
     * @return the SEAFARER_GRD_COMNT
     */
    public String getSeafarerGrdComnt() {
        return (String) getAttributeInternal(SEAFARERGRDCOMNT);
    }

    /**
     * Sets <code>value</code> as attribute value for SEAFARER_GRD_COMNT using the alias name SeafarerGrdComnt.
     * @param value value to set the SEAFARER_GRD_COMNT
     */
    public void setSeafarerGrdComnt(String value) {
        setAttributeInternal(SEAFARERGRDCOMNT, value);
    }

    /**
     * Gets the attribute value for SEAFARER_GRD_STATUS using the alias name SeafarerGrdStatus.
     * @return the SEAFARER_GRD_STATUS
     */
    public String getSeafarerGrdStatus() {
        return (String) getAttributeInternal(SEAFARERGRDSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for SEAFARER_GRD_STATUS using the alias name SeafarerGrdStatus.
     * @param value value to set the SEAFARER_GRD_STATUS
     */
    public void setSeafarerGrdStatus(String value) {
        setAttributeInternal(SEAFARERGRDSTATUS, value);
    }

    /**
     * Gets the attribute value for SEAFARER_ID using the alias name SeafarerId.
     * @return the SEAFARER_ID
     */
    public Integer getSeafarerId() {
        return (Integer) getAttributeInternal(SEAFARERID);
    }

    /**
     * Sets <code>value</code> as attribute value for SEAFARER_ID using the alias name SeafarerId.
     * @param value value to set the SEAFARER_ID
     */
    public void setSeafarerId(Integer value) {
        setAttributeInternal(SEAFARERID, value);
    }

    /**
     * Gets the attribute value for SEASERVICE_GRD_COMNT using the alias name SeaserviceGrdComnt.
     * @return the SEASERVICE_GRD_COMNT
     */
    public String getSeaserviceGrdComnt() {
        return (String) getAttributeInternal(SEASERVICEGRDCOMNT);
    }

    /**
     * Sets <code>value</code> as attribute value for SEASERVICE_GRD_COMNT using the alias name SeaserviceGrdComnt.
     * @param value value to set the SEASERVICE_GRD_COMNT
     */
    public void setSeaserviceGrdComnt(String value) {
        setAttributeInternal(SEASERVICEGRDCOMNT, value);
    }

    /**
     * Gets the attribute value for SEASERVICE_GRD_STATUS using the alias name SeaserviceGrdStatus.
     * @return the SEASERVICE_GRD_STATUS
     */
    public String getSeaserviceGrdStatus() {
        return (String) getAttributeInternal(SEASERVICEGRDSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for SEASERVICE_GRD_STATUS using the alias name SeaserviceGrdStatus.
     * @param value value to set the SEASERVICE_GRD_STATUS
     */
    public void setSeaserviceGrdStatus(String value) {
        setAttributeInternal(SEASERVICEGRDSTATUS, value);
    }

    /**
     * Gets the attribute value for SEASERVICE_TRANSCRIPT_APVD_BY using the alias name SeaserviceTranscriptApvdBy.
     * @return the SEASERVICE_TRANSCRIPT_APVD_BY
     */
    public BigDecimal getSeaserviceTranscriptApvdBy() {
        return (BigDecimal) getAttributeInternal(SEASERVICETRANSCRIPTAPVDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for SEASERVICE_TRANSCRIPT_APVD_BY using the alias name SeaserviceTranscriptApvdBy.
     * @param value value to set the SEASERVICE_TRANSCRIPT_APVD_BY
     */
    public void setSeaserviceTranscriptApvdBy(BigDecimal value) {
        setAttributeInternal(SEASERVICETRANSCRIPTAPVDBY, value);
    }

    /**
     * Gets the attribute value for SEASERVICE_TRANSCRIPT_APVD_DT using the alias name SeaserviceTranscriptApvdDt.
     * @return the SEASERVICE_TRANSCRIPT_APVD_DT
     */
    public Date getSeaserviceTranscriptApvdDt() {
        return (Date) getAttributeInternal(SEASERVICETRANSCRIPTAPVDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for SEASERVICE_TRANSCRIPT_APVD_DT using the alias name SeaserviceTranscriptApvdDt.
     * @param value value to set the SEASERVICE_TRANSCRIPT_APVD_DT
     */
    public void setSeaserviceTranscriptApvdDt(Date value) {
        setAttributeInternal(SEASERVICETRANSCRIPTAPVDDT, value);
    }

    /**
     * Gets the attribute value for SEASERVICE_TRANSCRIPT_EDOC_ID using the alias name SeaserviceTranscriptEdocId.
     * @return the SEASERVICE_TRANSCRIPT_EDOC_ID
     */
    public BigDecimal getSeaserviceTranscriptEdocId() {
        return (BigDecimal) getAttributeInternal(SEASERVICETRANSCRIPTEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SEASERVICE_TRANSCRIPT_EDOC_ID using the alias name SeaserviceTranscriptEdocId.
     * @param value value to set the SEASERVICE_TRANSCRIPT_EDOC_ID
     */
    public void setSeaserviceTranscriptEdocId(BigDecimal value) {
        setAttributeInternal(SEASERVICETRANSCRIPTEDOCID, value);
    }

    /**
     * Gets the attribute value for STATUS using the alias name Status.
     * @return the STATUS
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for STATUS using the alias name Status.
     * @param value value to set the STATUS
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for VESSEL_PK using the alias name VesselPk.
     * @return the VESSEL_PK
     */
    public Integer getVesselPk() {
        return (Integer) getAttributeInternal(VESSELPK);
    }

    /**
     * Sets <code>value</code> as attribute value for VESSEL_PK using the alias name VesselPk.
     * @param value value to set the VESSEL_PK
     */
    public void setVesselPk(Integer value) {
        setAttributeInternal(VESSELPK, value);
    }

    /**
     * Gets the attribute value for WC_CITY_LIST_ID using the alias name WcCityListId.
     * @return the WC_CITY_LIST_ID
     */
    public Integer getWcCityListId() {
        return (Integer) getAttributeInternal(WCCITYLISTID);
    }

    /**
     * Sets <code>value</code> as attribute value for WC_CITY_LIST_ID using the alias name WcCityListId.
     * @param value value to set the WC_CITY_LIST_ID
     */
    public void setWcCityListId(Integer value) {
        setAttributeInternal(WCCITYLISTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transNationality.
     * @return the transNationality
     */
    public String gettransNationality() {
        String cntryCode = null;
               String cntryName = null;
        if(getNationality() != null)
        {
                cntryCode = getNationality();
                Row [] cntryRows;
                cntryRows = getCountriesLOV1().getFilteredRows("CountryCode", cntryCode);
                if(cntryRows.length > 0)
                {
                   cntryName = cntryRows[0].getAttribute("CountryName").toString(); 
                    
                    }
                return cntryName;
            
            }
        else
        {
        return (String) getAttributeInternal(TRANSNATIONALITY);
    }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transNationality.
     * @param value value to set the  transNationality
     */
    public void settransNationality(String value) {
        setAttributeInternal(TRANSNATIONALITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranPassportCntry.
     * @return the tranPassportCntry
     */
    public String gettranPassportCntry() {        String cntryCode = null;
               String cntryName = null;
        if(getPassportIssuingCountryCode() != null)
        {
                cntryCode = getPassportIssuingCountryCode();
                Row [] cntryRows;
                cntryRows = getCountriesLOV1().getFilteredRows("CountryCode", cntryCode);
                if(cntryRows.length > 0)
                {
                   cntryName = cntryRows[0].getAttribute("CountryName").toString(); 
                    
                    }
                return cntryName;
            
            }
        else
        {
        return (String) getAttributeInternal(TRANPASSPORTCNTRY);
    }
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranPassportCntry.
     * @param value value to set the  tranPassportCntry
     */
    public void settranPassportCntry(String value) {
        setAttributeInternal(TRANPASSPORTCNTRY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranResidenceCntry.
     * @return the tranResidenceCntry
     */
    public String gettranResidenceCntry() {
        String cntryCode = null;
               String cntryName = null;
        if(getResidenceCountryCode() != null)
        {
                cntryCode = getResidenceCountryCode();
                Row [] cntryRows;
                cntryRows = getCountriesLOV1().getFilteredRows("CountryCode", cntryCode);
                if(cntryRows.length > 0)
                {
                   cntryName = cntryRows[0].getAttribute("CountryName").toString(); 
                    
                    }
                return cntryName;
            
            }
        else
        {
            return (String) getAttributeInternal(TRANRESIDENCECNTRY);
        }
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranResidenceCntry.
     * @param value value to set the  tranResidenceCntry
     */
    public void settranResidenceCntry(String value) {
        setAttributeInternal(TRANRESIDENCECNTRY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranVesselNo.
     * @return the tranVesselNo
     */
    public Integer gettranVesselNo() {
        Integer veselpk = null;
               Integer vesselNo = null;
        if(getVesselPk() != null)
        {

                veselpk = getVesselPk();
            RowSet o1 = getVesselRO1();

            ViewObject object = o1.getViewObject();

            object.setNamedWhereClauseParam("pVesselPk", veselpk);
                object.setNamedWhereClauseParam("pImoNumber", null);
            object.executeQuery();

               Row row = object.first();
                if(row != null && row.getAttribute("ImoNumber") != null)
                {
                   vesselNo =Integer.parseInt(row.getAttribute("ImoNumber").toString()); 
                    
                    }
                return vesselNo;
            
            }
        else
        {
        return (Integer) getAttributeInternal(TRANVESSELNO);
    }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranVesselNo.
     * @param value value to set the  tranVesselNo
     */
    public void settranVesselNo(Integer value) {
        setAttributeInternal(TRANVESSELNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranVesselName.
     * @return the tranVesselName
     */
    public String gettranVesselName() {
        Integer veselpk = null;
               String vesselName = null;
        if(getVesselPk() != null)
        {

                veselpk = getVesselPk();
            RowSet o1 = getVesselRO1();

            ViewObject object = o1.getViewObject();

            object.setNamedWhereClauseParam("pVesselPk", veselpk);
                object.setNamedWhereClauseParam("pImoNumber", null);
            object.executeQuery();

               Row row = object.first();
                if(row != null && row.getAttribute("Name") != null)
                {
                   vesselName = row.getAttribute("Name").toString(); 
                    
                    }
                return vesselName;
            
            }
        else
        {
        return (String) getAttributeInternal(TRANVESSELNAME);
    }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranVesselName.
     * @param value value to set the  tranVesselName
     */
    public void settranVesselName(String value) {
        setAttributeInternal(TRANVESSELNAME, value);
    }

    /**
     * Gets the attribute value for INTERNAL_EDOC_ID using the alias name InternalEdocId.
     * @return the INTERNAL_EDOC_ID
     */
    public Integer getInternalEdocId() {
        return (Integer) getAttributeInternal(INTERNALEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for INTERNAL_EDOC_ID using the alias name InternalEdocId.
     * @param value value to set the INTERNAL_EDOC_ID
     */
    public void setInternalEdocId(Integer value) {
        setAttributeInternal(INTERNALEDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranPhotoFilename.
     * @return the tranPhotoFilename
     */
    public String gettranPhotoFilename() {
        if(getPhotoEdocId() != null)
        {
          return "Uploaded";  
            }
        return (String) getAttributeInternal(TRANPHOTOFILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranPhotoFilename.
     * @param value value to set the  tranPhotoFilename
     */
    public void settranPhotoFilename(String value) {
        setAttributeInternal(TRANPHOTOFILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranIdentityFileName.
     * @return the tranIdentityFileName
     */
    public String gettranIdentityFileName() {
        if(getIdentityDocEdocId() != null)
        {
           return "Uploaded"; 
            }
        return (String) getAttributeInternal(TRANIDENTITYFILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranIdentityFileName.
     * @param value value to set the  tranIdentityFileName
     */
    public void settranIdentityFileName(String value) {
        setAttributeInternal(TRANIDENTITYFILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranMedicalFileName.
     * @return the tranMedicalFileName
     */
    public String gettranMedicalFileName() {
        if(getPhysicalEdocId() != null)
        {
           return "Uploaded"; 
            }
        return (String) getAttributeInternal(TRANMEDICALFILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranMedicalFileName.
     * @param value value to set the  tranMedicalFileName
     */
    public void settranMedicalFileName(String value) {
        setAttributeInternal(TRANMEDICALFILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranAffidavitFileName.
     * @return the tranAffidavitFileName
     */
    public String gettranAffidavitFileName() {
        if(getAffidavitEdocId() != null)
        {
            return "Uploaded";
            }
        return (String) getAttributeInternal(TRANAFFIDAVITFILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranAffidavitFileName.
     * @param value value to set the  tranAffidavitFileName
     */
    public void settranAffidavitFileName(String value) {
        setAttributeInternal(TRANAFFIDAVITFILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranAttestationFileName.
     * @return the tranAttestationFileName
     */
    public String gettranAttestationFileName() {
        if(getApplicationEdocId() != null)
        {
          return "Uploaded";  
            }
        return (String) getAttributeInternal(TRANATTESTATIONFILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranAttestationFileName.
     * @param value value to set the  tranAttestationFileName
     */
    public void settranAttestationFileName(String value) {
        setAttributeInternal(TRANATTESTATIONFILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranSecurityFileName.
     * @return the tranSecurityFileName
     */
    public String gettranSecurityFileName() {
        if(getSatEdocId() != null)
        {
          return "Uploaded";  
            }
        return (String) getAttributeInternal(TRANSECURITYFILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranSecurityFileName.
     * @param value value to set the  tranSecurityFileName
     */
    public void settranSecurityFileName(String value) {
        setAttributeInternal(TRANSECURITYFILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranSeaServiceFileName.
     * @return the tranSeaServiceFileName
     */
    public String gettranSeaServiceFileName() {
        if(getSeaserviceTranscriptEdocId() != null)
        {
          return "Uploaded";  
            }
        return (String) getAttributeInternal(TRANSEASERVICEFILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranSeaServiceFileName.
     * @param value value to set the  tranSeaServiceFileName
     */
    public void settranSeaServiceFileName(String value) {
        setAttributeInternal(TRANSEASERVICEFILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranAckNoConsent.
     * @return the tranAckNoConsent
     */
    public String gettranAckNoConsent() {
        return (String) getAttributeInternal(TRANACKNOCONSENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranAckNoConsent.
     * @param value value to set the  tranAckNoConsent
     */
    public void settranAckNoConsent(String value) {
        setAttributeInternal(TRANACKNOCONSENT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranConsentStartDate.
     * @return the tranConsentStartDate
     */
    public Date gettranConsentStartDate() {
        return (Date) getAttributeInternal(TRANCONSENTSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranConsentStartDate.
     * @param value value to set the  tranConsentStartDate
     */
    public void settranConsentStartDate(Date value) {
        setAttributeInternal(TRANCONSENTSTARTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranConsentExpDate.
     * @return the tranConsentExpDate
     */
    public Date gettranConsentExpDate() {
        return (Date) getAttributeInternal(TRANCONSENTEXPDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranConsentExpDate.
     * @param value value to set the  tranConsentExpDate
     */
    public void settranConsentExpDate(Date value) {
        setAttributeInternal(TRANCONSENTEXPDATE, value);
    }

    /**
     * Gets the attribute value for CONSENT_EDOC_ID using the alias name ConsentEdocId.
     * @return the CONSENT_EDOC_ID
     */
    public Integer getConsentEdocId() {
        return (Integer) getAttributeInternal(CONSENTEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for CONSENT_EDOC_ID using the alias name ConsentEdocId.
     * @param value value to set the CONSENT_EDOC_ID
     */
    public void setConsentEdocId(Integer value) {
        setAttributeInternal(CONSENTEDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranUploadedConsentStartDate.
     * @return the tranUploadedConsentStartDate
     */
    public Date gettranUploadedConsentStartDate() {
        return (Date) getAttributeInternal(TRANUPLOADEDCONSENTSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranUploadedConsentStartDate.
     * @param value value to set the  tranUploadedConsentStartDate
     */
    public void settranUploadedConsentStartDate(Date value) {
//        if(value != null)
//        {
//        settranUploadedConsentExpireDate((Date)value.addMonths(60));
//        }
        setAttributeInternal(TRANUPLOADEDCONSENTSTARTDATE, value);
//        Date date = value;
//       Date date2 = (Date)date.addMonths(60);
    }

    /**
     * Gets the attribute value for the calculated attribute tranUploadedConsentExpireDate.
     * @return the tranUploadedConsentExpireDate
     */
    public Date gettranUploadedConsentExpireDate() {
        return (Date) getAttributeInternal(TRANUPLOADEDCONSENTEXPIREDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranUploadedConsentExpireDate.
     * @param value value to set the  tranUploadedConsentExpireDate
     */
    public void settranUploadedConsentExpireDate(Date value) {
        setAttributeInternal(TRANUPLOADEDCONSENTEXPIREDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranConsentUploadedBoolean.
     * @return the tranConsentUploadedBoolean
     */
    public String gettranConsentUploadedBoolean() {
        return (String) getAttributeInternal(TRANCONSENTUPLOADEDBOOLEAN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranConsentUploadedBoolean.
     * @param value value to set the  tranConsentUploadedBoolean
     */
    public void settranConsentUploadedBoolean(String value) {
        setAttributeInternal(TRANCONSENTUPLOADEDBOOLEAN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranUploadButtonLabel.
     * @return the tranUploadButtonLabel
     */
    public String gettranUploadButtonLabel() {
        return (String) getAttributeInternal(TRANUPLOADBUTTONLABEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranUploadButtonLabel.
     * @param value value to set the  tranUploadButtonLabel
     */
    public void settranUploadButtonLabel(String value) {
        setAttributeInternal(TRANUPLOADBUTTONLABEL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranInternalDocStatus.
     * @return the tranInternalDocStatus
     */
    public String gettranInternalDocStatus() {
        if(getPhotoGrdStatus().toString().equalsIgnoreCase("Rejected") || getIdentityDocGrdStatus().toString().equalsIgnoreCase("Rejected") ||
            getPhysicalGrdStatus().toString().equalsIgnoreCase("Rejected") || getAffidavitGrdStatus().toString().equalsIgnoreCase("Rejected") ||
            getApplicationGrdStatus().toString().equalsIgnoreCase("Rejected") || getSatGrdStatus().toString().equalsIgnoreCase("Rejected") ||
        getSeaserviceGrdStatus().toString().equalsIgnoreCase("Rejected"))
        {
            return "Rejected";
            }
        String seafarerGrdStat = "Pending";
        String seafarerWfStat = "Pending";
        if(getSeafarerGrdStatus() != null)
        {
          seafarerGrdStat = getSeafarerGrdStatus();  
            }
        if(getSeafarerWfStatus() != null)
        {
          seafarerWfStat =getSeafarerWfStatus();  
            }
        
        if(seafarerWfStat.equalsIgnoreCase("Rejected"))
                {
                  if(!seafarerGrdStat.equalsIgnoreCase("Rejected"))
                  {
                      return "Rejected";
                      }
                    }
        RowIterator docsOcVO = getSeafarerDocsOcVO();
        while(docsOcVO.hasNext())
        {
        Row row = docsOcVO.next();
            if(row.getAttribute("GradingStatus") != null)
            {
        if(row.getAttribute("GradingStatus").toString().equalsIgnoreCase("Rejected"))
        {
           return "Rejected"; 
            }
            }
        }
        RowIterator docssqcVo = getSeafarerDocsSqcVO();
        while(docssqcVo.hasNext())
        {
        Row row = docssqcVo.next();
            if(row.getAttribute("GradingStatus") != null)
            {
        if(row.getAttribute("GradingStatus").toString().equalsIgnoreCase("Rejected"))
        {
           return "Rejected"; 
            }
            }
        }
        return "Approved";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranInternalDocStatus.
     * @param value value to set the  tranInternalDocStatus
     */
    public void settranInternalDocStatus(String value) {
        setAttributeInternal(TRANINTERNALDOCSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCity.
     * @return the tranCity
     */
    public String gettranCity() {
        Integer cityId = null;
                       String CityName = null;
                if(getWcCityListId() != null)
                {
                        cityId = getWcCityListId();
        //                Row [] suRows;
        //                suRows = getCustAccountShipToLOV1().getFilteredRows("CustAccountId", custAccountId);
        //                if(suRows.length > 0)
        //                {
        //                   custAccountName = suRows[0].getAttribute("PartyName").toString();
        //
        //                    }
                                    RowSet cityRO = getGetCityNameByCityIdRO();
            cityRO.setNamedWhereClauseParam("pCityId", cityId);
                    cityRO.executeQuery();
                    if(cityRO.getRowCount()>0)
                    {
                  Row frow =  cityRO.first();  
                CityName = frow.getAttribute("CityName").toString();
                        }
                return CityName;
                }
                else
                {
        return (String) getAttributeInternal(TRANCITY);
    }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCity.
     * @param value value to set the  tranCity
     */
    public void settranCity(String value) {
        setAttributeInternal(TRANCITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranOfficialNo.
     * @return the tranOfficialNo
     */
    public Integer gettranOfficialNo() {
        Integer veselpk = null;
               Integer officialno = null;
        if(getVesselPk() != null)
        {

                veselpk = getVesselPk();
            RowSet o1 = getVesselRO1();

            ViewObject object = o1.getViewObject();

            object.setNamedWhereClauseParam("pVesselPk", veselpk);
                object.setNamedWhereClauseParam("pImoNumber", null);
            object.executeQuery();

               Row row = object.first();
                if(row != null && row.getAttribute("OfficialNumber") != null)
                {
                   officialno =Integer.parseInt(row.getAttribute("OfficialNumber").toString()); 
                    
                    }
                return officialno;
            
            }
        else
        {
        return (Integer) getAttributeInternal(TRANOFFICIALNO);
    }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranOfficialNo.
     * @param value value to set the  tranOfficialNo
     */
    public void settranOfficialNo(Integer value) {
        setAttributeInternal(TRANOFFICIALNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranImotype.
     * @return the tranImotype
     */
    public String gettranImotype() {
        return (String) getAttributeInternal(TRANIMOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranImotype.
     * @param value value to set the  tranImotype
     */
    public void settranImotype(String value) {
        setAttributeInternal(TRANIMOTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranSupportingFileName.
     * @return the tranSupportingFileName
     */
    public String gettranSupportingFileName() {
        if(getInternalEdocId() != null)
        {
          return "Uploaded";  
            }
        return (String) getAttributeInternal(TRANSUPPORTINGFILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranSupportingFileName.
     * @param value value to set the  tranSupportingFileName
     */
    public void settranSupportingFileName(String value) {
        setAttributeInternal(TRANSUPPORTINGFILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranPhotoHistoryLink.
     * @return the tranPhotoHistoryLink
     */
    public String gettranPhotoHistoryLink() {
        Integer batch_id = getEsiBatchId();
        Integer seafarer_id = getSeafarerId();
        RowSet detailsView = getDocumentHistoryDetailsView();
        detailsView.setNamedWhereClauseParam("pBatchId", batch_id);
        detailsView.setNamedWhereClauseParam("pSeafarerId", seafarer_id);
        detailsView.setNamedWhereClauseParam("pDocCode", "0002");
        detailsView.executeQuery();
        String ret = "N";
        if(detailsView.getRowCount() > 0)
        {
         ret = "Y";   
            }
        
        return ret;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranPhotoHistoryLink.
     * @param value value to set the  tranPhotoHistoryLink
     */
    public void settranPhotoHistoryLink(String value) {
        setAttributeInternal(TRANPHOTOHISTORYLINK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranAttestationHistoryLink.
     * @return the tranAttestationHistoryLink
     */
    public String gettranAttestationHistoryLink() {
        Integer batch_id = getEsiBatchId();
        Integer seafarer_id = getSeafarerId();
        RowSet detailsView = getDocumentHistoryDetailsView();
        detailsView.setNamedWhereClauseParam("pBatchId", batch_id);
        detailsView.setNamedWhereClauseParam("pSeafarerId", seafarer_id);
        detailsView.setNamedWhereClauseParam("pDocCode", "0001");
        detailsView.executeQuery();
        String ret = "N";
        if(detailsView.getRowCount() > 0)
        {
         ret = "Y";   
            }
        
        return ret;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranAttestationHistoryLink.
     * @param value value to set the  tranAttestationHistoryLink
     */
    public void settranAttestationHistoryLink(String value) {
        setAttributeInternal(TRANATTESTATIONHISTORYLINK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranIdentityHistoryLink.
     * @return the tranIdentityHistoryLink
     */
    public String gettranIdentityHistoryLink() {
        Integer batch_id = getEsiBatchId();
        Integer seafarer_id = getSeafarerId();
        RowSet detailsView = getDocumentHistoryDetailsView();
        detailsView.setNamedWhereClauseParam("pBatchId", batch_id);
        detailsView.setNamedWhereClauseParam("pSeafarerId", seafarer_id);
        detailsView.setNamedWhereClauseParam("pDocCode", "0003");
        detailsView.executeQuery();
        String ret = "N";
        if(detailsView.getRowCount() > 0)
        {
         ret = "Y";   
            }
        
        return ret;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranIdentityHistoryLink.
     * @param value value to set the  tranIdentityHistoryLink
     */
    public void settranIdentityHistoryLink(String value) {
        setAttributeInternal(TRANIDENTITYHISTORYLINK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranMedicalHistoryLink.
     * @return the tranMedicalHistoryLink
     */
    public String gettranMedicalHistoryLink() {
        Integer batch_id = getEsiBatchId();
        Integer seafarer_id = getSeafarerId();
        RowSet detailsView = getDocumentHistoryDetailsView();
        detailsView.setNamedWhereClauseParam("pBatchId", batch_id);
        detailsView.setNamedWhereClauseParam("pSeafarerId", seafarer_id);
        detailsView.setNamedWhereClauseParam("pDocCode", "0004");
        detailsView.executeQuery();
        String ret = "N";
        if(detailsView.getRowCount() > 0)
        {
         ret = "Y";   
            }
        
        return ret;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranMedicalHistoryLink.
     * @param value value to set the  tranMedicalHistoryLink
     */
    public void settranMedicalHistoryLink(String value) {
        setAttributeInternal(TRANMEDICALHISTORYLINK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranSeaserviceHistoryLink.
     * @return the tranSeaserviceHistoryLink
     */
    public String gettranSeaserviceHistoryLink() {
        Integer batch_id = getEsiBatchId();
        Integer seafarer_id = getSeafarerId();
        RowSet detailsView = getDocumentHistoryDetailsView();
        detailsView.setNamedWhereClauseParam("pBatchId", batch_id);
        detailsView.setNamedWhereClauseParam("pSeafarerId", seafarer_id);
        detailsView.setNamedWhereClauseParam("pDocCode", "0008");
        detailsView.executeQuery();
        String ret = "N";
        if(detailsView.getRowCount() > 0)
        {
         ret = "Y";   
            }
        
        return ret;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranSeaserviceHistoryLink.
     * @param value value to set the  tranSeaserviceHistoryLink
     */
    public void settranSeaserviceHistoryLink(String value) {
        setAttributeInternal(TRANSEASERVICEHISTORYLINK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranSecurityHistoryLink.
     * @return the tranSecurityHistoryLink
     */
    public String gettranSecurityHistoryLink() {
        Integer batch_id = getEsiBatchId();
        Integer seafarer_id = getSeafarerId();
        RowSet detailsView = getDocumentHistoryDetailsView();
        detailsView.setNamedWhereClauseParam("pBatchId", batch_id);
        detailsView.setNamedWhereClauseParam("pSeafarerId", seafarer_id);
        detailsView.setNamedWhereClauseParam("pDocCode", "0016");
        detailsView.executeQuery();
        String ret = "N";
        if(detailsView.getRowCount() > 0)
        {
         ret = "Y";   
            }
        
        return ret;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranSecurityHistoryLink.
     * @param value value to set the  tranSecurityHistoryLink
     */
    public void settranSecurityHistoryLink(String value) {
        setAttributeInternal(TRANSECURITYHISTORYLINK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranAffidavitHistoryLink.
     * @return the tranAffidavitHistoryLink
     */
    public String gettranAffidavitHistoryLink() {
        Integer batch_id = getEsiBatchId();
        Integer seafarer_id = getSeafarerId();
        RowSet detailsView = getDocumentHistoryDetailsView();
        detailsView.setNamedWhereClauseParam("pBatchId", batch_id);
        detailsView.setNamedWhereClauseParam("pSeafarerId", seafarer_id);
        detailsView.setNamedWhereClauseParam("pDocCode", "0009");
        detailsView.executeQuery();
        String ret = "N";
        if(detailsView.getRowCount() > 0)
        {
         ret = "Y";   
            }
        
        return ret;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranAffidavitHistoryLink.
     * @param value value to set the  tranAffidavitHistoryLink
     */
    public void settranAffidavitHistoryLink(String value) {
        setAttributeInternal(TRANAFFIDAVITHISTORYLINK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranInternalHistoryLink.
     * @return the tranInternalHistoryLink
     */
    public String gettranInternalHistoryLink() {
        Integer batch_id = getEsiBatchId();
        Integer seafarer_id = getSeafarerId();
        RowSet detailsView = getDocumentHistoryDetailsView();
        detailsView.setNamedWhereClauseParam("pBatchId", batch_id);
        detailsView.setNamedWhereClauseParam("pSeafarerId", seafarer_id);
        detailsView.setNamedWhereClauseParam("pDocCode", "0031");
        detailsView.executeQuery();
        String ret = "N";
        if(detailsView.getRowCount() > 0)
        {
         ret = "Y";   
            }
        
        return ret;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranInternalHistoryLink.
     * @param value value to set the  tranInternalHistoryLink
     */
    public void settranInternalHistoryLink(String value) {
        setAttributeInternal(TRANINTERNALHISTORYLINK, value);
    }

    /**
     * Gets the attribute value for SEAFARER_WF_STATUS using the alias name SeafarerWfStatus.
     * @return the SEAFARER_WF_STATUS
     */
    public String getSeafarerWfStatus() {
        return (String) getAttributeInternal(SEAFARERWFSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for SEAFARER_WF_STATUS using the alias name SeafarerWfStatus.
     * @param value value to set the SEAFARER_WF_STATUS
     */
    public void setSeafarerWfStatus(String value) {
        setAttributeInternal(SEAFARERWFSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranAdditionalDocument.
     * @return the tranAdditionalDocument
     */
    public String gettranAdditionalDocument() {
        if(getAdditionalDocEdocId() != null)
        {
          return "Uploaded";  
            }
        return (String) getAttributeInternal(TRANADDITIONALDOCUMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranAdditionalDocument.
     * @param value value to set the  tranAdditionalDocument
     */
    public void settranAdditionalDocument(String value) {
        setAttributeInternal(TRANADDITIONALDOCUMENT, value);
    }

    /**
     * Gets the attribute value for ADDITIONAL_DOC_EDOC_ID using the alias name AdditionalDocEdocId.
     * @return the ADDITIONAL_DOC_EDOC_ID
     */
    public Integer getAdditionalDocEdocId() {
        return (Integer) getAttributeInternal(ADDITIONALDOCEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDITIONAL_DOC_EDOC_ID using the alias name AdditionalDocEdocId.
     * @param value value to set the ADDITIONAL_DOC_EDOC_ID
     */
    public void setAdditionalDocEdocId(Integer value) {
        setAttributeInternal(ADDITIONALDOCEDOCID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute SeafarerWfStatusFinal.
     * @return the SeafarerWfStatusFinal
     */
    public String getSeafarerWfStatusFinal() {
        if(getSeafarerWfStatus().equalsIgnoreCase("Rejected") || getSeafarerWfStatus().equalsIgnoreCase("Unverified"))
        {
            return "Rejected";
            }                                                                              
                                                                                        
        return (String) getAttributeInternal(SEAFARERWFSTATUSFINAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SeafarerWfStatusFinal.
     * @param value value to set the  SeafarerWfStatusFinal
     */
    public void setSeafarerWfStatusFinal(String value) {
        setAttributeInternal(SEAFARERWFSTATUSFINAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UploadTabColor.
     * @return the UploadTabColor
     */
    public String getUploadTabColor() {
//        String color = null;
        String seafarerGrdStat = "Pending";
        String seafarerWfStat = "Pending";
        if(getSeafarerGrdStatus() != null)
        {
          seafarerGrdStat = getSeafarerGrdStatus();  
            }
        if(getSeafarerWfStatus() != null)
        {
          seafarerWfStat =getSeafarerWfStatus();  
            }
        if(getPhotoGrdStatus() != null)
        {
          if(getPhotoGrdStatus().equalsIgnoreCase("Rejected"))
          {
           return "Upload Documents (Deficient)";   
              }
            }
        if(getIdentityDocGrdStatus() != null)
        {
          if(getIdentityDocGrdStatus().equalsIgnoreCase("Rejected"))
          {
                  return "Upload Documents (Deficient)";   
              }
            }
        if(getApplicationGrdStatus() != null)
        {
          if(getApplicationGrdStatus().equalsIgnoreCase("Rejected"))
          {
                  return "Upload Documents (Deficient)";    
              }
            }
        if(getAffidavitGrdStatus() != null)
        {
          if(getAffidavitGrdStatus().equalsIgnoreCase("Rejected"))
          {
                  return "Upload Documents (Deficient)";    
              }
            }
        if(getPhysicalGrdStatus() != null)
        {
          if(getPhysicalGrdStatus().equalsIgnoreCase("Rejected"))
          {
                  return "Upload Documents (Deficient)";  
              }
            }
        if(getSeaserviceGrdStatus() != null)
        {
          if(getSeaserviceGrdStatus().equalsIgnoreCase("Rejected"))
          {
                  return "Upload Documents (Deficient)";   
              }
            }
        if(getSatGrdStatus() != null)
        {
          if(getSatGrdStatus().equalsIgnoreCase("Rejected"))
          {
                  return "Upload Documents (Deficient)"; 
              }
            }
        if(seafarerWfStat.equalsIgnoreCase("Rejected"))
        {
          if(!seafarerGrdStat.equalsIgnoreCase("Rejected"))
          {
              return "Upload Documents (Deficient)";
              }
            }
        
        
        return "Upload Documents";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UploadTabColor.
     * @param value value to set the  UploadTabColor
     */
    public void setUploadTabColor(String value) {
        setAttributeInternal(UPLOADTABCOLOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OcTabColor.
     * @return the OcTabColor
     */
    public String getOcTabColor() {
        RowIterator docsOcVO = getSeafarerDocsOcVO();
        while(docsOcVO.hasNext())
        {
         Row row = docsOcVO.next();
         if(row.getAttribute("GradingStatus") != null)
         {
           if(row.getAttribute("GradingStatus").toString().equalsIgnoreCase("Rejected"))
           {
             return "OCs Requested (Deficient)";  
               
               }
             }
            
            
            }
        return "OCs Requested";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OcTabColor.
     * @param value value to set the  OcTabColor
     */
    public void setOcTabColor(String value) {
        setAttributeInternal(OCTABCOLOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SqcTabColor.
     * @return the SqcTabColor
     */
    public String getSqcTabColor() {
        RowIterator docsSqcVO = getSeafarerDocsSqcVO();
        while(docsSqcVO.hasNext())
        {
         Row row = docsSqcVO.next();
         if(row.getAttribute("GradingStatus") != null)
         {
           if(row.getAttribute("GradingStatus").toString().equalsIgnoreCase("Rejected"))
           {
             return "SQCs Requested (Deficient)";  
               
               }
             }
            
            
            }
        if(getBookGrdStatus().toString().equalsIgnoreCase("rejected") )
        {
                return "SQCs Requested (Deficient)";   
            }
        if(getIdCardGrdStatus() != null)
        {
        if(getIdCardGrdStatus().toString().equalsIgnoreCase("rejected") )
        {
                return "SQCs Requested (Deficient)";   
            }
        }
        
        return "SQCs Requested";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SqcTabColor.
     * @param value value to set the  SqcTabColor
     */
    public void setSqcTabColor(String value) {
        setAttributeInternal(SQCTABCOLOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCraCount.
     * @return the tranCraCount
     */
    public Integer gettranCraCount() {
        RowIterator rit = getSeafarerDocsOcVO();
        Integer count =0;
        while(rit.hasNext())
        {
          Row row = rit.next();
          if(row.getAttribute("CraRequired") != null)
          {
           if(row.getAttribute("CraRequired").toString().equalsIgnoreCase("Y"))
           {
              count++; 
               }
              
              }
            
            }
        return count;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCraCount.
     * @param value value to set the  tranCraCount
     */
    public void settranCraCount(Integer value) {
        setAttributeInternal(TRANCRACOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute checkRowStatus.
     * @return the checkRowStatus
     */
    public Integer getcheckRowStatus() {
        byte entityState = this.getEntity(0).getEntityState();
                return new Integer(entityState);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute checkRowStatus.
     * @param value value to set the  checkRowStatus
     */
    public void setcheckRowStatus(Integer value) {
        setAttributeInternal(CHECKROWSTATUS, value);
    }

    /**
     * Gets the attribute value for DEFICIENT_ACK_DATE using the alias name DeficientAckDate.
     * @return the DEFICIENT_ACK_DATE
     */
    public Date getDeficientAckDate() {
        return (Date) getAttributeInternal(DEFICIENTACKDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DEFICIENT_ACK_DATE using the alias name DeficientAckDate.
     * @param value value to set the DEFICIENT_ACK_DATE
     */
    public void setDeficientAckDate(Date value) {
        setAttributeInternal(DEFICIENTACKDATE, value);
    }

    /**
     * Gets the attribute value for DEFICIENT_ACK_FLAG using the alias name DeficientAckFlag.
     * @return the DEFICIENT_ACK_FLAG
     */
    public String getDeficientAckFlag() {
        return (String) getAttributeInternal(DEFICIENTACKFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for DEFICIENT_ACK_FLAG using the alias name DeficientAckFlag.
     * @param value value to set the DEFICIENT_ACK_FLAG
     */
    public void setDeficientAckFlag(String value) {
        setAttributeInternal(DEFICIENTACKFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranConsentMarketing.
     * @return the tranConsentMarketing
     */
    public String gettranConsentMarketing() {
        return (String) getAttributeInternal(TRANCONSENTMARKETING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranConsentMarketing.
     * @param value value to set the  tranConsentMarketing
     */
    public void settranConsentMarketing(String value) {
        setAttributeInternal(TRANCONSENTMARKETING, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranVesselNameInternal.
     * @return the tranVesselNameInternal
     */
    public String gettranVesselNameInternal() {
        Integer veselpk = null;
               String vesselName = null;
        if(getVesselPk() != null)
        {

                veselpk = getVesselPk();
            RowSet o1 = getVesselRO1();

            ViewObject object = o1.getViewObject();

            object.setNamedWhereClauseParam("pVesselPk", veselpk);
                object.setNamedWhereClauseParam("pImoNumber", null);
            object.executeQuery();

               Row row = object.first();
                if(row != null && row.getAttribute("FullName") != null)
                {
                   vesselName = row.getAttribute("FullName").toString(); 
                    
                    }
                return vesselName;
            
            }
        else
        {
        return (String) getAttributeInternal(TRANVESSELNAMEINTERNAL);
    }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranVesselNameInternal.
     * @param value value to set the  tranVesselNameInternal
     */
    public void settranVesselNameInternal(String value) {
        setAttributeInternal(TRANVESSELNAMEINTERNAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranEntityType.
     * @return the tranEntityType
     */
    public String gettranEntityType() 
    {
        if(getAttributeInternal(TRANENTITYTYPE) != null)
            return (String) getAttributeInternal(TRANENTITYTYPE);
        else
            return "SEAFARERS";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranEntityType.
     * @param value value to set the  tranEntityType
     */
    public void settranEntityType(String value) {
        setAttributeInternal(TRANENTITYTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute consentType.
     * @return the consentType
     */
    public String getconsentType() {
        return (String) getAttributeInternal(CONSENTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute consentType.
     * @param value value to set the  consentType
     */
    public void setconsentType(String value) {
        setAttributeInternal(CONSENTTYPE, value);
    }

    /**
     * Gets the attribute value for CON_GRD_STATUS using the alias name ConGrdStatus.
     * @return the CON_GRD_STATUS
     */
    public String getConGrdStatus() {
        return (String) getAttributeInternal(CONGRDSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for CON_GRD_STATUS using the alias name ConGrdStatus.
     * @param value value to set the CON_GRD_STATUS
     */
    public void setConGrdStatus(String value) {
        setAttributeInternal(CONGRDSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranAdditionalDocStatus.
     * @return the tranAdditionalDocStatus
     */
    public String gettranAdditionalDocStatus() {
        String seafarerGrdStat = "Pending";
               String seafarerWfStat = "Pending";
               if(getSeafarerGrdStatus() != null)
               {
                 seafarerGrdStat = getSeafarerGrdStatus();  
                   }
               if(getSeafarerWfStatus() != null)
               {
                 seafarerWfStat =getSeafarerWfStatus();  
                   }
                   if(seafarerWfStat.equalsIgnoreCase("Rejected"))
                          {
                            if(!seafarerGrdStat.equalsIgnoreCase("Rejected"))
                            {
                                return "Rejected";
                                }
                              } 
               return "additional";
               }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranAdditionalDocStatus.
     * @param value value to set the  tranAdditionalDocStatus
     */
    public void settranAdditionalDocStatus(String value) {
        setAttributeInternal(TRANADDITIONALDOCSTATUS, value);
    }

    /**
     * Gets the attribute value for BOOK_ISSUE_TYPE_UPD using the alias name BookIssueTypeUpd.
     * @return the BOOK_ISSUE_TYPE_UPD
     */
    public String getBookIssueTypeUpd() {
        return (String) getAttributeInternal(BOOKISSUETYPEUPD);
    }

    /**
     * Sets <code>value</code> as attribute value for BOOK_ISSUE_TYPE_UPD using the alias name BookIssueTypeUpd.
     * @param value value to set the BOOK_ISSUE_TYPE_UPD
     */
    public void setBookIssueTypeUpd(String value) {
        setAttributeInternal(BOOKISSUETYPEUPD, value);
    }

    /**
     * Gets the attribute value for BOOK_ISSUE_TYPE_UPD_DT using the alias name BookIssueTypeUpdDt.
     * @return the BOOK_ISSUE_TYPE_UPD_DT
     */
    public Timestamp getBookIssueTypeUpdDt() {
        return (Timestamp) getAttributeInternal(BOOKISSUETYPEUPDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for BOOK_ISSUE_TYPE_UPD_DT using the alias name BookIssueTypeUpdDt.
     * @param value value to set the BOOK_ISSUE_TYPE_UPD_DT
     */
    public void setBookIssueTypeUpdDt(Timestamp value) {
        setAttributeInternal(BOOKISSUETYPEUPDDT, value);
    }

    /**
     * Gets the attribute value for IDCARD_ISSUE_TYPE_UPD using the alias name IdcardIssueTypeUpd.
     * @return the IDCARD_ISSUE_TYPE_UPD
     */
    public String getIdcardIssueTypeUpd() {
        return (String) getAttributeInternal(IDCARDISSUETYPEUPD);
    }

    /**
     * Sets <code>value</code> as attribute value for IDCARD_ISSUE_TYPE_UPD using the alias name IdcardIssueTypeUpd.
     * @param value value to set the IDCARD_ISSUE_TYPE_UPD
     */
    public void setIdcardIssueTypeUpd(String value) {
        setAttributeInternal(IDCARDISSUETYPEUPD, value);
    }

    /**
     * Gets the attribute value for IDCARD_ISSUE_TYPE_UPD_DT using the alias name IdcardIssueTypeUpdDt.
     * @return the IDCARD_ISSUE_TYPE_UPD_DT
     */
    public Timestamp getIdcardIssueTypeUpdDt() {
        return (Timestamp) getAttributeInternal(IDCARDISSUETYPEUPDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for IDCARD_ISSUE_TYPE_UPD_DT using the alias name IdcardIssueTypeUpdDt.
     * @param value value to set the IDCARD_ISSUE_TYPE_UPD_DT
     */
    public void setIdcardIssueTypeUpdDt(Timestamp value) {
        setAttributeInternal(IDCARDISSUETYPEUPDDT, value);
    }

    /**
     * Gets the attribute value for CORRECTED_FLAG using the alias name CorrectedFlag.
     * @return the CORRECTED_FLAG
     */
    public String getCorrectedFlag() {
        return (String) getAttributeInternal(CORRECTEDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for CORRECTED_FLAG using the alias name CorrectedFlag.
     * @param value value to set the CORRECTED_FLAG
     */
    public void setCorrectedFlag(String value) {
        setAttributeInternal(CORRECTEDFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBatchName.
     * @return the TransBatchName
     */
    public String getTransBatchName() 
    {
//        if(getAttributeInternal(TRANSBATCHNAME) == null && getEsiBatchId()!= null)
//        {
//            ViewObject batchVo = getAm().getgetBatchDetailsView();
//            batchVo.setNamedWhereClauseParam("pBatchId", getEsiBatchId());
//            batchVo.executeQuery();
//            
//            Row[] batchRow = batchVo.getAllRowsInRange();
//            
//            if(batchRow.length > 0 && batchRow[0].getAttribute("BatchName") != null)
//            {
//                return batchRow[0].getAttribute("BatchName").toString();
//            }
//        }
        return (String) getAttributeInternal(TRANSBATCHNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBatchName.
     * @param value value to set the  TransBatchName
     */
    public void setTransBatchName(String value) {
        setAttributeInternal(TRANSBATCHNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExternalOld.
     * @return the ExternalOld
     */
    public String getExternalOld() {
        if(getSeafarerId() != null)
        {
        RowSet checkOldSeafarerView1 = getCheckOldSeafarerView1();
        checkOldSeafarerView1.setNamedWhereClauseParam("pSeafarerId", getSeafarerId());
        checkOldSeafarerView1.executeQuery();
        if(checkOldSeafarerView1.getRowCount() > 0)
        {
            return "old";
            }
        else
        {
           return "new"; 
            }
        
        }
        return "new";

//        return (String) getAttributeInternal(EXTERNALOLD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExternalOld.
     * @param value value to set the  ExternalOld
     */
    public void setExternalOld(String value) {
        setAttributeInternal(EXTERNALOLD, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SeafarerDocsSqcVO.
     */
    public RowIterator getSeafarerDocsSqcVO() {
        return (RowIterator) getAttributeInternal(SEAFARERDOCSSQCVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SeafarerDocsOcVO.
     */
    public RowIterator getSeafarerDocsOcVO() {
        return (RowIterator) getAttributeInternal(SEAFARERDOCSOCVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CountriesLOV1.
     */
    public RowSet getCountriesLOV1() {
        return (RowSet) getAttributeInternal(COUNTRIESLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> VesselRO1.
     */
    public RowSet getVesselRO1() {
        return (RowSet) getAttributeInternal(VESSELRO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WcCityListLOV.
     */
    public RowSet getWcCityListLOV() {
        return (RowSet) getAttributeInternal(WCCITYLISTLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GetCityNameByCityIdRO.
     */
    public RowSet getGetCityNameByCityIdRO() {
        return (RowSet) getAttributeInternal(GETCITYNAMEBYCITYIDRO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DocumentHistoryDetailsView.
     */
    public RowSet getDocumentHistoryDetailsView() {
        return (RowSet) getAttributeInternal(DOCUMENTHISTORYDETAILSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> VesselListView.
     */
    public RowSet getVesselListView() {
        return (RowSet) getAttributeInternal(VESSELLISTVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> EntityTypeView1.
     */
    public RowSet getEntityTypeView1() {
        return (RowSet) getAttributeInternal(ENTITYTYPEVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CheckOldSeafarerView1.
     */
    public RowSet getCheckOldSeafarerView1() {
        return (RowSet) getAttributeInternal(CHECKOLDSEAFARERVIEW1);
    }

    public RMIApplicationEntryAppModuleImpl getAm()
    {
        return (RMIApplicationEntryAppModuleImpl) this.getApplicationModule();
    }
}

