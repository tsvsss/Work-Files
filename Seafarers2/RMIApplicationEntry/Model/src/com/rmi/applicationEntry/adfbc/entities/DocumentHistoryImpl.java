package com.rmi.applicationEntry.adfbc.entities;

import com.rmi.applicationEntry.adfbc.extensions.CustomEntity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 09 12:33:46 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DocumentHistoryImpl extends CustomEntity {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PDocId,
        EsiBatchId,
        SeafarerId,
        DocCode,
        EdocId,
        CreatedBy,
        CreationDate,
        LastUpdatedBy,
        LastUpdateDate,
        DocumentUploadedBy,
        DocumentUploadedDate,
        EsdiId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PDOCID = AttributesEnum.PDocId.index();
    public static final int ESIBATCHID = AttributesEnum.EsiBatchId.index();
    public static final int SEAFARERID = AttributesEnum.SeafarerId.index();
    public static final int DOCCODE = AttributesEnum.DocCode.index();
    public static final int EDOCID = AttributesEnum.EdocId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int DOCUMENTUPLOADEDBY = AttributesEnum.DocumentUploadedBy.index();
    public static final int DOCUMENTUPLOADEDDATE = AttributesEnum.DocumentUploadedDate.index();
    public static final int ESDIID = AttributesEnum.EsdiId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DocumentHistoryImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.rmi.applicationEntry.adfbc.entities.DocumentHistory");
    }


    /**
     * Gets the attribute value for PDocId, using the alias name PDocId.
     * @return the value of PDocId
     */
    public Integer getPDocId() {
        return (Integer) getAttributeInternal(PDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PDocId.
     * @param value value to set the PDocId
     */
    public void setPDocId(Integer value) {
        setAttributeInternal(PDOCID, value);
    }

    /**
     * Gets the attribute value for EsiBatchId, using the alias name EsiBatchId.
     * @return the value of EsiBatchId
     */
    public Integer getEsiBatchId() {
        return (Integer) getAttributeInternal(ESIBATCHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EsiBatchId.
     * @param value value to set the EsiBatchId
     */
    public void setEsiBatchId(Integer value) {
        setAttributeInternal(ESIBATCHID, value);
    }

    /**
     * Gets the attribute value for SeafarerId, using the alias name SeafarerId.
     * @return the value of SeafarerId
     */
    public Integer getSeafarerId() {
        return (Integer) getAttributeInternal(SEAFARERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SeafarerId.
     * @param value value to set the SeafarerId
     */
    public void setSeafarerId(Integer value) {
        setAttributeInternal(SEAFARERID, value);
    }

    /**
     * Gets the attribute value for DocCode, using the alias name DocCode.
     * @return the value of DocCode
     */
    public String getDocCode() {
        return (String) getAttributeInternal(DOCCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocCode.
     * @param value value to set the DocCode
     */
    public void setDocCode(String value) {
        setAttributeInternal(DOCCODE, value);
    }

    /**
     * Gets the attribute value for EdocId, using the alias name EdocId.
     * @return the value of EdocId
     */
    public Integer getEdocId() {
        return (Integer) getAttributeInternal(EDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EdocId.
     * @param value value to set the EdocId
     */
    public void setEdocId(Integer value) {
        setAttributeInternal(EDOCID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public BigDecimal getLastUpdatedBy() {
        return (BigDecimal) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(BigDecimal value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }


    /**
     * Gets the attribute value for DocumentUploadedBy, using the alias name DocumentUploadedBy.
     * @return the value of DocumentUploadedBy
     */
    public Integer getDocumentUploadedBy() {
        return (Integer) getAttributeInternal(DOCUMENTUPLOADEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocumentUploadedBy.
     * @param value value to set the DocumentUploadedBy
     */
    public void setDocumentUploadedBy(Integer value) {
        setAttributeInternal(DOCUMENTUPLOADEDBY, value);
    }

    /**
     * Gets the attribute value for DocumentUploadedDate, using the alias name DocumentUploadedDate.
     * @return the value of DocumentUploadedDate
     */
    public Date getDocumentUploadedDate() {
        return (Date) getAttributeInternal(DOCUMENTUPLOADEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocumentUploadedDate.
     * @param value value to set the DocumentUploadedDate
     */
    public void setDocumentUploadedDate(Date value) {
        setAttributeInternal(DOCUMENTUPLOADEDDATE, value);
    }


    /**
     * Gets the attribute value for EsdiId, using the alias name EsdiId.
     * @return the value of EsdiId
     */
    public Integer getEsdiId() {
        return (Integer) getAttributeInternal(ESDIID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EsdiId.
     * @param value value to set the EsdiId
     */
    public void setEsdiId(Integer value) {
        setAttributeInternal(ESDIID, value);
    }


    /**
     * @param pDocId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer pDocId) {
        return new Key(new Object[] { pDocId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
//        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

