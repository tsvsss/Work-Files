package com.rmi.applicationEntry.adfbc.views;

import com.rmi.applicationEntry.adfbc.entities.BatchIfaceImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import javax.faces.application.FacesMessage;

import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Feb 09 17:22:27 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BatchIfaceViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_BATCHESEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BatchDate,
        BatchName,
        BatchResubmittedDate,
        BatchReturnedDate,
        BatchStatus,
        BatchSubmittedBy,
        BatchSubmittedDate,
        BillToCustAccountId,
        BillToOrgContactId,
        BillToSiteUseId,
        CreatedBy,
        CreationDate,
        DeliverToCustAccountId,
        DeliverToSiteUseId,
        EsiBatchId,
        ExpeditedProcessing,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        Notes,
        OeHeaderId,
        PurchaseOrderNumber,
        ShipToCustAccountId,
        ShipToOrgContactId,
        ShipToSiteUseId,
        VesselNames,
        tranCustAccountBillToName,
        tranBillToSuAddress,
        tranCustAccountShipToName,
        tranShipToSuAddress,
        tranCustAccountDeliverToName,
        tranDeliverToSuAddress,
        tranEmailOrdering,
        tranUserType,
        BatchAssignedToRegion,
        checkBatchRow,
        tranInvoiceEmailId,
        InvoiceAgentEmailId,
        tranInvoiceAgentEmailId,
        SeafarerVO,
        WorkOrderDetailsRO,
        CustAccountBilltoLOV1,
        CustAccountBillToSuLOV1,
        CustAccountShipToLOV1,
        CustAccountShipToSuLOV1,
        CustAccountDeliverToLOV1,
        CustAccountDeliverToSuLOV1,
        GetOrderingAgentEmailIdRO1,
        CustAccountBillToAllLOV1,
        getCustomerNameByCustAccIdRO1,
        CustAccNameByIdLOV1,
        CustAccountBillSuRS,
        CustAccountDeliverToSuRS,
        CustAccountShipToSuRS,
        CustAccountBilltoRS,
        CustAccountShipToRS,
        OrderingAgentEmailIdLOV1,
        OrderingAgentEmailIdRS,
        InvoiceAgentEmailIdView1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return BatchIfaceViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return BatchIfaceViewRowImpl.AttributesEnum.firstIndex() +
                   BatchIfaceViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = BatchIfaceViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BATCHDATE = AttributesEnum.BatchDate.index();
    public static final int BATCHNAME = AttributesEnum.BatchName.index();
    public static final int BATCHRESUBMITTEDDATE = AttributesEnum.BatchResubmittedDate.index();
    public static final int BATCHRETURNEDDATE = AttributesEnum.BatchReturnedDate.index();
    public static final int BATCHSTATUS = AttributesEnum.BatchStatus.index();
    public static final int BATCHSUBMITTEDBY = AttributesEnum.BatchSubmittedBy.index();
    public static final int BATCHSUBMITTEDDATE = AttributesEnum.BatchSubmittedDate.index();
    public static final int BILLTOCUSTACCOUNTID = AttributesEnum.BillToCustAccountId.index();
    public static final int BILLTOORGCONTACTID = AttributesEnum.BillToOrgContactId.index();
    public static final int BILLTOSITEUSEID = AttributesEnum.BillToSiteUseId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int DELIVERTOCUSTACCOUNTID = AttributesEnum.DeliverToCustAccountId.index();
    public static final int DELIVERTOSITEUSEID = AttributesEnum.DeliverToSiteUseId.index();
    public static final int ESIBATCHID = AttributesEnum.EsiBatchId.index();
    public static final int EXPEDITEDPROCESSING = AttributesEnum.ExpeditedProcessing.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int OEHEADERID = AttributesEnum.OeHeaderId.index();
    public static final int PURCHASEORDERNUMBER = AttributesEnum.PurchaseOrderNumber.index();
    public static final int SHIPTOCUSTACCOUNTID = AttributesEnum.ShipToCustAccountId.index();
    public static final int SHIPTOORGCONTACTID = AttributesEnum.ShipToOrgContactId.index();
    public static final int SHIPTOSITEUSEID = AttributesEnum.ShipToSiteUseId.index();
    public static final int VESSELNAMES = AttributesEnum.VesselNames.index();
    public static final int TRANCUSTACCOUNTBILLTONAME = AttributesEnum.tranCustAccountBillToName.index();
    public static final int TRANBILLTOSUADDRESS = AttributesEnum.tranBillToSuAddress.index();
    public static final int TRANCUSTACCOUNTSHIPTONAME = AttributesEnum.tranCustAccountShipToName.index();
    public static final int TRANSHIPTOSUADDRESS = AttributesEnum.tranShipToSuAddress.index();
    public static final int TRANCUSTACCOUNTDELIVERTONAME = AttributesEnum.tranCustAccountDeliverToName.index();
    public static final int TRANDELIVERTOSUADDRESS = AttributesEnum.tranDeliverToSuAddress.index();
    public static final int TRANEMAILORDERING = AttributesEnum.tranEmailOrdering.index();
    public static final int TRANUSERTYPE = AttributesEnum.tranUserType.index();
    public static final int BATCHASSIGNEDTOREGION = AttributesEnum.BatchAssignedToRegion.index();
    public static final int CHECKBATCHROW = AttributesEnum.checkBatchRow.index();
    public static final int TRANINVOICEEMAILID = AttributesEnum.tranInvoiceEmailId.index();
    public static final int INVOICEAGENTEMAILID = AttributesEnum.InvoiceAgentEmailId.index();
    public static final int TRANINVOICEAGENTEMAILID = AttributesEnum.tranInvoiceAgentEmailId.index();
    public static final int SEAFARERVO = AttributesEnum.SeafarerVO.index();
    public static final int WORKORDERDETAILSRO = AttributesEnum.WorkOrderDetailsRO.index();
    public static final int CUSTACCOUNTBILLTOLOV1 = AttributesEnum.CustAccountBilltoLOV1.index();
    public static final int CUSTACCOUNTBILLTOSULOV1 = AttributesEnum.CustAccountBillToSuLOV1.index();
    public static final int CUSTACCOUNTSHIPTOLOV1 = AttributesEnum.CustAccountShipToLOV1.index();
    public static final int CUSTACCOUNTSHIPTOSULOV1 = AttributesEnum.CustAccountShipToSuLOV1.index();
    public static final int CUSTACCOUNTDELIVERTOLOV1 = AttributesEnum.CustAccountDeliverToLOV1.index();
    public static final int CUSTACCOUNTDELIVERTOSULOV1 = AttributesEnum.CustAccountDeliverToSuLOV1.index();
    public static final int GETORDERINGAGENTEMAILIDRO1 = AttributesEnum.GetOrderingAgentEmailIdRO1.index();
    public static final int CUSTACCOUNTBILLTOALLLOV1 = AttributesEnum.CustAccountBillToAllLOV1.index();
    public static final int GETCUSTOMERNAMEBYCUSTACCIDRO1 = AttributesEnum.getCustomerNameByCustAccIdRO1.index();
    public static final int CUSTACCNAMEBYIDLOV1 = AttributesEnum.CustAccNameByIdLOV1.index();
    public static final int CUSTACCOUNTBILLSURS = AttributesEnum.CustAccountBillSuRS.index();
    public static final int CUSTACCOUNTDELIVERTOSURS = AttributesEnum.CustAccountDeliverToSuRS.index();
    public static final int CUSTACCOUNTSHIPTOSURS = AttributesEnum.CustAccountShipToSuRS.index();
    public static final int CUSTACCOUNTBILLTORS = AttributesEnum.CustAccountBilltoRS.index();
    public static final int CUSTACCOUNTSHIPTORS = AttributesEnum.CustAccountShipToRS.index();
    public static final int ORDERINGAGENTEMAILIDLOV1 = AttributesEnum.OrderingAgentEmailIdLOV1.index();
    public static final int ORDERINGAGENTEMAILIDRS = AttributesEnum.OrderingAgentEmailIdRS.index();
    public static final int INVOICEAGENTEMAILIDVIEW1 = AttributesEnum.InvoiceAgentEmailIdView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BatchIfaceViewRowImpl() {
    }

    /**
     * Gets BatchesEO entity object.
     * @return the BatchesEO
     */
    public BatchIfaceImpl getBatchesEO() {
        return (BatchIfaceImpl) getEntity(ENTITY_BATCHESEO);
    }

    /**
     * Gets the attribute value for BATCH_DATE using the alias name BatchDate.
     * @return the BATCH_DATE
     */
    public Date getBatchDate() {
        return (Date) getAttributeInternal(BATCHDATE);
    }

    /**
     * Gets the attribute value for BATCH_NAME using the alias name BatchName.
     * @return the BATCH_NAME
     */
    public String getBatchName() {
        return (String) getAttributeInternal(BATCHNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_NAME using the alias name BatchName.
     * @param value value to set the BATCH_NAME
     */
    public void setBatchName(String value) {
        setAttributeInternal(BATCHNAME, value);
    }

    /**
     * Gets the attribute value for BATCH_RESUBMITTED_DATE using the alias name BatchResubmittedDate.
     * @return the BATCH_RESUBMITTED_DATE
     */
    public Timestamp getBatchResubmittedDate() {
        return (Timestamp) getAttributeInternal(BATCHRESUBMITTEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_RESUBMITTED_DATE using the alias name BatchResubmittedDate.
     * @param value value to set the BATCH_RESUBMITTED_DATE
     */
    public void setBatchResubmittedDate(Timestamp value) {
        setAttributeInternal(BATCHRESUBMITTEDDATE, value);
    }

    /**
     * Gets the attribute value for BATCH_RETURNED_DATE using the alias name BatchReturnedDate.
     * @return the BATCH_RETURNED_DATE
     */
    public Timestamp getBatchReturnedDate() {
        return (Timestamp) getAttributeInternal(BATCHRETURNEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_RETURNED_DATE using the alias name BatchReturnedDate.
     * @param value value to set the BATCH_RETURNED_DATE
     */
    public void setBatchReturnedDate(Timestamp value) {
        setAttributeInternal(BATCHRETURNEDDATE, value);
    }

    /**
     * Gets the attribute value for BATCH_STATUS using the alias name BatchStatus.
     * @return the BATCH_STATUS
     */
    public String getBatchStatus() {
        return (String) getAttributeInternal(BATCHSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_STATUS using the alias name BatchStatus.
     * @param value value to set the BATCH_STATUS
     */
    public void setBatchStatus(String value) {
        setAttributeInternal(BATCHSTATUS, value);
    }

    /**
     * Gets the attribute value for BATCH_SUBMITTED_BY using the alias name BatchSubmittedBy.
     * @return the BATCH_SUBMITTED_BY
     */
    public Integer getBatchSubmittedBy() {
        return (Integer) getAttributeInternal(BATCHSUBMITTEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_SUBMITTED_BY using the alias name BatchSubmittedBy.
     * @param value value to set the BATCH_SUBMITTED_BY
     */
    public void setBatchSubmittedBy(Integer value) {
        setAttributeInternal(BATCHSUBMITTEDBY, value);
    }

    /**
     * Gets the attribute value for BATCH_SUBMITTED_DATE using the alias name BatchSubmittedDate.
     * @return the BATCH_SUBMITTED_DATE
     */
    public Date getBatchSubmittedDate() {
        return (Date) getAttributeInternal(BATCHSUBMITTEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_SUBMITTED_DATE using the alias name BatchSubmittedDate.
     * @param value value to set the BATCH_SUBMITTED_DATE
     */
    public void setBatchSubmittedDate(Date value) {
        setAttributeInternal(BATCHSUBMITTEDDATE, value);
    }

    /**
     * Gets the attribute value for BILL_TO_CUST_ACCOUNT_ID using the alias name BillToCustAccountId.
     * @return the BILL_TO_CUST_ACCOUNT_ID
     */
    public Integer getBillToCustAccountId() {
        return (Integer) getAttributeInternal(BILLTOCUSTACCOUNTID);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_TO_CUST_ACCOUNT_ID using the alias name BillToCustAccountId.
     * @param value value to set the BILL_TO_CUST_ACCOUNT_ID
     */
    public void setBillToCustAccountId(Integer value) {
        try {
            RowSet billToAddress = getCustAccountBillSuRS();
            billToAddress.setNamedWhereClauseParam("pCustAccountId", value);
            billToAddress.executeQuery();
            if (billToAddress.getRowCount() == 1) {
                Row billAddrow = billToAddress.first();
                //         row.setAttribute("BillToSiteUseId", billAddrow.getAttribute("SuId"));
                //         row.setAttribute("tranBillToSuAddress", billAddrow.getAttribute("Address"));
                setBillToSiteUseId(Integer.parseInt(billAddrow.getAttribute("SuId").toString()));
                settranBillToSuAddress(billAddrow.getAttribute("Address").toString());

            }
            setAttributeInternal(BILLTOCUSTACCOUNTID, value);
        } catch (NumberFormatException nfe) {
            nfe.printStackTrace();
            addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             " Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR); 
        }
    }

    /**
     * Gets the attribute value for BILL_TO_ORG_CONTACT_ID using the alias name BillToOrgContactId.
     * @return the BILL_TO_ORG_CONTACT_ID
     */
    public BigDecimal getBillToOrgContactId() {
        return (BigDecimal) getAttributeInternal(BILLTOORGCONTACTID);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_TO_ORG_CONTACT_ID using the alias name BillToOrgContactId.
     * @param value value to set the BILL_TO_ORG_CONTACT_ID
     */
    public void setBillToOrgContactId(BigDecimal value) {
        setAttributeInternal(BILLTOORGCONTACTID, value);
    }

    /**
     * Gets the attribute value for BILL_TO_SITE_USE_ID using the alias name BillToSiteUseId.
     * @return the BILL_TO_SITE_USE_ID
     */
    public Integer getBillToSiteUseId() {
        return (Integer) getAttributeInternal(BILLTOSITEUSEID);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_TO_SITE_USE_ID using the alias name BillToSiteUseId.
     * @param value value to set the BILL_TO_SITE_USE_ID
     */
    public void setBillToSiteUseId(Integer value) {
        setAttributeInternal(BILLTOSITEUSEID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for DELIVER_TO_CUST_ACCOUNT_ID using the alias name DeliverToCustAccountId.
     * @return the DELIVER_TO_CUST_ACCOUNT_ID
     */
    public Integer getDeliverToCustAccountId() {
        return (Integer) getAttributeInternal(DELIVERTOCUSTACCOUNTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DELIVER_TO_CUST_ACCOUNT_ID using the alias name DeliverToCustAccountId.
     * @param value value to set the DELIVER_TO_CUST_ACCOUNT_ID
     */
    public void setDeliverToCustAccountId(Integer value) {
        try {
            RowSet deliverToAddress = getCustAccountDeliverToSuRS();
            deliverToAddress.setNamedWhereClauseParam("pCustAccountId", value);
            deliverToAddress.executeQuery();
            if (deliverToAddress.getRowCount() == 1) {
                Row deliverAddrow = deliverToAddress.first();
                setDeliverToSiteUseId(Integer.parseInt(deliverAddrow.getAttribute("SuId").toString()));
                settranDeliverToSuAddress(deliverAddrow.getAttribute("Address").toString());

            }
            RowSet billToRS = getCustAccountBilltoRS();
            billToRS.setNamedWhereClauseParam("pOrderingCustomerId", value);
            billToRS.executeQuery();
            //        System.out.println(billToRS.getRowCount()+"--------11");
            if (billToRS.getRowCount() == 1) {
                //             System.out.println(billToRS.getRowCount()+"--------22");
                Row row1 = billToRS.first();
                //         System.out.println(row1.getAttribute("CustAccountId")+"---"+row1.getAttribute("PartyName"));
                setBillToCustAccountId(Integer.parseInt(row1.getAttribute("CustAccountId").toString()));
                settranCustAccountBillToName(row1.getAttribute("PartyName").toString());
                //             System.out.println(billToRS.getRowCount()+"--------33");
            }
            else
            {
                    setBillToCustAccountId(null);
                    settranCustAccountBillToName(null);   
                
                }

            RowSet shipToRS = getCustAccountShipToRS();
            shipToRS.setNamedWhereClauseParam("pOrderingCustomerId", value);
            shipToRS.executeQuery();
            if (shipToRS.getRowCount() == 1) {
                Row row2 = shipToRS.first();
                setShipToCustAccountId(Integer.parseInt(row2.getAttribute("CustAccountId").toString()));
                settranCustAccountShipToName(row2.getAttribute("PartyName").toString());
            }
            else
            {
                    setShipToCustAccountId(null);
                    settranCustAccountShipToName(null);     
                
                }

            RowSet orderingAgentRS = getOrderingAgentEmailIdRS();
            orderingAgentRS.setNamedWhereClauseParam("pCustomerId", value);
            orderingAgentRS.executeQuery();
            if (orderingAgentRS.getRowCount() == 1) {
                Row emailRo = orderingAgentRS.first();
                settranEmailOrdering(emailRo.getAttribute("EmailAddress").toString());

            }

            setAttributeInternal(DELIVERTOCUSTACCOUNTID, value);
        } catch (NumberFormatException nfe) {
            nfe.printStackTrace();
            addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             " Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR); 
        }
    }

    /**
     * Gets the attribute value for DELIVER_TO_SITE_USE_ID using the alias name DeliverToSiteUseId.
     * @return the DELIVER_TO_SITE_USE_ID
     */
    public Integer getDeliverToSiteUseId() {
        return (Integer) getAttributeInternal(DELIVERTOSITEUSEID);
    }

    /**
     * Sets <code>value</code> as attribute value for DELIVER_TO_SITE_USE_ID using the alias name DeliverToSiteUseId.
     * @param value value to set the DELIVER_TO_SITE_USE_ID
     */
    public void setDeliverToSiteUseId(Integer value) {
        setAttributeInternal(DELIVERTOSITEUSEID, value);
    }

    /**
     * Gets the attribute value for ESI_BATCH_ID using the alias name EsiBatchId.
     * @return the ESI_BATCH_ID
     */
    public Number getEsiBatchId() {
        return (Number) getAttributeInternal(ESIBATCHID);
    }

    /**
     * Sets <code>value</code> as attribute value for ESI_BATCH_ID using the alias name EsiBatchId.
     * @param value value to set the ESI_BATCH_ID
     */
    public void setEsiBatchId(Number value) {
        setAttributeInternal(ESIBATCHID, value);
    }

    /**
     * Gets the attribute value for EXPEDITED_PROCESSING using the alias name ExpeditedProcessing.
     * @return the EXPEDITED_PROCESSING
     */
    public String getExpeditedProcessing() {
        return (String) getAttributeInternal(EXPEDITEDPROCESSING);
    }

    /**
     * Sets <code>value</code> as attribute value for EXPEDITED_PROCESSING using the alias name ExpeditedProcessing.
     * @param value value to set the EXPEDITED_PROCESSING
     */
    public void setExpeditedProcessing(String value) {
        setAttributeInternal(EXPEDITEDPROCESSING, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public BigDecimal getLastUpdateLogin() {
        return (BigDecimal) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(BigDecimal value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public BigDecimal getLastUpdatedBy() {
        return (BigDecimal) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(BigDecimal value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for NOTES using the alias name Notes.
     * @return the NOTES
     */
    public String getNotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTES using the alias name Notes.
     * @param value value to set the NOTES
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * Gets the attribute value for OE_HEADER_ID using the alias name OeHeaderId.
     * @return the OE_HEADER_ID
     */
    public Integer getOeHeaderId() {
        return (Integer) getAttributeInternal(OEHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for OE_HEADER_ID using the alias name OeHeaderId.
     * @param value value to set the OE_HEADER_ID
     */
    public void setOeHeaderId(Integer value) {
        setAttributeInternal(OEHEADERID, value);
    }

    /**
     * Gets the attribute value for PURCHASE_ORDER_NUMBER using the alias name PurchaseOrderNumber.
     * @return the PURCHASE_ORDER_NUMBER
     */
    public String getPurchaseOrderNumber() {
        return (String) getAttributeInternal(PURCHASEORDERNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for PURCHASE_ORDER_NUMBER using the alias name PurchaseOrderNumber.
     * @param value value to set the PURCHASE_ORDER_NUMBER
     */
    public void setPurchaseOrderNumber(String value) {
        setAttributeInternal(PURCHASEORDERNUMBER, value);
    }

    /**
     * Gets the attribute value for SHIP_TO_CUST_ACCOUNT_ID using the alias name ShipToCustAccountId.
     * @return the SHIP_TO_CUST_ACCOUNT_ID
     */
    public Integer getShipToCustAccountId() {
        return (Integer) getAttributeInternal(SHIPTOCUSTACCOUNTID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_TO_CUST_ACCOUNT_ID using the alias name ShipToCustAccountId.
     * @param value value to set the SHIP_TO_CUST_ACCOUNT_ID
     */
    public void setShipToCustAccountId(Integer value) {
        try {
            RowSet shipToAddress = getCustAccountShipToSuRS();
            shipToAddress.setNamedWhereClauseParam("pCustAccountId", value);
            shipToAddress.executeQuery();
            if (shipToAddress.getRowCount() == 1) {
                Row shipAddrow = shipToAddress.first();
                //         row.setAttribute("BillToSiteUseId", billAddrow.getAttribute("SuId"));
                //         row.setAttribute("tranBillToSuAddress", billAddrow.getAttribute("Address"));
                setShipToSiteUseId(Integer.parseInt(shipAddrow.getAttribute("SuId").toString()));
                settranShipToSuAddress(shipAddrow.getAttribute("Address").toString());

            }

            setAttributeInternal(SHIPTOCUSTACCOUNTID, value);
        } catch (NumberFormatException nfe) {
            nfe.printStackTrace();
            addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             " Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR); 
        }
    }

    /**
     * Gets the attribute value for SHIP_TO_ORG_CONTACT_ID using the alias name ShipToOrgContactId.
     * @return the SHIP_TO_ORG_CONTACT_ID
     */
    public BigDecimal getShipToOrgContactId() {
        return (BigDecimal) getAttributeInternal(SHIPTOORGCONTACTID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_TO_ORG_CONTACT_ID using the alias name ShipToOrgContactId.
     * @param value value to set the SHIP_TO_ORG_CONTACT_ID
     */
    public void setShipToOrgContactId(BigDecimal value) {
        setAttributeInternal(SHIPTOORGCONTACTID, value);
    }

    /**
     * Gets the attribute value for SHIP_TO_SITE_USE_ID using the alias name ShipToSiteUseId.
     * @return the SHIP_TO_SITE_USE_ID
     */
    public Integer getShipToSiteUseId() {
        return (Integer) getAttributeInternal(SHIPTOSITEUSEID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_TO_SITE_USE_ID using the alias name ShipToSiteUseId.
     * @param value value to set the SHIP_TO_SITE_USE_ID
     */
    public void setShipToSiteUseId(Integer value) {
        setAttributeInternal(SHIPTOSITEUSEID, value);
    }

    /**
     * Gets the attribute value for VESSEL_NAMES using the alias name VesselNames.
     * @return the VESSEL_NAMES
     */
    public String getVesselNames() {
        return (String) getAttributeInternal(VESSELNAMES);
    }

    /**
     * Sets <code>value</code> as attribute value for VESSEL_NAMES using the alias name VesselNames.
     * @param value value to set the VESSEL_NAMES
     */
    public void setVesselNames(String value) {
        setAttributeInternal(VESSELNAMES, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCustAccountBillToName.
     * @return the tranCustAccountBillToName
     */
    public String gettranCustAccountBillToName() {
        try {
            Integer custAccountId = null;
            String custAccountName = null;
            if (getBillToCustAccountId() != null) {
                custAccountId = getBillToCustAccountId();
                //                Row [] suRows;
                //                suRows = getCustAccountBilltoLOV1().getFilteredRows("CustAccountId", custAccountId);
                //                if(suRows.length > 0)
                //                {
                //                   custAccountName = suRows[0].getAttribute("PartyName").toString();
                //
                //                    }
                RowSet accNameByIdLOV1 = getCustAccNameByIdLOV1();
                accNameByIdLOV1.setNamedWhereClauseParam("pCustAccountId", custAccountId);
                accNameByIdLOV1.executeQuery();
                if (accNameByIdLOV1.getRowCount() > 0) {
                    Row frow = accNameByIdLOV1.first();
                    custAccountName = frow.getAttribute("PartyNameAccount").toString();
                }
                return custAccountName;
            } else {
                return (String) getAttributeInternal(TRANCUSTACCOUNTBILLTONAME);
            }
        } catch (Exception e) {
                 e.printStackTrace();
            addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             " Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR);        }
        return (String) getAttributeInternal(TRANCUSTACCOUNTBILLTONAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCustAccountBillToName.
     * @param value value to set the  tranCustAccountBillToName
     */
    public void settranCustAccountBillToName(String value) {
        setAttributeInternal(TRANCUSTACCOUNTBILLTONAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranBillToSuAddress.
     * @return the tranBillToSuAddress
     */
    public String gettranBillToSuAddress() {
        try {
            Integer suId = null;
            String address = null;
            if (getBillToSiteUseId() != null) {
                suId = getBillToSiteUseId();
                Row[] suRows;
                suRows = getCustAccountBillToSuLOV1().getFilteredRows("SuId", suId);
                if (suRows.length > 0) {
                    address = suRows[0].getAttribute("Address").toString();

                }
                return address;

            } else {
                return (String) getAttributeInternal(TRANBILLTOSUADDRESS);
            }
        } catch (Exception e) {
            e.printStackTrace();
            addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             " Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANBILLTOSUADDRESS);
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranBillToSuAddress.
     * @param value value to set the  tranBillToSuAddress
     */
    public void settranBillToSuAddress(String value) {
        setAttributeInternal(TRANBILLTOSUADDRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCustAccountShipToName.
     * @return the tranCustAccountShipToName
     */
    public String gettranCustAccountShipToName() {
        try {
            Integer custAccountId = null;
            String custAccountName = null;
            if (getShipToCustAccountId() != null) {
                custAccountId = getShipToCustAccountId();
                //                Row [] suRows;
                //                suRows = getCustAccountShipToLOV1().getFilteredRows("CustAccountId", custAccountId);
                //                if(suRows.length > 0)
                //                {
                //                   custAccountName = suRows[0].getAttribute("PartyName").toString();
                //
                //                    }
                RowSet accNameByIdLOV1 = getCustAccNameByIdLOV1();
                accNameByIdLOV1.setNamedWhereClauseParam("pCustAccountId", custAccountId);
                accNameByIdLOV1.executeQuery();
                if (accNameByIdLOV1.getRowCount() > 0) {
                    Row frow = accNameByIdLOV1.first();
                    custAccountName = frow.getAttribute("PartyNameAccount").toString();
                }
                return custAccountName;
            } else {
                return (String) getAttributeInternal(TRANCUSTACCOUNTSHIPTONAME);
            }
        } catch (Exception e) {
            e.printStackTrace();
            addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             " Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANCUSTACCOUNTSHIPTONAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCustAccountShipToName.
     * @param value value to set the  tranCustAccountShipToName
     */
    public void settranCustAccountShipToName(String value) {
        setAttributeInternal(TRANCUSTACCOUNTSHIPTONAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranShipToSuAddress.
     * @return the tranShipToSuAddress
     */
    public String gettranShipToSuAddress() {
        try {
            Integer suId = null;
            String address = null;
            if (getShipToSiteUseId() != null) {
                suId = getShipToSiteUseId();
                Row[] suRows;
                suRows = getCustAccountShipToSuLOV1().getFilteredRows("SuId", suId);
                if (suRows.length > 0) {
                    address = suRows[0].getAttribute("Address").toString();

                }
                return address;

            } else {
                return (String) getAttributeInternal(TRANSHIPTOSUADDRESS);
            }
        } catch (Exception e) {
            e.printStackTrace();
            addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             " Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANSHIPTOSUADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranShipToSuAddress.
     * @param value value to set the  tranShipToSuAddress
     */
    public void settranShipToSuAddress(String value) {
        setAttributeInternal(TRANSHIPTOSUADDRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCustAccountDeliverToName.
     * @return the tranCustAccountDeliverToName
     */
    public String gettranCustAccountDeliverToName() {
        try {
            Integer custAccountId = null;
            String custAccountName = null;
            if (getDeliverToCustAccountId() != null) {
                custAccountId = getDeliverToCustAccountId();
                //               Row [] suRows;
                //               suRows = getCustAccountDeliverToLOV1().getFilteredRows("CustAccountId", custAccountId);
                //               if(suRows.length > 0)
                //               {
                //                  custAccountName = suRows[0].getAttribute("PartyName").toString();
                //
                //                   }
                RowSet accNameByIdLOV1 = getCustAccNameByIdLOV1();
                accNameByIdLOV1.setNamedWhereClauseParam("pCustAccountId", custAccountId);
                accNameByIdLOV1.executeQuery();
                if (accNameByIdLOV1.getRowCount() > 0) {
                    Row frow = accNameByIdLOV1.first();
                    custAccountName = frow.getAttribute("PartyNameAccount").toString();
                }
                return custAccountName;
            } else {
                return (String) getAttributeInternal(TRANCUSTACCOUNTDELIVERTONAME);
            }
        } catch (Exception e) {
            e.printStackTrace();
            addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             " Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANCUSTACCOUNTDELIVERTONAME);  
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCustAccountDeliverToName.
     * @param value value to set the  tranCustAccountDeliverToName
     */
    public void settranCustAccountDeliverToName(String value) {
        setAttributeInternal(TRANCUSTACCOUNTDELIVERTONAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranDeliverToSuAddress.
     * @return the tranDeliverToSuAddress
     */
    public String gettranDeliverToSuAddress() {
        try {
            Integer suId = null;
            String address = null;
            if (getDeliverToSiteUseId() != null) {
                suId = getDeliverToSiteUseId();
                Row[] suRows;
                suRows = getCustAccountDeliverToSuLOV1().getFilteredRows("SuId", suId);
                if (suRows.length > 0) {
                    address = suRows[0].getAttribute("Address").toString();

                }
                return address;

            } else {
                return (String) getAttributeInternal(TRANDELIVERTOSUADDRESS);
            }
        } catch (Exception e) {
            e.printStackTrace();
            addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             " Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANDELIVERTOSUADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranDeliverToSuAddress.
     * @param value value to set the  tranDeliverToSuAddress
     */
    public void settranDeliverToSuAddress(String value) {
        setAttributeInternal(TRANDELIVERTOSUADDRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranEmailOrdering.
     * @return the tranEmailOrdering
     */
    public String gettranEmailOrdering() {
    String email_id = null;
//    System.out.println(getEsiBatchId()+"------1");
        try {
            RowSet emRs = getGetOrderingAgentEmailIdRO1();
            emRs.setNamedWhereClauseParam("pBatchId", getEsiBatchId());
            emRs.executeQuery();
            if (emRs.getRowCount() > 0) {
                Row row = emRs.first();
                if (row.getAttribute("OrderingAgentEmailId") != null) {
//                    System.out.println(row.getAttribute("OrderingAgentEmailId") + "----2");
                    email_id = row.getAttribute("OrderingAgentEmailId").toString();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
           addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
            " Please contact your System Administrator." , 
            "", FacesMessage.SEVERITY_ERROR);
        }
        return email_id;
    
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranEmailOrdering.
     * @param value value to set the  tranEmailOrdering
     */
    public void settranEmailOrdering(String value) {
        setAttributeInternal(TRANEMAILORDERING, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranUserType.
     * @return the tranUserType
     */
    public String gettranUserType() {
        return (String) getAttributeInternal(TRANUSERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranUserType.
     * @param value value to set the  tranUserType
     */
    public void settranUserType(String value) {
        setAttributeInternal(TRANUSERTYPE, value);
    }

    /**
     * Gets the attribute value for BATCH_ASSIGNED_TO_REGION using the alias name BatchAssignedToRegion.
     * @return the BATCH_ASSIGNED_TO_REGION
     */
    public Integer getBatchAssignedToRegion() {
        return (Integer) getAttributeInternal(BATCHASSIGNEDTOREGION);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_ASSIGNED_TO_REGION using the alias name BatchAssignedToRegion.
     * @param value value to set the BATCH_ASSIGNED_TO_REGION
     */
    public void setBatchAssignedToRegion(Integer value) {
        setAttributeInternal(BATCHASSIGNEDTOREGION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute checkBatchRow.
     * @return the checkBatchRow
     */
    public Integer getcheckBatchRow() {
        byte entityState = this.getEntity(0).getEntityState();
                return new Integer(entityState);    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute checkBatchRow.
     * @param value value to set the  checkBatchRow
     */
    public void setcheckBatchRow(Integer value) {
        setAttributeInternal(CHECKBATCHROW, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranInvoiceEmailId.
     * @return the tranInvoiceEmailId
     */
    public String gettranInvoiceEmailId() {
        return (String) getAttributeInternal(TRANINVOICEEMAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranInvoiceEmailId.
     * @param value value to set the  tranInvoiceEmailId
     */
    public void settranInvoiceEmailId(String value) {
        setAttributeInternal(TRANINVOICEEMAILID, value);
    }

    /**
     * Gets the attribute value for INVOICE_AGENT_EMAIL_ID using the alias name InvoiceAgentEmailId.
     * @return the INVOICE_AGENT_EMAIL_ID
     */
    public String getInvoiceAgentEmailId() {
        return (String) getAttributeInternal(INVOICEAGENTEMAILID);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOICE_AGENT_EMAIL_ID using the alias name InvoiceAgentEmailId.
     * @param value value to set the INVOICE_AGENT_EMAIL_ID
     */
    public void setInvoiceAgentEmailId(String value) {
        setAttributeInternal(INVOICEAGENTEMAILID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranInvoiceAgentEmailId.
     * @return the tranInvoiceAgentEmailId
     */
    public String gettranInvoiceAgentEmailId() {
        if(getInvoiceAgentEmailId() != null)
        {
        return getInvoiceAgentEmailId();
        }
        return (String) getAttributeInternal(TRANINVOICEAGENTEMAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranInvoiceAgentEmailId.
     * @param value value to set the  tranInvoiceAgentEmailId
     */
    public void settranInvoiceAgentEmailId(String value) {
        setAttributeInternal(TRANINVOICEAGENTEMAILID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SeafarerVO.
     */
    public RowIterator getSeafarerVO() {
        return (RowIterator) getAttributeInternal(SEAFARERVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link WorkOrderDetailsRO.
     */
    public RowIterator getWorkOrderDetailsRO() {
        return (RowIterator) getAttributeInternal(WORKORDERDETAILSRO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountBilltoLOV1.
     */
    public RowSet getCustAccountBilltoLOV1() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTBILLTOLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountBillToSuLOV1.
     */
    public RowSet getCustAccountBillToSuLOV1() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTBILLTOSULOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountShipToLOV1.
     */
    public RowSet getCustAccountShipToLOV1() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTSHIPTOLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountShipToSuLOV1.
     */
    public RowSet getCustAccountShipToSuLOV1() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTSHIPTOSULOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountDeliverToLOV1.
     */
    public RowSet getCustAccountDeliverToLOV1() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTDELIVERTOLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountDeliverToSuLOV1.
     */
    public RowSet getCustAccountDeliverToSuLOV1() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTDELIVERTOSULOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GetOrderingAgentEmailIdRO1.
     */
    public RowSet getGetOrderingAgentEmailIdRO1() {
        return (RowSet) getAttributeInternal(GETORDERINGAGENTEMAILIDRO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountBillToAllLOV1.
     */
    public RowSet getCustAccountBillToAllLOV1() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTBILLTOALLLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> getCustomerNameByCustAccIdRO1.
     */
    public RowSet getgetCustomerNameByCustAccIdRO1() {
        return (RowSet) getAttributeInternal(GETCUSTOMERNAMEBYCUSTACCIDRO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccNameByIdLOV1.
     */
    public RowSet getCustAccNameByIdLOV1() {
        return (RowSet) getAttributeInternal(CUSTACCNAMEBYIDLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountBillSuRS.
     */
    public RowSet getCustAccountBillSuRS() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTBILLSURS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountDeliverToSuRS.
     */
    public RowSet getCustAccountDeliverToSuRS() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTDELIVERTOSURS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountShipToSuRS.
     */
    public RowSet getCustAccountShipToSuRS() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTSHIPTOSURS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountBilltoRS.
     */
    public RowSet getCustAccountBilltoRS() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTBILLTORS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountShipToRS.
     */
    public RowSet getCustAccountShipToRS() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTSHIPTORS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OrderingAgentEmailIdLOV1.
     */
    public RowSet getOrderingAgentEmailIdLOV1() {
        return (RowSet) getAttributeInternal(ORDERINGAGENTEMAILIDLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OrderingAgentEmailIdRS.
     */
    public RowSet getOrderingAgentEmailIdRS() {
        return (RowSet) getAttributeInternal(ORDERINGAGENTEMAILIDRS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InvoiceAgentEmailIdView1.
     */
    public RowSet getInvoiceAgentEmailIdView1() {
        return (RowSet) getAttributeInternal(INVOICEAGENTEMAILIDVIEW1);
    }

    /**
     * Method to show simple facesMessage with header,detail, in html format.
     * @param header  Header of the FacesMesssage.
     * @param detail  Detail of the FacesMesssage.
     * @param severity  Severity of FacesMessage.
     */
    public static void addFormattedFacesErrorMessage(String header, String detail,
                                                     javax.faces.application.FacesMessage.Severity severity) {
        StringBuilder saveMsg = new StringBuilder("<html><body><b><span style='color:");

        if (severity != null) {
            if (severity.toString().equalsIgnoreCase("INFO 0"))
                saveMsg.append("#000000'>");
            else if (severity.toString().equalsIgnoreCase("WARN 1"))
                saveMsg.append("#000000'>");
            else if (severity.toString().equalsIgnoreCase("ERROR 2"))
                saveMsg.append("#000000'>");
            else
                saveMsg.append("#000000'>");
        } else
            saveMsg.append("#000000'>");

        saveMsg.append(header);
        saveMsg.append("</span></b>");
        saveMsg.append("</br><b>");
        //        saveMsg.append(detail);
        saveMsg.append("</b></body></html>");
        FacesMessage msg = new FacesMessage(saveMsg.toString());
        msg.setSeverity(severity);
        FacesContext.getCurrentInstance().addMessage(null, msg);
    }

}

