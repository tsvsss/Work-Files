package com.rmi.tradecompapproval.adfbc.entities;

import com.rmi.tradecompapproval.adfbc.extensions.CustomEntity;

import com.rmi.tradecompapproval.adfbc.services.RMITradeCompApprovalAppModuleImpl;
import com.rmi.tradecompapproval.adfbc.utils.AdfUtils;

import java.math.BigDecimal;

import java.math.BigInteger;

import java.sql.CallableStatement;
import java.sql.Timestamp;

import java.sql.Types;

import javax.faces.application.FacesMessage;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

import org.apache.myfaces.trinidad.context.RequestContext;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 28 11:18:51 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SicdSeafarerImpl extends CustomEntity {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SeafarerId,
        LastName,
        FirstName,
        MiddleInitial,
        BirthDate,
        BirthPlace,
        Nationality,
        Status,
        HeightFt,
        HeightIn,
        WeightLb,
        HairColor,
        EyeColor,
        Gender,
        DistinguishingMarks,
        Notes,
        CreatedBy,
        CreationDate,
        LastUpdatedBy,
        LastUpdateDate,
        LastUpdateLogin,
        AttributeCategory,
        Attribute1,
        Attribute2,
        Attribute3,
        Attribute4,
        Attribute5,
        Attribute6,
        Attribute7,
        Attribute8,
        Attribute9,
        Attribute10,
        Attribute11,
        Attribute12,
        Attribute13,
        Attribute14,
        Attribute15,
        DataVerifiedDate,
        DataVerifiedBy;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return SicdSeafarerImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return SicdSeafarerImpl.AttributesEnum.firstIndex() + SicdSeafarerImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = SicdSeafarerImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SEAFARERID = AttributesEnum.SeafarerId.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int MIDDLEINITIAL = AttributesEnum.MiddleInitial.index();
    public static final int BIRTHDATE = AttributesEnum.BirthDate.index();
    public static final int BIRTHPLACE = AttributesEnum.BirthPlace.index();
    public static final int NATIONALITY = AttributesEnum.Nationality.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int HEIGHTFT = AttributesEnum.HeightFt.index();
    public static final int HEIGHTIN = AttributesEnum.HeightIn.index();
    public static final int WEIGHTLB = AttributesEnum.WeightLb.index();
    public static final int HAIRCOLOR = AttributesEnum.HairColor.index();
    public static final int EYECOLOR = AttributesEnum.EyeColor.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int DISTINGUISHINGMARKS = AttributesEnum.DistinguishingMarks.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int ATTRIBUTECATEGORY = AttributesEnum.AttributeCategory.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();
    public static final int DATAVERIFIEDDATE = AttributesEnum.DataVerifiedDate.index();
    public static final int DATAVERIFIEDBY = AttributesEnum.DataVerifiedBy.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SicdSeafarerImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.rmi.tradecompapproval.adfbc.entities.SicdSeafarer");
    }


    /**
     * Gets the attribute value for SeafarerId, using the alias name SeafarerId.
     * @return the value of SeafarerId
     */
    public Integer getSeafarerId() {
        return (Integer) getAttributeInternal(SEAFARERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SeafarerId.
     * @param value value to set the SeafarerId
     */
    public void setSeafarerId(Integer value) {
        setAttributeInternal(SEAFARERID, value);
    }

    /**
     * Gets the attribute value for LastName, using the alias name LastName.
     * @return the value of LastName
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastName.
     * @param value value to set the LastName
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for FirstName, using the alias name FirstName.
     * @return the value of FirstName
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FirstName.
     * @param value value to set the FirstName
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for MiddleInitial, using the alias name MiddleInitial.
     * @return the value of MiddleInitial
     */
    public String getMiddleInitial() {
        return (String) getAttributeInternal(MIDDLEINITIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for MiddleInitial.
     * @param value value to set the MiddleInitial
     */
    public void setMiddleInitial(String value) {
        setAttributeInternal(MIDDLEINITIAL, value);
    }

    /**
     * Gets the attribute value for BirthDate, using the alias name BirthDate.
     * @return the value of BirthDate
     */
    public Timestamp getBirthDate() {
        return (Timestamp) getAttributeInternal(BIRTHDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BirthDate.
     * @param value value to set the BirthDate
     */
    public void setBirthDate(Timestamp value) {
        setAttributeInternal(BIRTHDATE, value);
    }

    /**
     * Gets the attribute value for BirthPlace, using the alias name BirthPlace.
     * @return the value of BirthPlace
     */
    public String getBirthPlace() {
        return (String) getAttributeInternal(BIRTHPLACE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BirthPlace.
     * @param value value to set the BirthPlace
     */
    public void setBirthPlace(String value) {
        setAttributeInternal(BIRTHPLACE, value);
    }

    /**
     * Gets the attribute value for Nationality, using the alias name Nationality.
     * @return the value of Nationality
     */
    public String getNationality() {
        return (String) getAttributeInternal(NATIONALITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Nationality.
     * @param value value to set the Nationality
     */
    public void setNationality(String value) {
        setAttributeInternal(NATIONALITY, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for HeightFt, using the alias name HeightFt.
     * @return the value of HeightFt
     */
    public Integer getHeightFt() {
        return (Integer) getAttributeInternal(HEIGHTFT);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeightFt.
     * @param value value to set the HeightFt
     */
    public void setHeightFt(Integer value) {
        setAttributeInternal(HEIGHTFT, value);
    }

    /**
     * Gets the attribute value for HeightIn, using the alias name HeightIn.
     * @return the value of HeightIn
     */
    public Integer getHeightIn() {
        return (Integer) getAttributeInternal(HEIGHTIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeightIn.
     * @param value value to set the HeightIn
     */
    public void setHeightIn(Integer value) {
        setAttributeInternal(HEIGHTIN, value);
    }

    /**
     * Gets the attribute value for WeightLb, using the alias name WeightLb.
     * @return the value of WeightLb
     */
    public Integer getWeightLb() {
        return (Integer) getAttributeInternal(WEIGHTLB);
    }

    /**
     * Sets <code>value</code> as the attribute value for WeightLb.
     * @param value value to set the WeightLb
     */
    public void setWeightLb(Integer value) {
        setAttributeInternal(WEIGHTLB, value);
    }

    /**
     * Gets the attribute value for HairColor, using the alias name HairColor.
     * @return the value of HairColor
     */
    public String getHairColor() {
        return (String) getAttributeInternal(HAIRCOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for HairColor.
     * @param value value to set the HairColor
     */
    public void setHairColor(String value) {
        setAttributeInternal(HAIRCOLOR, value);
    }

    /**
     * Gets the attribute value for EyeColor, using the alias name EyeColor.
     * @return the value of EyeColor
     */
    public String getEyeColor() {
        return (String) getAttributeInternal(EYECOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for EyeColor.
     * @param value value to set the EyeColor
     */
    public void setEyeColor(String value) {
        setAttributeInternal(EYECOLOR, value);
    }

    /**
     * Gets the attribute value for Gender, using the alias name Gender.
     * @return the value of Gender
     */
    public String getGender() {
        return (String) getAttributeInternal(GENDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Gender.
     * @param value value to set the Gender
     */
    public void setGender(String value) {
        setAttributeInternal(GENDER, value);
    }

    /**
     * Gets the attribute value for DistinguishingMarks, using the alias name DistinguishingMarks.
     * @return the value of DistinguishingMarks
     */
    public String getDistinguishingMarks() {
        return (String) getAttributeInternal(DISTINGUISHINGMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DistinguishingMarks.
     * @param value value to set the DistinguishingMarks
     */
    public void setDistinguishingMarks(String value) {
        setAttributeInternal(DISTINGUISHINGMARKS, value);
    }

    /**
     * Gets the attribute value for Notes, using the alias name Notes.
     * @return the value of Notes
     */
    public String getNotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Notes.
     * @param value value to set the Notes
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Integer getLastUpdatedBy() {
        return (Integer) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Integer value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the value of LastUpdateLogin
     */
    public Integer getLastUpdateLogin() {
        return (Integer) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(Integer value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for AttributeCategory, using the alias name AttributeCategory.
     * @return the value of AttributeCategory
     */
    public String getAttributeCategory() {
        return (String) getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeCategory.
     * @param value value to set the AttributeCategory
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the value of Attribute1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the value of Attribute2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the value of Attribute3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the value of Attribute4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the value of Attribute5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the value of Attribute6
     */
    public String getAttribute6() {
        return (String) getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the value of Attribute7
     */
    public String getAttribute7() {
        return (String) getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the value of Attribute8
     */
    public String getAttribute8() {
        return (String) getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the value of Attribute9
     */
    public String getAttribute9() {
        return (String) getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the value of Attribute10
     */
    public String getAttribute10() {
        return (String) getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the value of Attribute11
     */
    public String getAttribute11() {
        return (String) getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the value of Attribute12
     */
    public String getAttribute12() {
        return (String) getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the value of Attribute13
     */
    public String getAttribute13() {
        return (String) getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the value of Attribute14
     */
    public String getAttribute14() {
        return (String) getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the value of Attribute15
     */
    public String getAttribute15() {
        return (String) getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * Gets the attribute value for DataVerifiedDate, using the alias name DataVerifiedDate.
     * @return the value of DataVerifiedDate
     */
    public Timestamp getDataVerifiedDate() {
        return (Timestamp) getAttributeInternal(DATAVERIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DataVerifiedDate.
     * @param value value to set the DataVerifiedDate
     */
    public void setDataVerifiedDate(Timestamp value) {
        setAttributeInternal(DATAVERIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for DataVerifiedBy, using the alias name DataVerifiedBy.
     * @return the value of DataVerifiedBy
     */
    public BigDecimal getDataVerifiedBy() {
        return (BigDecimal) getAttributeInternal(DATAVERIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for DataVerifiedBy.
     * @param value value to set the DataVerifiedBy
     */
    public void setDataVerifiedBy(BigDecimal value) {
        setAttributeInternal(DATAVERIFIEDBY, value);
    }


    /**
     * @param seafarerId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer seafarerId) {
        return new Key(new Object[] { seafarerId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) 
    {
        setStatus("Active");
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
//        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) 
    {
//        System.out.println("seafarer id in EOMIPL 1 : "+getSeafarerId());
//        System.out.println("");
//            
//        if(operation == DML_INSERT)
//        {
//            System.out.println("seafarer id in EOMIPL 2 : "+getSeafarerId());
//            String batchId = getAm().createBatchVetting(this.getSeafarerId());
//        }
        
        super.doDML(operation, e);
    }
    
    public RMITradeCompApprovalAppModuleImpl getAm()
    {
        return (RMITradeCompApprovalAppModuleImpl) this.getDBTransaction().getRootApplicationModule();
    }
}

