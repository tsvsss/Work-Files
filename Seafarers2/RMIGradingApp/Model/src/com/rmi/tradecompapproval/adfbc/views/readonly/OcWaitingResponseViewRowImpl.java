package com.rmi.tradecompapproval.adfbc.views.readonly;

import com.rmi.tradecompapproval.adfbc.utils.AdfUtils;

import java.math.BigDecimal;
import java.math.BigInteger;

import java.sql.Timestamp;

import javax.faces.application.FacesMessage;

import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 06 17:38:50 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OcWaitingResponseViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SeafarerName,
        OrderNumber,
        GradeCode,
        CountryName,
        EndorsementNumber,
        EndorsementIssueDate,
        EndorsementExpirationDate,
        SeafarerId,
        HeaderId,
        GradeId,
        DocumentId,
        EndorsementCountry,
        VerifiedBy,
        VerifiedDate,
        Verified,
        VerificationEdocId,
        VerificationRequestDate,
        VerificationBy,
        CreatedBy,
        VerificationMethod,
        VerificationUrl,
        VerificationEmail,
        VerificationUsername,
        BirthDate,
        VerificationPassword,
        TransCertVerifyWaiting,
        TransCancelCertWaiting,
        CertVerificationStatusLOV1,
        CancelDocVerificationLOV1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return OcWaitingResponseViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return OcWaitingResponseViewRowImpl.AttributesEnum.firstIndex() +
                   OcWaitingResponseViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = OcWaitingResponseViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SEAFARERNAME = AttributesEnum.SeafarerName.index();
    public static final int ORDERNUMBER = AttributesEnum.OrderNumber.index();
    public static final int GRADECODE = AttributesEnum.GradeCode.index();
    public static final int COUNTRYNAME = AttributesEnum.CountryName.index();
    public static final int ENDORSEMENTNUMBER = AttributesEnum.EndorsementNumber.index();
    public static final int ENDORSEMENTISSUEDATE = AttributesEnum.EndorsementIssueDate.index();
    public static final int ENDORSEMENTEXPIRATIONDATE = AttributesEnum.EndorsementExpirationDate.index();
    public static final int SEAFARERID = AttributesEnum.SeafarerId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int GRADEID = AttributesEnum.GradeId.index();
    public static final int DOCUMENTID = AttributesEnum.DocumentId.index();
    public static final int ENDORSEMENTCOUNTRY = AttributesEnum.EndorsementCountry.index();
    public static final int VERIFIEDBY = AttributesEnum.VerifiedBy.index();
    public static final int VERIFIEDDATE = AttributesEnum.VerifiedDate.index();
    public static final int VERIFIED = AttributesEnum.Verified.index();
    public static final int VERIFICATIONEDOCID = AttributesEnum.VerificationEdocId.index();
    public static final int VERIFICATIONREQUESTDATE = AttributesEnum.VerificationRequestDate.index();
    public static final int VERIFICATIONBY = AttributesEnum.VerificationBy.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int VERIFICATIONMETHOD = AttributesEnum.VerificationMethod.index();
    public static final int VERIFICATIONURL = AttributesEnum.VerificationUrl.index();
    public static final int VERIFICATIONEMAIL = AttributesEnum.VerificationEmail.index();
    public static final int VERIFICATIONUSERNAME = AttributesEnum.VerificationUsername.index();
    public static final int BIRTHDATE = AttributesEnum.BirthDate.index();
    public static final int VERIFICATIONPASSWORD = AttributesEnum.VerificationPassword.index();
    public static final int TRANSCERTVERIFYWAITING = AttributesEnum.TransCertVerifyWaiting.index();
    public static final int TRANSCANCELCERTWAITING = AttributesEnum.TransCancelCertWaiting.index();
    public static final int CERTVERIFICATIONSTATUSLOV1 = AttributesEnum.CertVerificationStatusLOV1.index();
    public static final int CANCELDOCVERIFICATIONLOV1 = AttributesEnum.CancelDocVerificationLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OcWaitingResponseViewRowImpl() {
    }


    /**
     * Gets the attribute value for the calculated attribute SeafarerName.
     * @return the SeafarerName
     */
    public String getSeafarerName() {
        return (String) getAttributeInternal(SEAFARERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SeafarerName.
     * @param value value to set the  SeafarerName
     */
    public void setSeafarerName(String value) {
        setAttributeInternal(SEAFARERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrderNumber.
     * @return the OrderNumber
     */
    public BigDecimal getOrderNumber() {
        return (BigDecimal) getAttributeInternal(ORDERNUMBER);
    }

    /**
     * Gets the attribute value for the calculated attribute GradeCode.
     * @return the GradeCode
     */
    public String getGradeCode() {
        return (String) getAttributeInternal(GRADECODE);
    }

    /**
     * Gets the attribute value for the calculated attribute CountryName.
     * @return the CountryName
     */
    public String getCountryName() {
        return (String) getAttributeInternal(COUNTRYNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute EndorsementNumber.
     * @return the EndorsementNumber
     */
    public String getEndorsementNumber() {
        return (String) getAttributeInternal(ENDORSEMENTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EndorsementNumber.
     * @param value value to set the  EndorsementNumber
     */
    public void setEndorsementNumber(String value) {
        setAttributeInternal(ENDORSEMENTNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EndorsementIssueDate.
     * @return the EndorsementIssueDate
     */
    public Timestamp getEndorsementIssueDate() {
        return (Timestamp) getAttributeInternal(ENDORSEMENTISSUEDATE);
    }

    /**
     * Gets the attribute value for the calculated attribute EndorsementExpirationDate.
     * @return the EndorsementExpirationDate
     */
    public Timestamp getEndorsementExpirationDate() {
        return (Timestamp) getAttributeInternal(ENDORSEMENTEXPIRATIONDATE);
    }

    /**
     * Gets the attribute value for the calculated attribute SeafarerId.
     * @return the SeafarerId
     */
    public Integer getSeafarerId() {
        return (Integer) getAttributeInternal(SEAFARERID);
    }

    /**
     * Gets the attribute value for the calculated attribute HeaderId.
     * @return the HeaderId
     */
    public BigDecimal getHeaderId() {
        return (BigDecimal) getAttributeInternal(HEADERID);
    }

    /**
     * Gets the attribute value for the calculated attribute GradeId.
     * @return the GradeId
     */
    public Integer getGradeId() {
        return (Integer) getAttributeInternal(GRADEID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocumentId.
     * @return the DocumentId
     */
    public BigInteger getDocumentId() {
        return (BigInteger) getAttributeInternal(DOCUMENTID);
    }

    /**
     * Gets the attribute value for the calculated attribute EndorsementCountry.
     * @return the EndorsementCountry
     */
    public String getEndorsementCountry() {
        return (String) getAttributeInternal(ENDORSEMENTCOUNTRY);
    }

    /**
     * Gets the attribute value for the calculated attribute VerifiedBy.
     * @return the VerifiedBy
     */
    public BigDecimal getVerifiedBy() {
        return (BigDecimal) getAttributeInternal(VERIFIEDBY);
    }

    /**
     * Gets the attribute value for the calculated attribute VerifiedDate.
     * @return the VerifiedDate
     */
    public Timestamp getVerifiedDate() {
        return (Timestamp) getAttributeInternal(VERIFIEDDATE);
    }

    /**
     * Gets the attribute value for the calculated attribute Verified.
     * @return the Verified
     */
    public String getVerified() {
        return (String) getAttributeInternal(VERIFIED);
    }

    /**
     * Gets the attribute value for the calculated attribute VerificationEdocId.
     * @return the VerificationEdocId
     */
    public BigDecimal getVerificationEdocId() {
        return (BigDecimal) getAttributeInternal(VERIFICATIONEDOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute VerificationRequestDate.
     * @return the VerificationRequestDate
     */
    public Timestamp getVerificationRequestDate() {
        return (Timestamp) getAttributeInternal(VERIFICATIONREQUESTDATE);
    }

    /**
     * Gets the attribute value for the calculated attribute VerificationBy.
     * @return the VerificationBy
     */
    public BigDecimal getVerificationBy() {
        return (BigDecimal) getAttributeInternal(VERIFICATIONBY);
    }

    /**
     * Gets the attribute value for the calculated attribute CreatedBy.
     * @return the CreatedBy
     */
    public Long getCreatedBy() {
        return (Long) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for the calculated attribute VerificationMethod.
     * @return the VerificationMethod
     */
    public String getVerificationMethod() {
        return (String) getAttributeInternal(VERIFICATIONMETHOD);
    }

    /**
     * Gets the attribute value for the calculated attribute VerificationUrl.
     * @return the VerificationUrl
     */
    public String getVerificationUrl() {
        return (String) getAttributeInternal(VERIFICATIONURL);
    }

    /**
     * Gets the attribute value for the calculated attribute VerificationEmail.
     * @return the VerificationEmail
     */
    public String getVerificationEmail() {
        return (String) getAttributeInternal(VERIFICATIONEMAIL);
    }

    /**
     * Gets the attribute value for the calculated attribute VerificationUsername.
     * @return the VerificationUsername
     */
    public String getVerificationUsername() {
        return (String) getAttributeInternal(VERIFICATIONUSERNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute BirthDate.
     * @return the BirthDate
     */
    public Timestamp getBirthDate() {
        return (Timestamp) getAttributeInternal(BIRTHDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BirthDate.
     * @param value value to set the  BirthDate
     */
    public void setBirthDate(Timestamp value) {
        setAttributeInternal(BIRTHDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VerificationPassword.
     * @return the VerificationPassword
     */
    public String getVerificationPassword() {
        return (String) getAttributeInternal(VERIFICATIONPASSWORD);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCertVerifyWaiting.
     * @return the TransCertVerifyWaiting
     */
    public String getTransCertVerifyWaiting() 
    {
        try 
        {
            if (getAttributeInternal(TRANSCERTVERIFYWAITING) != null)
                return (String) getAttributeInternal(TRANSCERTVERIFYWAITING);
            else
                return "W";
        } catch (Exception e) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANSCERTVERIFYWAITING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCertVerifyWaiting.
     * @param value value to set the  TransCertVerifyWaiting
     */
    public void setTransCertVerifyWaiting(String value) {
        setAttributeInternal(TRANSCERTVERIFYWAITING, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCancelCertWaiting.
     * @return the TransCancelCertWaiting
     */
    public String getTransCancelCertWaiting() 
    {
        try 
        {
            if (getAttributeInternal(TRANSCANCELCERTWAITING) != null)
                return (String) getAttributeInternal(TRANSCANCELCERTWAITING);
            else
                return "C";
        } catch (Exception e) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANSCANCELCERTWAITING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCancelCertWaiting.
     * @param value value to set the  TransCancelCertWaiting
     */
    public void setTransCancelCertWaiting(String value) {
        setAttributeInternal(TRANSCANCELCERTWAITING, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CertVerificationStatusLOV1.
     */
    public RowSet getCertVerificationStatusLOV1() {
        return (RowSet) getAttributeInternal(CERTVERIFICATIONSTATUSLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CancelDocVerificationLOV1.
     */
    public RowSet getCancelDocVerificationLOV1() {
        return (RowSet) getAttributeInternal(CANCELDOCVERIFICATIONLOV1);
    }
}

