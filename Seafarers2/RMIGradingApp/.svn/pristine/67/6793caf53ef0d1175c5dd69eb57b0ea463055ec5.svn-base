package com.rmi.tradecompapproval.adfbc.views;

import com.rmi.tradecompapproval.adfbc.services.RMITradeCompApprovalAppModuleImpl;
import com.rmi.tradecompapproval.adfbc.entities.RmiSeafarerDocsImpl;

import com.rmi.tradecompapproval.adfbc.utils.AdfUtils;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Date;

import javax.faces.application.FacesMessage;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 27 13:21:19 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RmiSeafarerDocsSqcViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_VIEWSEAFARERDOCSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CocCountry,
        CocExpirationDate,
        CocIdentifier,
        CocIssueDate,
        CraApprovedBy,
        CraApprovedDate,
        CraRequired,
        CraSentBy,
        CraSentDate,
        CreatedBy,
        CreationDate,
        DocIdentifier,
        DocOrder,
        DocumentApprovedBy,
        DocumentApprovedDate,
        DocumentId,
        EdocId,
        EsdiId,
        EsiId,
        GradeId,
        GradeType,
        SqcGradingComments,
        GradingInstructions,
        GradingStatus3,
        InventoryItemId,
        IssueType1,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        Limitation,
        LineId,
        PreviousDocumentId,
        Restriction,
        SupportEdocId,
        VerificationBy,
        VerificationRequestDate,
        tranCountryNameSqc,
        tranGradeDescription,
        tranGradeCodeSqc,
        tranCOC,
        tranSupport,
        DataVerified1,
        TransPreviousSqc,
        TransSeafarerIdSqc,
        SqcDocGrdHoldReason,
        DataVerifiedComntSqc,
        AddedByRole,
        TransDisableDeleteSqcLine,
        TransSqcLimitation,
        TransCocSqcInputFile,
        ReplacementIssueTypeSqc,
        RestrictionNameSqc,
        SqcDocIssueTypeUpd,
        SqcDocIssueTypeUpdDt,
        SqcDocChargeable,
        countriesLOV1,
        viewGradeSqcLOV1,
        GetDocumentLinkRO1,
        viewSeafarerDocsSqcVO1,
        IssueTypeLOV1,
        YesNoLOV1,
        PreviousExsicdSqcLOV1,
        HoldReasonView1,
        RestrictionsView1,
        YesNoCancelView1,
        LovReplacementUomView1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return RmiSeafarerDocsSqcViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return RmiSeafarerDocsSqcViewRowImpl.AttributesEnum.firstIndex() +
                   RmiSeafarerDocsSqcViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = RmiSeafarerDocsSqcViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COCCOUNTRY = AttributesEnum.CocCountry.index();
    public static final int COCEXPIRATIONDATE = AttributesEnum.CocExpirationDate.index();
    public static final int COCIDENTIFIER = AttributesEnum.CocIdentifier.index();
    public static final int COCISSUEDATE = AttributesEnum.CocIssueDate.index();
    public static final int CRAAPPROVEDBY = AttributesEnum.CraApprovedBy.index();
    public static final int CRAAPPROVEDDATE = AttributesEnum.CraApprovedDate.index();
    public static final int CRAREQUIRED = AttributesEnum.CraRequired.index();
    public static final int CRASENTBY = AttributesEnum.CraSentBy.index();
    public static final int CRASENTDATE = AttributesEnum.CraSentDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int DOCIDENTIFIER = AttributesEnum.DocIdentifier.index();
    public static final int DOCORDER = AttributesEnum.DocOrder.index();
    public static final int DOCUMENTAPPROVEDBY = AttributesEnum.DocumentApprovedBy.index();
    public static final int DOCUMENTAPPROVEDDATE = AttributesEnum.DocumentApprovedDate.index();
    public static final int DOCUMENTID = AttributesEnum.DocumentId.index();
    public static final int EDOCID = AttributesEnum.EdocId.index();
    public static final int ESDIID = AttributesEnum.EsdiId.index();
    public static final int ESIID = AttributesEnum.EsiId.index();
    public static final int GRADEID = AttributesEnum.GradeId.index();
    public static final int GRADETYPE = AttributesEnum.GradeType.index();
    public static final int SQCGRADINGCOMMENTS = AttributesEnum.SqcGradingComments.index();
    public static final int GRADINGINSTRUCTIONS = AttributesEnum.GradingInstructions.index();
    public static final int GRADINGSTATUS3 = AttributesEnum.GradingStatus3.index();
    public static final int INVENTORYITEMID = AttributesEnum.InventoryItemId.index();
    public static final int ISSUETYPE1 = AttributesEnum.IssueType1.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LIMITATION = AttributesEnum.Limitation.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int PREVIOUSDOCUMENTID = AttributesEnum.PreviousDocumentId.index();
    public static final int RESTRICTION = AttributesEnum.Restriction.index();
    public static final int SUPPORTEDOCID = AttributesEnum.SupportEdocId.index();
    public static final int VERIFICATIONBY = AttributesEnum.VerificationBy.index();
    public static final int VERIFICATIONREQUESTDATE = AttributesEnum.VerificationRequestDate.index();
    public static final int TRANCOUNTRYNAMESQC = AttributesEnum.tranCountryNameSqc.index();
    public static final int TRANGRADEDESCRIPTION = AttributesEnum.tranGradeDescription.index();
    public static final int TRANGRADECODESQC = AttributesEnum.tranGradeCodeSqc.index();
    public static final int TRANCOC = AttributesEnum.tranCOC.index();
    public static final int TRANSUPPORT = AttributesEnum.tranSupport.index();
    public static final int DATAVERIFIED1 = AttributesEnum.DataVerified1.index();
    public static final int TRANSPREVIOUSSQC = AttributesEnum.TransPreviousSqc.index();
    public static final int TRANSSEAFARERIDSQC = AttributesEnum.TransSeafarerIdSqc.index();
    public static final int SQCDOCGRDHOLDREASON = AttributesEnum.SqcDocGrdHoldReason.index();
    public static final int DATAVERIFIEDCOMNTSQC = AttributesEnum.DataVerifiedComntSqc.index();
    public static final int ADDEDBYROLE = AttributesEnum.AddedByRole.index();
    public static final int TRANSDISABLEDELETESQCLINE = AttributesEnum.TransDisableDeleteSqcLine.index();
    public static final int TRANSSQCLIMITATION = AttributesEnum.TransSqcLimitation.index();
    public static final int TRANSCOCSQCINPUTFILE = AttributesEnum.TransCocSqcInputFile.index();
    public static final int REPLACEMENTISSUETYPESQC = AttributesEnum.ReplacementIssueTypeSqc.index();
    public static final int RESTRICTIONNAMESQC = AttributesEnum.RestrictionNameSqc.index();
    public static final int SQCDOCISSUETYPEUPD = AttributesEnum.SqcDocIssueTypeUpd.index();
    public static final int SQCDOCISSUETYPEUPDDT = AttributesEnum.SqcDocIssueTypeUpdDt.index();
    public static final int SQCDOCCHARGEABLE = AttributesEnum.SqcDocChargeable.index();
    public static final int COUNTRIESLOV1 = AttributesEnum.countriesLOV1.index();
    public static final int VIEWGRADESQCLOV1 = AttributesEnum.viewGradeSqcLOV1.index();
    public static final int GETDOCUMENTLINKRO1 = AttributesEnum.GetDocumentLinkRO1.index();
    public static final int VIEWSEAFARERDOCSSQCVO1 = AttributesEnum.viewSeafarerDocsSqcVO1.index();
    public static final int ISSUETYPELOV1 = AttributesEnum.IssueTypeLOV1.index();
    public static final int YESNOLOV1 = AttributesEnum.YesNoLOV1.index();
    public static final int PREVIOUSEXSICDSQCLOV1 = AttributesEnum.PreviousExsicdSqcLOV1.index();
    public static final int HOLDREASONVIEW1 = AttributesEnum.HoldReasonView1.index();
    public static final int RESTRICTIONSVIEW1 = AttributesEnum.RestrictionsView1.index();
    public static final int YESNOCANCELVIEW1 = AttributesEnum.YesNoCancelView1.index();
    public static final int LOVREPLACEMENTUOMVIEW1 = AttributesEnum.LovReplacementUomView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RmiSeafarerDocsSqcViewRowImpl() {
    }

    /**
     * Gets viewSeafarerDocsEO entity object.
     * @return the viewSeafarerDocsEO
     */
    public RmiSeafarerDocsImpl getviewSeafarerDocsEO() {
        return (RmiSeafarerDocsImpl) getEntity(ENTITY_VIEWSEAFARERDOCSEO);
    }

    /**
     * Gets the attribute value for COC_COUNTRY using the alias name CocCountry.
     * @return the COC_COUNTRY
     */
    public String getCocCountry() {
        return (String)getAttributeInternal(COCCOUNTRY);
    }

    /**
     * Sets <code>value</code> as attribute value for COC_COUNTRY using the alias name CocCountry.
     * @param value value to set the COC_COUNTRY
     */
    public void setCocCountry(String value) 
    {
        setAttributeInternal(COCCOUNTRY, value);
    }

    /**
     * Gets the attribute value for COC_EXPIRATION_DATE using the alias name CocExpirationDate.
     * @return the COC_EXPIRATION_DATE
     */
    public Timestamp getCocExpirationDate() {
        return (Timestamp)getAttributeInternal(COCEXPIRATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for COC_EXPIRATION_DATE using the alias name CocExpirationDate.
     * @param value value to set the COC_EXPIRATION_DATE
     */
    public void setCocExpirationDate(Timestamp value) {
        setAttributeInternal(COCEXPIRATIONDATE, value);
    }

    /**
     * Gets the attribute value for COC_IDENTIFIER using the alias name CocIdentifier.
     * @return the COC_IDENTIFIER
     */
    public String getCocIdentifier() {
        return (String)getAttributeInternal(COCIDENTIFIER);
    }

    /**
     * Sets <code>value</code> as attribute value for COC_IDENTIFIER using the alias name CocIdentifier.
     * @param value value to set the COC_IDENTIFIER
     */
    public void setCocIdentifier(String value) {
        setAttributeInternal(COCIDENTIFIER, value);
    }

    /**
     * Gets the attribute value for COC_ISSUE_DATE using the alias name CocIssueDate.
     * @return the COC_ISSUE_DATE
     */
    public Timestamp getCocIssueDate() {
        return (Timestamp)getAttributeInternal(COCISSUEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for COC_ISSUE_DATE using the alias name CocIssueDate.
     * @param value value to set the COC_ISSUE_DATE
     */
    public void setCocIssueDate(Timestamp value)
    {
        if (value != null) 
        {
            try 
            {
                Date issueDate = (new oracle.jbo.domain.Timestamp(value)).dateValue();
                Date expDate = new Date(issueDate.getTime() + 1825l * 24l * 60l * 60l * 1000l);
                if (expDate != null)
                    this.setCocExpirationDate(new Timestamp(expDate.getTime()));
            } catch (Exception e) {
                e.printStackTrace();
                AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                                 " Please contact your System Administrator." , 
                                                 "", FacesMessage.SEVERITY_ERROR); 
            }
        }
        setAttributeInternal(COCISSUEDATE, value);
    }

    /**
     * Gets the attribute value for CRA_APPROVED_BY using the alias name CraApprovedBy.
     * @return the CRA_APPROVED_BY
     */
    public BigDecimal getCraApprovedBy() {
        return (BigDecimal)getAttributeInternal(CRAAPPROVEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CRA_APPROVED_BY using the alias name CraApprovedBy.
     * @param value value to set the CRA_APPROVED_BY
     */
    public void setCraApprovedBy(BigDecimal value) {
        setAttributeInternal(CRAAPPROVEDBY, value);
    }

    /**
     * Gets the attribute value for CRA_APPROVED_DATE using the alias name CraApprovedDate.
     * @return the CRA_APPROVED_DATE
     */
    public Timestamp getCraApprovedDate() {
        return (Timestamp)getAttributeInternal(CRAAPPROVEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CRA_APPROVED_DATE using the alias name CraApprovedDate.
     * @param value value to set the CRA_APPROVED_DATE
     */
    public void setCraApprovedDate(Timestamp value) {
        setAttributeInternal(CRAAPPROVEDDATE, value);
    }

    /**
     * Gets the attribute value for CRA_REQUIRED using the alias name CraRequired.
     * @return the CRA_REQUIRED
     */
    public String getCraRequired() {
        return (String)getAttributeInternal(CRAREQUIRED);
    }

    /**
     * Sets <code>value</code> as attribute value for CRA_REQUIRED using the alias name CraRequired.
     * @param value value to set the CRA_REQUIRED
     */
    public void setCraRequired(String value) {
        setAttributeInternal(CRAREQUIRED, value);
    }

    /**
     * Gets the attribute value for CRA_SENT_BY using the alias name CraSentBy.
     * @return the CRA_SENT_BY
     */
    public BigDecimal getCraSentBy() {
        return (BigDecimal)getAttributeInternal(CRASENTBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CRA_SENT_BY using the alias name CraSentBy.
     * @param value value to set the CRA_SENT_BY
     */
    public void setCraSentBy(BigDecimal value) {
        setAttributeInternal(CRASENTBY, value);
    }

    /**
     * Gets the attribute value for CRA_SENT_DATE using the alias name CraSentDate.
     * @return the CRA_SENT_DATE
     */
    public Timestamp getCraSentDate() {
        return (Timestamp)getAttributeInternal(CRASENTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CRA_SENT_DATE using the alias name CraSentDate.
     * @param value value to set the CRA_SENT_DATE
     */
    public void setCraSentDate(Timestamp value) {
        setAttributeInternal(CRASENTDATE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for DOC_IDENTIFIER using the alias name DocIdentifier.
     * @return the DOC_IDENTIFIER
     */
    public BigDecimal getDocIdentifier() {
        return (BigDecimal)getAttributeInternal(DOCIDENTIFIER);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_IDENTIFIER using the alias name DocIdentifier.
     * @param value value to set the DOC_IDENTIFIER
     */
    public void setDocIdentifier(BigDecimal value) {
        setAttributeInternal(DOCIDENTIFIER, value);
    }

    /**
     * Gets the attribute value for DOC_ORDER using the alias name DocOrder.
     * @return the DOC_ORDER
     */
    public BigDecimal getDocOrder() {
        return (BigDecimal)getAttributeInternal(DOCORDER);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ORDER using the alias name DocOrder.
     * @param value value to set the DOC_ORDER
     */
    public void setDocOrder(BigDecimal value) {
        setAttributeInternal(DOCORDER, value);
    }

    /**
     * Gets the attribute value for DOCUMENT_APPROVED_BY using the alias name DocumentApprovedBy.
     * @return the DOCUMENT_APPROVED_BY
     */
    public BigDecimal getDocumentApprovedBy() {
        return (BigDecimal)getAttributeInternal(DOCUMENTAPPROVEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for DOCUMENT_APPROVED_BY using the alias name DocumentApprovedBy.
     * @param value value to set the DOCUMENT_APPROVED_BY
     */
    public void setDocumentApprovedBy(BigDecimal value) {
        setAttributeInternal(DOCUMENTAPPROVEDBY, value);
    }

    /**
     * Gets the attribute value for DOCUMENT_APPROVED_DATE using the alias name DocumentApprovedDate.
     * @return the DOCUMENT_APPROVED_DATE
     */
    public Timestamp getDocumentApprovedDate() {
        return (Timestamp)getAttributeInternal(DOCUMENTAPPROVEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DOCUMENT_APPROVED_DATE using the alias name DocumentApprovedDate.
     * @param value value to set the DOCUMENT_APPROVED_DATE
     */
    public void setDocumentApprovedDate(Timestamp value) {
        setAttributeInternal(DOCUMENTAPPROVEDDATE, value);
    }

    /**
     * Gets the attribute value for DOCUMENT_ID using the alias name DocumentId.
     * @return the DOCUMENT_ID
     */
    public BigDecimal getDocumentId() {
        return (BigDecimal)getAttributeInternal(DOCUMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOCUMENT_ID using the alias name DocumentId.
     * @param value value to set the DOCUMENT_ID
     */
    public void setDocumentId(BigDecimal value) {
        setAttributeInternal(DOCUMENTID, value);
    }

    /**
     * Gets the attribute value for EDOC_ID using the alias name EdocId.
     * @return the EDOC_ID
     */
    public Integer getEdocId() {
        return (Integer)getAttributeInternal(EDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for EDOC_ID using the alias name EdocId.
     * @param value value to set the EDOC_ID
     */
    public void setEdocId(Integer value) {
        setAttributeInternal(EDOCID, value);
    }

    /**
     * Gets the attribute value for ESDI_ID using the alias name EsdiId.
     * @return the ESDI_ID
     */
    public Integer getEsdiId() {
        return (Integer)getAttributeInternal(ESDIID);
    }

    /**
     * Sets <code>value</code> as attribute value for ESDI_ID using the alias name EsdiId.
     * @param value value to set the ESDI_ID
     */
    public void setEsdiId(Integer value) {
        setAttributeInternal(ESDIID, value);
    }

    /**
     * Gets the attribute value for ESI_ID using the alias name EsiId.
     * @return the ESI_ID
     */
    public Integer getEsiId() {
        return (Integer)getAttributeInternal(ESIID);
    }

    /**
     * Sets <code>value</code> as attribute value for ESI_ID using the alias name EsiId.
     * @param value value to set the ESI_ID
     */
    public void setEsiId(Integer value) {
        setAttributeInternal(ESIID, value);
    }

    /**
     * Gets the attribute value for GRADE_ID using the alias name GradeId.
     * @return the GRADE_ID
     */
    public Integer getGradeId() {
        return (Integer)getAttributeInternal(GRADEID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRADE_ID using the alias name GradeId.
     * @param value value to set the GRADE_ID
     */
    public void setGradeId(Integer value) {
        setAttributeInternal(GRADEID, value);
    }

    /**
     * Gets the attribute value for GRADE_TYPE using the alias name GradeType.
     * @return the GRADE_TYPE
     */
    public String getGradeType() {
        return (String)getAttributeInternal(GRADETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for GRADE_TYPE using the alias name GradeType.
     * @param value value to set the GRADE_TYPE
     */
    public void setGradeType(String value) {
        setAttributeInternal(GRADETYPE, value);
    }

    /**
     * Gets the attribute value for GRADING_COMMENTS using the alias name GradingComments.
     * @return the GRADING_COMMENTS
     */
    public String getSqcGradingComments() {
        return (String)getAttributeInternal(SQCGRADINGCOMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for GRADING_COMMENTS using the alias name GradingComments.
     * @param value value to set the GRADING_COMMENTS
     */
    public void setSqcGradingComments(String value) {
        setAttributeInternal(SQCGRADINGCOMMENTS, value);
    }

    /**
     * Gets the attribute value for GRADING_INSTRUCTIONS using the alias name GradingInstructions.
     * @return the GRADING_INSTRUCTIONS
     */
    public String getGradingInstructions() {
        return (String)getAttributeInternal(GRADINGINSTRUCTIONS);
    }

    /**
     * Sets <code>value</code> as attribute value for GRADING_INSTRUCTIONS using the alias name GradingInstructions.
     * @param value value to set the GRADING_INSTRUCTIONS
     */
    public void setGradingInstructions(String value) {
        setAttributeInternal(GRADINGINSTRUCTIONS, value);
    }

    /**
     * Gets the attribute value for GRADING_STATUS using the alias name GradingStatus.
     * @return the GRADING_STATUS
     */
    public String getGradingStatus3() {
        if(getAttributeInternal(GRADINGSTATUS3) != null
            && getAttributeInternal(GRADINGSTATUS3).toString().trim().equalsIgnoreCase("Rejected"))
            return "Hold";
        else
            return (String)getAttributeInternal(GRADINGSTATUS3);
    }

    /**
     * Sets <code>value</code> as attribute value for GRADING_STATUS using the alias name GradingStatus.
     * @param value value to set the GRADING_STATUS
     */
    public void setGradingStatus3(String value)
    {
        if(value != null)
        {
            setAttributeInternal(SQCGRADINGCOMMENTS, null);
            setAttributeInternal(SQCDOCGRDHOLDREASON, null);
        }
        setAttributeInternal(GRADINGSTATUS3, value);
    }

    /**
     * Gets the attribute value for INVENTORY_ITEM_ID using the alias name InventoryItemId.
     * @return the INVENTORY_ITEM_ID
     */
    public BigDecimal getInventoryItemId() {
        return (BigDecimal)getAttributeInternal(INVENTORYITEMID);
    }

    /**
     * Sets <code>value</code> as attribute value for INVENTORY_ITEM_ID using the alias name InventoryItemId.
     * @param value value to set the INVENTORY_ITEM_ID
     */
    public void setInventoryItemId(BigDecimal value) {
        setAttributeInternal(INVENTORYITEMID, value);
    }

    /**
     * Gets the attribute value for ISSUE_TYPE using the alias name IssueType.
     * @return the ISSUE_TYPE
     */
    public String getIssueType1()
    {
        try 
        {
            if (getAttributeInternal(ISSUETYPE1) != null)
                return (String) getAttributeInternal(ISSUETYPE1);
            else {
                setAttributeInternal(ISSUETYPE1, "New");
                return "New";
            }
        } catch (Exception e) {
                e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String) getAttributeInternal(ISSUETYPE1);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSUE_TYPE using the alias name IssueType.
     * @param value value to set the ISSUE_TYPE
     */
    public void setIssueType1(String value)
    {
        setAttributeInternal(ISSUETYPE1, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public Integer getLastUpdateLogin() {
        return (Integer) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(Integer value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Integer getLastUpdatedBy() {
        return (Integer) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Integer value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LIMITATION using the alias name Limitation.
     * @return the LIMITATION
     */
    public BigDecimal getLimitation() {
        return (BigDecimal)getAttributeInternal(LIMITATION);
    }

    /**
     * Sets <code>value</code> as attribute value for LIMITATION using the alias name Limitation.
     * @param value value to set the LIMITATION
     */
    public void setLimitation(BigDecimal value) {
        setAttributeInternal(LIMITATION, value);
    }

    /**
     * Gets the attribute value for LINE_ID using the alias name LineId.
     * @return the LINE_ID
     */
    public BigDecimal getLineId() {
        return (BigDecimal)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_ID using the alias name LineId.
     * @param value value to set the LINE_ID
     */
    public void setLineId(BigDecimal value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for PREVIOUS_DOCUMENT_ID using the alias name PreviousDocumentId.
     * @return the PREVIOUS_DOCUMENT_ID
     */
    public BigDecimal getPreviousDocumentId() {
        return (BigDecimal)getAttributeInternal(PREVIOUSDOCUMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PREVIOUS_DOCUMENT_ID using the alias name PreviousDocumentId.
     * @param value value to set the PREVIOUS_DOCUMENT_ID
     */
    public void setPreviousDocumentId(BigDecimal value) {
        setAttributeInternal(PREVIOUSDOCUMENTID, value);
    }

    /**
     * Gets the attribute value for RESTRICTION using the alias name Restriction.
     * @return the RESTRICTION
     */
    public Integer getRestriction() {
        return (Integer)getAttributeInternal(RESTRICTION);
    }

    /**
     * Sets <code>value</code> as attribute value for RESTRICTION using the alias name Restriction.
     * @param value value to set the RESTRICTION
     */
    public void setRestriction(Integer value) {
        setAttributeInternal(RESTRICTION, value);
    }

    /**
     * Gets the attribute value for SUPPORT_EDOC_ID using the alias name SupportEdocId.
     * @return the SUPPORT_EDOC_ID
     */
    public BigDecimal getSupportEdocId() {
        return (BigDecimal)getAttributeInternal(SUPPORTEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SUPPORT_EDOC_ID using the alias name SupportEdocId.
     * @param value value to set the SUPPORT_EDOC_ID
     */
    public void setSupportEdocId(BigDecimal value) {
        setAttributeInternal(SUPPORTEDOCID, value);
    }

    /**
     * Gets the attribute value for VERIFICATION_BY using the alias name VerificationBy.
     * @return the VERIFICATION_BY
     */
    public BigDecimal getVerificationBy() {
        return (BigDecimal)getAttributeInternal(VERIFICATIONBY);
    }

    /**
     * Sets <code>value</code> as attribute value for VERIFICATION_BY using the alias name VerificationBy.
     * @param value value to set the VERIFICATION_BY
     */
    public void setVerificationBy(BigDecimal value) {
        setAttributeInternal(VERIFICATIONBY, value);
    }

    /**
     * Gets the attribute value for VERIFICATION_REQUEST_DATE using the alias name VerificationRequestDate.
     * @return the VERIFICATION_REQUEST_DATE
     */
    public Timestamp getVerificationRequestDate() {
        return (Timestamp)getAttributeInternal(VERIFICATIONREQUESTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for VERIFICATION_REQUEST_DATE using the alias name VerificationRequestDate.
     * @param value value to set the VERIFICATION_REQUEST_DATE
     */
    public void setVerificationRequestDate(Timestamp value) {
        setAttributeInternal(VERIFICATIONREQUESTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCountryName.
     * @return the tranCountryName
     */
    public String gettranCountryNameSqc() {
        try 
        {
            String cntryCode = null;
            String cntryName = null;
            if (getCocCountry() != null) {
                cntryCode = getCocCountry();
                Row[] cntryRows;
                cntryRows = getcountriesLOV1().getFilteredRows("CountryCode", cntryCode);
                if (cntryRows.length > 0) {
                    cntryName = cntryRows[0].getAttribute("CountryName").toString();
                }
                return cntryName;
            }
        } catch (Exception e) {
                e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String) getAttributeInternal(TRANCOUNTRYNAMESQC);
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCountryName.
     * @param value value to set the  tranCountryName
     */
    public void settranCountryNameSqc(String value) {
        setAttributeInternal(TRANCOUNTRYNAMESQC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranGradeDescription.
     * @return the tranGradeDescription
     */

    public String gettranGradeDescription() {
        try 
        {
            Integer gradeId = null;
            String gardeDescription = null;
            if (getGradeId() != null) {
                gradeId = getGradeId();
                Row[] gardeRows;
                gardeRows = getviewGradeSqcLOV1().getFilteredRows("GradeId", gradeId);
                if (gardeRows.length > 0) {
                    gardeDescription = gardeRows[0].getAttribute("GradeName").toString();
                }
                return gardeDescription;
            }
        } catch (Exception e) {
                e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String) getAttributeInternal(TRANGRADEDESCRIPTION);
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranGradeDescription.
     * @param value value to set the  tranGradeDescription
     */
    public void settranGradeDescription(String value) {
        setAttributeInternal(TRANGRADEDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranGradeCode.
     * @return the tranGradeCode
     */
//    public String gettranGradeCode() {
//        return (String)getAttributeInternal(TRANGRADECODE);
//    }
    public String gettranGradeCodeSqc() {
        try 
        {
            Integer gradeId = null;
            String gardecode = null;
            //System.out.println("------------->gettranGradeCode111");
            if (getGradeId() != null) {
                gradeId = getGradeId();
                Row[] gardeRows;
                //System.out.println("------------->gettranGradeCode222");
                gardeRows = getviewGradeSqcLOV1().getFilteredRows("GradeId", gradeId);
                if (gardeRows.length > 0) {
                    //System.out.println("------------->gettranGradeCode333");
                    gardecode = gardeRows[0].getAttribute("GradeCode").toString();
                }
                return gardecode;
            }
        } catch (Exception e) {
                e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String) getAttributeInternal(TRANGRADECODESQC);
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranGradeCode.
     * @param value value to set the  tranGradeCode
     */
    public void settranGradeCodeSqc(String value) {
        setAttributeInternal(TRANGRADECODESQC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCOC.
     * @return the tranCOC
     */
    public String gettranCOC() {
        return (String)getAttributeInternal(TRANCOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCOC.
     * @param value value to set the  tranCOC
     */
    public void settranCOC(String value) {
        setAttributeInternal(TRANCOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranSupport.
     * @return the tranSupport
     */
//    public String gettranSupport() {
//        return (String)getAttributeInternal(TRANSUPPORT);
//    }
    public String gettranSupport() {
        try 
        {
            RowSet doclink = getGetDocumentLinkRO1();
            doclink.setNamedWhereClauseParam("pEdocId", getEdocId());
            doclink.executeQuery();
            Row row = doclink.first();
            if(row != null &&row.getAttribute("DocPath") != null)
            {
                String docurl = row.getAttribute("DocPath").toString();
                return docurl;
            }
            else
                return null;
        } catch (Exception e) {
                e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String) getAttributeInternal(TRANSUPPORT);
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranSupport.
     * @param value value to set the  tranSupport
     */
    public void settranSupport(String value) {
        setAttributeInternal(TRANSUPPORT, value);
    }

    /**
     * Gets the attribute value for DATA_VERIFIED using the alias name DataVerified.
     * @return the DATA_VERIFIED
     */
    public String getDataVerified1()
    {
        return (String) getAttributeInternal(DATAVERIFIED1);
    }

    /**
     * Sets <code>value</code> as attribute value for DATA_VERIFIED using the alias name DataVerified.
     * @param value value to set the DATA_VERIFIED
     */
    public void setDataVerified1(String value) {
        setAttributeInternal(DATAVERIFIED1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPreviousSqc.
     * @return the TransPreviousSqc
     */
    public Integer getTransPreviousSqc()
    {
        try 
        {
            if (getAttributeInternal(TRANSPREVIOUSSQC) == null && getPreviousDocumentId() != null) {
                ViewObjectImpl prvsOcVo = getAm().getPreviousSqcView1();
                prvsOcVo.setNamedWhereClauseParam("pSeafarerId", getTransSeafarerIdSqc());
                prvsOcVo.setNamedWhereClauseParam("pDocumentId", getPreviousDocumentId());
                prvsOcVo.executeQuery();

                Row[] fr = prvsOcVo.getAllRowsInRange();
                if (fr.length > 0 && fr[0].getAttribute("SqcNumber") != null)
                    return (Integer) fr[0].getAttribute("SqcNumber");
            }
        } catch (Exception e) {
                e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (Integer) getAttributeInternal(TRANSPREVIOUSSQC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPreviousSqc.
     * @param value value to set the  TransPreviousSqc
     */
    public void setTransPreviousSqc(Integer value) {
        setAttributeInternal(TRANSPREVIOUSSQC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSeafarerIdSqc.
     * @return the TransSeafarerIdSqc
     */
    public Integer getTransSeafarerIdSqc()
    {
        try 
        {
            if (getAttributeInternal(TRANSSEAFARERIDSQC) == null) {
                ViewObjectImpl sfrrVo = getAm().getRmiSeafarerView1();
                Row sfrrRow = sfrrVo.getCurrentRow();

                if (sfrrRow != null && sfrrRow.getAttribute("SeafarerId") != null) {
                    return (Integer) sfrrRow.getAttribute("SeafarerId");
                }
            }
        } catch (Exception e) {
                e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (Integer) getAttributeInternal(TRANSSEAFARERIDSQC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSeafarerIdSqc.
     * @param value value to set the  TransSeafarerIdSqc
     */
    public void setTransSeafarerIdSqc(Integer value) {
        setAttributeInternal(TRANSSEAFARERIDSQC, value);
    }

    /**
     * Gets the attribute value for DOC_GRD_HOLD_REASON using the alias name SqcDocGrdHoldReason.
     * @return the DOC_GRD_HOLD_REASON
     */
    public String getSqcDocGrdHoldReason() {
        return (String) getAttributeInternal(SQCDOCGRDHOLDREASON);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_GRD_HOLD_REASON using the alias name SqcDocGrdHoldReason.
     * @param value value to set the DOC_GRD_HOLD_REASON
     */
    public void setSqcDocGrdHoldReason(String value)  
    {
        if(getAttributeInternal(SQCDOCGRDHOLDREASON) != null 
            && getAttributeInternal(SQCDOCGRDHOLDREASON).toString().equalsIgnoreCase("15 - Other"))
            setAttributeInternal(SQCGRADINGCOMMENTS, null);
        
        setAttributeInternal(SQCDOCGRDHOLDREASON, value);
    }

    /**
     * Gets the attribute value for DATA_VERIFIED_COMNT using the alias name DataVerifiedComnt.
     * @return the DATA_VERIFIED_COMNT
     */
    public String getDataVerifiedComntSqc() {
        return (String) getAttributeInternal(DATAVERIFIEDCOMNTSQC);
    }

    /**
     * Sets <code>value</code> as attribute value for DATA_VERIFIED_COMNT using the alias name DataVerifiedComnt.
     * @param value value to set the DATA_VERIFIED_COMNT
     */
    public void setDataVerifiedComntSqc(String value) {
        setAttributeInternal(DATAVERIFIEDCOMNTSQC, value);
    }

    /**
     * Gets the attribute value for ADDED_BY_ROLE using the alias name AddedByRole.
     * @return the ADDED_BY_ROLE
     */
    public String getAddedByRole() {
        return (String) getAttributeInternal(ADDEDBYROLE);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDED_BY_ROLE using the alias name AddedByRole.
     * @param value value to set the ADDED_BY_ROLE
     */
    public void setAddedByRole(String value) {
        setAttributeInternal(ADDEDBYROLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDisableDeleteSqcLine.
     * @return the TransDisableDeleteSqcLine
     */
    public String getTransDisableDeleteSqcLine() {
        return (String) getAttributeInternal(TRANSDISABLEDELETESQCLINE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDisableDeleteSqcLine.
     * @param value value to set the  TransDisableDeleteSqcLine
     */
    public void setTransDisableDeleteSqcLine(String value) {
        setAttributeInternal(TRANSDISABLEDELETESQCLINE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSqcLimitation.
     * @return the TransSqcLimitation
     */
    public String getTransSqcLimitation()
    {
//        try 
//        {
//            Integer restrictionId = null;
//            String restrictionName = null;
//            if (getRestriction() != null) {
//                restrictionId = getRestriction();
//                Row[] resRows;
//                resRows = getRestrictionsView1().getFilteredRows("RestrictionId", restrictionId);
//                if (resRows.length > 0) {
//                    restrictionName = resRows[0].getAttribute("RestrictionName").toString();
//                }
//                return restrictionName;
//            }
//        } catch (Exception e) {
//                e.printStackTrace();
//            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
//                                             " Please contact your System Administrator." , 
//                                             "", FacesMessage.SEVERITY_ERROR); 
//        }
        return (String) getAttributeInternal(TRANSSQCLIMITATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSqcLimitation.
     * @param value value to set the  TransSqcLimitation
     */
    public void setTransSqcLimitation(String value) {
        setAttributeInternal(TRANSSQCLIMITATION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCocSqcInputFile.
     * @return the TransCocSqcInputFile
     */
    public String getTransCocSqcInputFile() {
        return (String) getAttributeInternal(TRANSCOCSQCINPUTFILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCocSqcInputFile.
     * @param value value to set the  TransCocSqcInputFile
     */
    public void setTransCocSqcInputFile(String value) {
        setAttributeInternal(TRANSCOCSQCINPUTFILE, value);
    }

    /**
     * Gets the attribute value for REPLACEMENT_ISSUE_TYPE using the alias name ReplacementIssueTypeSqc.
     * @return the REPLACEMENT_ISSUE_TYPE
     */
    public String getReplacementIssueTypeSqc()
    {
        if(getAttributeInternal(REPLACEMENTISSUETYPESQC) != null)
            return (String)getAttributeInternal(REPLACEMENTISSUETYPESQC);
        else
        {
            setAttributeInternal(REPLACEMENTISSUETYPESQC, "RP");
            return "RP";
        }
    }

    /**
     * Sets <code>value</code> as attribute value for REPLACEMENT_ISSUE_TYPE using the alias name ReplacementIssueTypeSqc.
     * @param value value to set the REPLACEMENT_ISSUE_TYPE
     */
    public void setReplacementIssueTypeSqc(String value) {
        setAttributeInternal(REPLACEMENTISSUETYPESQC, value);
    }

    /**
     * Gets the attribute value for RESTRICTION_NAME using the alias name RestrictionNameSqc.
     * @return the RESTRICTION_NAME
     */
    public String getRestrictionNameSqc() 
    {
        try 
        {
            if (getAttributeInternal(RESTRICTIONNAMESQC) == null) {
                Integer restrictionId = null;
                String restrictionName = null;
                if (getRestriction() != null) {
                    restrictionId = getRestriction();
                    Row[] resRows;
                    resRows = getRestrictionsView1().getFilteredRows("RestrictionId", restrictionId);
                    if (resRows.length > 0) {
                        restrictionName = resRows[0].getAttribute("RestrictionName").toString();
                    }
                    return restrictionName;
                }
            }
        } catch (Exception e) {
                e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching limitation." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        
        return (String) getAttributeInternal(RESTRICTIONNAMESQC);
    }

    /**
     * Sets <code>value</code> as attribute value for RESTRICTION_NAME using the alias name RestrictionNameSqc.
     * @param value value to set the RESTRICTION_NAME
     */
    public void setRestrictionNameSqc(String value) {
        setAttributeInternal(RESTRICTIONNAMESQC, value);
    }

    /**
     * Gets the attribute value for DOC_ISSUE_TYPE_UPD using the alias name DocIssueTypeUpd.
     * @return the DOC_ISSUE_TYPE_UPD
     */
    public String getSqcDocIssueTypeUpd() {
        return (String) getAttributeInternal(SQCDOCISSUETYPEUPD);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ISSUE_TYPE_UPD using the alias name DocIssueTypeUpd.
     * @param value value to set the DOC_ISSUE_TYPE_UPD
     */
    public void setSqcDocIssueTypeUpd(String value) {
        setAttributeInternal(SQCDOCISSUETYPEUPD, value);
    }

    /**
     * Gets the attribute value for DOC_ISSUE_TYPE_UPD_DT using the alias name DocIssueTypeUpdDt.
     * @return the DOC_ISSUE_TYPE_UPD_DT
     */
    public Timestamp getSqcDocIssueTypeUpdDt() {
        return (Timestamp) getAttributeInternal(SQCDOCISSUETYPEUPDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ISSUE_TYPE_UPD_DT using the alias name DocIssueTypeUpdDt.
     * @param value value to set the DOC_ISSUE_TYPE_UPD_DT
     */
    public void setSqcDocIssueTypeUpdDt(Timestamp value) {
        setAttributeInternal(SQCDOCISSUETYPEUPDDT, value);
    }

    /**
     * Gets the attribute value for DOC_CHARGEABLE using the alias name SqcDocChargeable.
     * @return the DOC_CHARGEABLE
     */
    public String getSqcDocChargeable() {
        return (String) getAttributeInternal(SQCDOCCHARGEABLE);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_CHARGEABLE using the alias name SqcDocChargeable.
     * @param value value to set the DOC_CHARGEABLE
     */
    public void setSqcDocChargeable(String value) {
        setAttributeInternal(SQCDOCCHARGEABLE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> countriesLOV1.
     */
    public RowSet getcountriesLOV1() {
        return (RowSet)getAttributeInternal(COUNTRIESLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> viewGradeSqcLOV1.
     */
    public RowSet getviewGradeSqcLOV1() {
        return (RowSet)getAttributeInternal(VIEWGRADESQCLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GetDocumentLinkRO1.
     */
    public RowSet getGetDocumentLinkRO1() {
        return (RowSet)getAttributeInternal(GETDOCUMENTLINKRO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> viewSeafarerDocsSqcVO1.
     */
    public RowSet getviewSeafarerDocsSqcVO1() {
        return (RowSet)getAttributeInternal(VIEWSEAFARERDOCSSQCVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> IssueTypeLOV1.
     */
    public RowSet getIssueTypeLOV1() {
        return (RowSet) getAttributeInternal(ISSUETYPELOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YesNoLOV1.
     */
    public RowSet getYesNoLOV1() {
        return (RowSet) getAttributeInternal(YESNOLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PreviousExsicdSqcLOV1.
     */
    public RowSet getPreviousExsicdSqcLOV1() {
        return (RowSet) getAttributeInternal(PREVIOUSEXSICDSQCLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> HoldReasonView1.
     */
    public RowSet getHoldReasonView1() {
        return (RowSet) getAttributeInternal(HOLDREASONVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RestrictionsView1.
     */
    public RowSet getRestrictionsView1() {
        return (RowSet) getAttributeInternal(RESTRICTIONSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YesNoCancelView1.
     */
    public RowSet getYesNoCancelView1() {
        return (RowSet) getAttributeInternal(YESNOCANCELVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovReplacementUomView1.
     */
    public RowSet getLovReplacementUomView1() {
        return (RowSet) getAttributeInternal(LOVREPLACEMENTUOMVIEW1);
    }

    public RMITradeCompApprovalAppModuleImpl getAm()
    {
        return (RMITradeCompApprovalAppModuleImpl) this.getApplicationModule();
    }
}

