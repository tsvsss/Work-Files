package com.rmi.tradecompapproval.adfbc.views;

import com.rmi.tradecompapproval.adfbc.services.RMITradeCompApprovalAppModuleImpl;
import com.rmi.tradecompapproval.adfbc.entities.SicdDocumentsImpl;

import com.rmi.tradecompapproval.adfbc.utils.AdfUtils;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Date;

import javax.faces.application.FacesMessage;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 28 13:05:13 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OfficerCertificatesViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_SICDDOCUMENTSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Attribute1,
        Attribute10,
        Attribute11,
        Attribute12,
        Attribute13,
        Attribute14,
        Attribute15,
        Attribute2,
        Attribute3,
        Attribute4,
        Attribute5,
        Attribute6,
        Attribute7,
        Attribute8,
        Attribute9,
        AttributeCategory,
        BookNumber,
        BookType,
        CertificateNumber,
        CertificateType,
        CreatedBy,
        CreationDate,
        DataVerifiedBy,
        DataVerifiedDate,
        DocumentBookId,
        DocumentId,
        DocumentPreviousId,
        DocumentType,
        EndorsementCountry,
        EndorsementExpirationDate,
        EndorsementIssueDate,
        EndorsementNumber,
        EsdiId,
        ExamNumber,
        ExamYear,
        ExpirationDate,
        GradeId,
        GradingStatus,
        HeaderId,
        IssueDate,
        IssueType,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        LineId,
        SeafarerId,
        SignatureId,
        SqcNumber,
        Status,
        VerificationBy,
        VerificationEdocId,
        VerificationRequestDate,
        Verified,
        VerifiedBy,
        VerifiedDate,
        TransCountryName,
        TransGrade,
        TransPreviousOC,
        TransOCWorkOrderNo,
        TransOcAllGrades,
        OcDetailsCapacitiesVO,
        OcDetailsFunctionsVO,
        StatusLOV1,
        CertificateTypeLOV1,
        IssueTypeLOV1,
        countriesLOV1,
        viewGradeOcLOV1,
        PreviousOCLOV1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return OfficerCertificatesViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return OfficerCertificatesViewRowImpl.AttributesEnum.firstIndex() +
                   OfficerCertificatesViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = OfficerCertificatesViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTECATEGORY = AttributesEnum.AttributeCategory.index();
    public static final int BOOKNUMBER = AttributesEnum.BookNumber.index();
    public static final int BOOKTYPE = AttributesEnum.BookType.index();
    public static final int CERTIFICATENUMBER = AttributesEnum.CertificateNumber.index();
    public static final int CERTIFICATETYPE = AttributesEnum.CertificateType.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int DATAVERIFIEDBY = AttributesEnum.DataVerifiedBy.index();
    public static final int DATAVERIFIEDDATE = AttributesEnum.DataVerifiedDate.index();
    public static final int DOCUMENTBOOKID = AttributesEnum.DocumentBookId.index();
    public static final int DOCUMENTID = AttributesEnum.DocumentId.index();
    public static final int DOCUMENTPREVIOUSID = AttributesEnum.DocumentPreviousId.index();
    public static final int DOCUMENTTYPE = AttributesEnum.DocumentType.index();
    public static final int ENDORSEMENTCOUNTRY = AttributesEnum.EndorsementCountry.index();
    public static final int ENDORSEMENTEXPIRATIONDATE = AttributesEnum.EndorsementExpirationDate.index();
    public static final int ENDORSEMENTISSUEDATE = AttributesEnum.EndorsementIssueDate.index();
    public static final int ENDORSEMENTNUMBER = AttributesEnum.EndorsementNumber.index();
    public static final int ESDIID = AttributesEnum.EsdiId.index();
    public static final int EXAMNUMBER = AttributesEnum.ExamNumber.index();
    public static final int EXAMYEAR = AttributesEnum.ExamYear.index();
    public static final int EXPIRATIONDATE = AttributesEnum.ExpirationDate.index();
    public static final int GRADEID = AttributesEnum.GradeId.index();
    public static final int GRADINGSTATUS = AttributesEnum.GradingStatus.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int ISSUEDATE = AttributesEnum.IssueDate.index();
    public static final int ISSUETYPE = AttributesEnum.IssueType.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int SEAFARERID = AttributesEnum.SeafarerId.index();
    public static final int SIGNATUREID = AttributesEnum.SignatureId.index();
    public static final int SQCNUMBER = AttributesEnum.SqcNumber.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int VERIFICATIONBY = AttributesEnum.VerificationBy.index();
    public static final int VERIFICATIONEDOCID = AttributesEnum.VerificationEdocId.index();
    public static final int VERIFICATIONREQUESTDATE = AttributesEnum.VerificationRequestDate.index();
    public static final int VERIFIED = AttributesEnum.Verified.index();
    public static final int VERIFIEDBY = AttributesEnum.VerifiedBy.index();
    public static final int VERIFIEDDATE = AttributesEnum.VerifiedDate.index();
    public static final int TRANSCOUNTRYNAME = AttributesEnum.TransCountryName.index();
    public static final int TRANSGRADE = AttributesEnum.TransGrade.index();
    public static final int TRANSPREVIOUSOC = AttributesEnum.TransPreviousOC.index();
    public static final int TRANSOCWORKORDERNO = AttributesEnum.TransOCWorkOrderNo.index();
    public static final int TRANSOCALLGRADES = AttributesEnum.TransOcAllGrades.index();
    public static final int OCDETAILSCAPACITIESVO = AttributesEnum.OcDetailsCapacitiesVO.index();
    public static final int OCDETAILSFUNCTIONSVO = AttributesEnum.OcDetailsFunctionsVO.index();
    public static final int STATUSLOV1 = AttributesEnum.StatusLOV1.index();
    public static final int CERTIFICATETYPELOV1 = AttributesEnum.CertificateTypeLOV1.index();
    public static final int ISSUETYPELOV1 = AttributesEnum.IssueTypeLOV1.index();
    public static final int COUNTRIESLOV1 = AttributesEnum.countriesLOV1.index();
    public static final int VIEWGRADEOCLOV1 = AttributesEnum.viewGradeOcLOV1.index();
    public static final int PREVIOUSOCLOV1 = AttributesEnum.PreviousOCLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OfficerCertificatesViewRowImpl() {
    }

    /**
     * Gets SicdDocumentsEO entity object.
     * @return the SicdDocumentsEO
     */
    public SicdDocumentsImpl getSicdDocumentsEO() {
        return (SicdDocumentsImpl) getEntity(ENTITY_SICDDOCUMENTSEO);
    }

    /**
     * Gets the attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @return the ATTRIBUTE1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @param value value to set the ATTRIBUTE1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE10 using the alias name Attribute10.
     * @return the ATTRIBUTE10
     */
    public String getAttribute10() {
        return (String) getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE10 using the alias name Attribute10.
     * @param value value to set the ATTRIBUTE10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE11 using the alias name Attribute11.
     * @return the ATTRIBUTE11
     */
    public String getAttribute11() {
        return (String) getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE11 using the alias name Attribute11.
     * @param value value to set the ATTRIBUTE11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE12 using the alias name Attribute12.
     * @return the ATTRIBUTE12
     */
    public String getAttribute12() {
        return (String) getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE12 using the alias name Attribute12.
     * @param value value to set the ATTRIBUTE12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE13 using the alias name Attribute13.
     * @return the ATTRIBUTE13
     */
    public String getAttribute13() {
        return (String) getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE13 using the alias name Attribute13.
     * @param value value to set the ATTRIBUTE13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE14 using the alias name Attribute14.
     * @return the ATTRIBUTE14
     */
    public String getAttribute14() {
        return (String) getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE14 using the alias name Attribute14.
     * @param value value to set the ATTRIBUTE14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE15 using the alias name Attribute15.
     * @return the ATTRIBUTE15
     */
    public String getAttribute15() {
        return (String) getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE15 using the alias name Attribute15.
     * @param value value to set the ATTRIBUTE15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @return the ATTRIBUTE2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @param value value to set the ATTRIBUTE2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @return the ATTRIBUTE3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @param value value to set the ATTRIBUTE3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @return the ATTRIBUTE4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @param value value to set the ATTRIBUTE4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @return the ATTRIBUTE5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @param value value to set the ATTRIBUTE5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE6 using the alias name Attribute6.
     * @return the ATTRIBUTE6
     */
    public String getAttribute6() {
        return (String) getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE6 using the alias name Attribute6.
     * @param value value to set the ATTRIBUTE6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE7 using the alias name Attribute7.
     * @return the ATTRIBUTE7
     */
    public String getAttribute7() {
        return (String) getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE7 using the alias name Attribute7.
     * @param value value to set the ATTRIBUTE7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE8 using the alias name Attribute8.
     * @return the ATTRIBUTE8
     */
    public String getAttribute8() {
        return (String) getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE8 using the alias name Attribute8.
     * @param value value to set the ATTRIBUTE8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE9 using the alias name Attribute9.
     * @return the ATTRIBUTE9
     */
    public String getAttribute9() {
        return (String) getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE9 using the alias name Attribute9.
     * @param value value to set the ATTRIBUTE9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE_CATEGORY using the alias name AttributeCategory.
     * @return the ATTRIBUTE_CATEGORY
     */
    public String getAttributeCategory() {
        return (String) getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE_CATEGORY using the alias name AttributeCategory.
     * @param value value to set the ATTRIBUTE_CATEGORY
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**
     * Gets the attribute value for BOOK_NUMBER using the alias name BookNumber.
     * @return the BOOK_NUMBER
     */
    public BigDecimal getBookNumber() {
        return (BigDecimal) getAttributeInternal(BOOKNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for BOOK_NUMBER using the alias name BookNumber.
     * @param value value to set the BOOK_NUMBER
     */
    public void setBookNumber(BigDecimal value) {
        setAttributeInternal(BOOKNUMBER, value);
    }

    /**
     * Gets the attribute value for BOOK_TYPE using the alias name BookType.
     * @return the BOOK_TYPE
     */
    public String getBookType() {
        return (String) getAttributeInternal(BOOKTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for BOOK_TYPE using the alias name BookType.
     * @param value value to set the BOOK_TYPE
     */
    public void setBookType(String value) {
        setAttributeInternal(BOOKTYPE, value);
    }

    /**
     * Gets the attribute value for CERTIFICATE_NUMBER using the alias name CertificateNumber.
     * @return the CERTIFICATE_NUMBER
     */
    public BigDecimal getCertificateNumber() {
        return (BigDecimal) getAttributeInternal(CERTIFICATENUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for CERTIFICATE_NUMBER using the alias name CertificateNumber.
     * @param value value to set the CERTIFICATE_NUMBER
     */
    public void setCertificateNumber(BigDecimal value) {
        setAttributeInternal(CERTIFICATENUMBER, value);
    }

    /**
     * Gets the attribute value for CERTIFICATE_TYPE using the alias name CertificateType.
     * @return the CERTIFICATE_TYPE
     */
    public String getCertificateType() {
        return (String) getAttributeInternal(CERTIFICATETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for CERTIFICATE_TYPE using the alias name CertificateType.
     * @param value value to set the CERTIFICATE_TYPE
     */
    public void setCertificateType(String value) 
    {
        setAttributeInternal(CERTIFICATETYPE, value);
        setIssueDate(getIssueDate());
        setEndorsementIssueDate(getEndorsementIssueDate());
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for DATA_VERIFIED_BY using the alias name DataVerifiedBy.
     * @return the DATA_VERIFIED_BY
     */
    public BigDecimal getDataVerifiedBy() {
        return (BigDecimal) getAttributeInternal(DATAVERIFIEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for DATA_VERIFIED_BY using the alias name DataVerifiedBy.
     * @param value value to set the DATA_VERIFIED_BY
     */
    public void setDataVerifiedBy(BigDecimal value) {
        setAttributeInternal(DATAVERIFIEDBY, value);
    }

    /**
     * Gets the attribute value for DATA_VERIFIED_DATE using the alias name DataVerifiedDate.
     * @return the DATA_VERIFIED_DATE
     */
    public Timestamp getDataVerifiedDate() {
        return (Timestamp) getAttributeInternal(DATAVERIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DATA_VERIFIED_DATE using the alias name DataVerifiedDate.
     * @param value value to set the DATA_VERIFIED_DATE
     */
    public void setDataVerifiedDate(Timestamp value) {
        setAttributeInternal(DATAVERIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for DOCUMENT_BOOK_ID using the alias name DocumentBookId.
     * @return the DOCUMENT_BOOK_ID
     */
    public BigDecimal getDocumentBookId() {
        return (BigDecimal) getAttributeInternal(DOCUMENTBOOKID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOCUMENT_BOOK_ID using the alias name DocumentBookId.
     * @param value value to set the DOCUMENT_BOOK_ID
     */
    public void setDocumentBookId(BigDecimal value) {
        setAttributeInternal(DOCUMENTBOOKID, value);
    }

    /**
     * Gets the attribute value for DOCUMENT_ID using the alias name DocumentId.
     * @return the DOCUMENT_ID
     */
    public BigDecimal getDocumentId() {
        return (BigDecimal) getAttributeInternal(DOCUMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOCUMENT_ID using the alias name DocumentId.
     * @param value value to set the DOCUMENT_ID
     */
    public void setDocumentId(BigDecimal value) {
        setAttributeInternal(DOCUMENTID, value);
    }

    /**
     * Gets the attribute value for DOCUMENT_PREVIOUS_ID using the alias name DocumentPreviousId.
     * @return the DOCUMENT_PREVIOUS_ID
     */
    public BigDecimal getDocumentPreviousId() {
        return (BigDecimal) getAttributeInternal(DOCUMENTPREVIOUSID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOCUMENT_PREVIOUS_ID using the alias name DocumentPreviousId.
     * @param value value to set the DOCUMENT_PREVIOUS_ID
     */
    public void setDocumentPreviousId(BigDecimal value) {
        setAttributeInternal(DOCUMENTPREVIOUSID, value);
    }

    /**
     * Gets the attribute value for DOCUMENT_TYPE using the alias name DocumentType.
     * @return the DOCUMENT_TYPE
     */
    public String getDocumentType() {
        return (String) getAttributeInternal(DOCUMENTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DOCUMENT_TYPE using the alias name DocumentType.
     * @param value value to set the DOCUMENT_TYPE
     */
    public void setDocumentType(String value) {
        setAttributeInternal(DOCUMENTTYPE, value);
    }

    /**
     * Gets the attribute value for ENDORSEMENT_COUNTRY using the alias name EndorsementCountry.
     * @return the ENDORSEMENT_COUNTRY
     */
    public String getEndorsementCountry() {
        return (String) getAttributeInternal(ENDORSEMENTCOUNTRY);
    }

    /**
     * Sets <code>value</code> as attribute value for ENDORSEMENT_COUNTRY using the alias name EndorsementCountry.
     * @param value value to set the ENDORSEMENT_COUNTRY
     */
    public void setEndorsementCountry(String value) {
        setAttributeInternal(ENDORSEMENTCOUNTRY, value);
    }

    /**
     * Gets the attribute value for ENDORSEMENT_EXPIRATION_DATE using the alias name EndorsementExpirationDate.
     * @return the ENDORSEMENT_EXPIRATION_DATE
     */
    public Timestamp getEndorsementExpirationDate() {
        return (Timestamp) getAttributeInternal(ENDORSEMENTEXPIRATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ENDORSEMENT_EXPIRATION_DATE using the alias name EndorsementExpirationDate.
     * @param value value to set the ENDORSEMENT_EXPIRATION_DATE
     */
    public void setEndorsementExpirationDate(Timestamp value) {
        setAttributeInternal(ENDORSEMENTEXPIRATIONDATE, value);
    }

    /**
     * Gets the attribute value for ENDORSEMENT_ISSUE_DATE using the alias name EndorsementIssueDate.
     * @return the ENDORSEMENT_ISSUE_DATE
     */
    public Timestamp getEndorsementIssueDate() {
        return (Timestamp) getAttributeInternal(ENDORSEMENTISSUEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ENDORSEMENT_ISSUE_DATE using the alias name EndorsementIssueDate.
     * @param value value to set the ENDORSEMENT_ISSUE_DATE
     */
    public void setEndorsementIssueDate(Timestamp value) 
    {
        if (value != null) 
        {
            try 
            {
                Date issueDate = (new oracle.jbo.domain.Timestamp(value)).dateValue();
                Date expDate = null;
                
//                if(getCertificateType() != null 
//                   && (getCertificateType().equalsIgnoreCase("UA") || getCertificateType().equalsIgnoreCase("CRA")))
//                    expDate = new Date(issueDate.getTime() + 90l * 24l * 60l * 60l * 1000l);
//                else
                    expDate = new Date(issueDate.getTime() + 1826l * 24l * 60l * 60l * 1000l);
                    
                if (expDate != null)
                    this.setEndorsementExpirationDate(new Timestamp(expDate.getTime()));
            } catch (Exception e) {
                AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                                 " Please contact your System Administrator." , 
                                                 "", FacesMessage.SEVERITY_ERROR); 
            }
        }
        setAttributeInternal(ENDORSEMENTISSUEDATE, value);
    }

    /**
     * Gets the attribute value for ENDORSEMENT_NUMBER using the alias name EndorsementNumber.
     * @return the ENDORSEMENT_NUMBER
     */
    public String getEndorsementNumber() {
        return (String) getAttributeInternal(ENDORSEMENTNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for ENDORSEMENT_NUMBER using the alias name EndorsementNumber.
     * @param value value to set the ENDORSEMENT_NUMBER
     */
    public void setEndorsementNumber(String value) {
        setAttributeInternal(ENDORSEMENTNUMBER, value);
    }

    /**
     * Gets the attribute value for ESDI_ID using the alias name EsdiId.
     * @return the ESDI_ID
     */
    public BigDecimal getEsdiId() {
        return (BigDecimal) getAttributeInternal(ESDIID);
    }

    /**
     * Sets <code>value</code> as attribute value for ESDI_ID using the alias name EsdiId.
     * @param value value to set the ESDI_ID
     */
    public void setEsdiId(BigDecimal value) {
        setAttributeInternal(ESDIID, value);
    }

    /**
     * Gets the attribute value for EXAM_NUMBER using the alias name ExamNumber.
     * @return the EXAM_NUMBER
     */
    public String getExamNumber() {
        return (String) getAttributeInternal(EXAMNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for EXAM_NUMBER using the alias name ExamNumber.
     * @param value value to set the EXAM_NUMBER
     */
    public void setExamNumber(String value) {
        setAttributeInternal(EXAMNUMBER, value);
    }

    /**
     * Gets the attribute value for EXAM_YEAR using the alias name ExamYear.
     * @return the EXAM_YEAR
     */
    public BigDecimal getExamYear() {
        return (BigDecimal) getAttributeInternal(EXAMYEAR);
    }

    /**
     * Sets <code>value</code> as attribute value for EXAM_YEAR using the alias name ExamYear.
     * @param value value to set the EXAM_YEAR
     */
    public void setExamYear(BigDecimal value) {
        setAttributeInternal(EXAMYEAR, value);
    }

    /**
     * Gets the attribute value for EXPIRATION_DATE using the alias name ExpirationDate.
     * @return the EXPIRATION_DATE
     */
    public Timestamp getExpirationDate() {
        return (Timestamp) getAttributeInternal(EXPIRATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXPIRATION_DATE using the alias name ExpirationDate.
     * @param value value to set the EXPIRATION_DATE
     */
    public void setExpirationDate(Timestamp value) {
        setAttributeInternal(EXPIRATIONDATE, value);
    }

    /**
     * Gets the attribute value for GRADE_ID using the alias name GradeId.
     * @return the GRADE_ID
     */
    public Integer getGradeId() {
        return (Integer) getAttributeInternal(GRADEID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRADE_ID using the alias name GradeId.
     * @param value value to set the GRADE_ID
     */
    public void setGradeId(Integer value) {
        setAttributeInternal(GRADEID, value);
    }

    /**
     * Gets the attribute value for GRADING_STATUS using the alias name GradingStatus.
     * @return the GRADING_STATUS
     */
    public String getGradingStatus() {
        return (String) getAttributeInternal(GRADINGSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for GRADING_STATUS using the alias name GradingStatus.
     * @param value value to set the GRADING_STATUS
     */
    public void setGradingStatus(String value) {
        setAttributeInternal(GRADINGSTATUS, value);
    }

    /**
     * Gets the attribute value for HEADER_ID using the alias name HeaderId.
     * @return the HEADER_ID
     */
    public BigDecimal getHeaderId() {
        return (BigDecimal) getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for HEADER_ID using the alias name HeaderId.
     * @param value value to set the HEADER_ID
     */
    public void setHeaderId(BigDecimal value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for ISSUE_DATE using the alias name IssueDate.
     * @return the ISSUE_DATE
     */
    public Timestamp getIssueDate() {
        return (Timestamp) getAttributeInternal(ISSUEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSUE_DATE using the alias name IssueDate.
     * @param value value to set the ISSUE_DATE
     */
    public void setIssueDate(Timestamp value) 
    {
        if (value != null) 
        {
            try 
            {
                Date issueDate = (new oracle.jbo.domain.Timestamp(value)).dateValue();
                Date expDate = null;
                
                if(getCertificateType() != null 
                   && (getCertificateType().equalsIgnoreCase("UA") || getCertificateType().equalsIgnoreCase("CRA")))
                    expDate = new Date(issueDate.getTime() + 90l * 24l * 60l * 60l * 1000l);
                else
                    expDate = new Date(issueDate.getTime() + 1826l * 24l * 60l * 60l * 1000l);
                
                if (expDate != null)
                    this.setExpirationDate(new Timestamp(expDate.getTime()));
            } catch (Exception e) {
                AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                                 " Please contact your System Administrator." , 
                                                 "", FacesMessage.SEVERITY_ERROR); 
            }
        }
        setAttributeInternal(ISSUEDATE, value);
    }

    /**
     * Gets the attribute value for ISSUE_TYPE using the alias name IssueType.
     * @return the ISSUE_TYPE
     */
    public String getIssueType() {
        return (String) getAttributeInternal(ISSUETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSUE_TYPE using the alias name IssueType.
     * @param value value to set the ISSUE_TYPE
     */
    public void setIssueType(String value) {
        setAttributeInternal(ISSUETYPE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public Integer getLastUpdateLogin() {
        return (Integer) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(Integer value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Integer getLastUpdatedBy() {
        return (Integer) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Integer value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LINE_ID using the alias name LineId.
     * @return the LINE_ID
     */
    public BigDecimal getLineId() {
        return (BigDecimal) getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_ID using the alias name LineId.
     * @param value value to set the LINE_ID
     */
    public void setLineId(BigDecimal value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for SEAFARER_ID using the alias name SeafarerId.
     * @return the SEAFARER_ID
     */
    public BigDecimal getSeafarerId() {
        return (BigDecimal) getAttributeInternal(SEAFARERID);
    }

    /**
     * Sets <code>value</code> as attribute value for SEAFARER_ID using the alias name SeafarerId.
     * @param value value to set the SEAFARER_ID
     */
    public void setSeafarerId(BigDecimal value) {
        setAttributeInternal(SEAFARERID, value);
    }

    /**
     * Gets the attribute value for SIGNATURE_ID using the alias name SignatureId.
     * @return the SIGNATURE_ID
     */
    public BigDecimal getSignatureId() {
        return (BigDecimal) getAttributeInternal(SIGNATUREID);
    }

    /**
     * Sets <code>value</code> as attribute value for SIGNATURE_ID using the alias name SignatureId.
     * @param value value to set the SIGNATURE_ID
     */
    public void setSignatureId(BigDecimal value) {
        setAttributeInternal(SIGNATUREID, value);
    }

    /**
     * Gets the attribute value for SQC_NUMBER using the alias name SqcNumber.
     * @return the SQC_NUMBER
     */
    public BigDecimal getSqcNumber() {
        return (BigDecimal) getAttributeInternal(SQCNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for SQC_NUMBER using the alias name SqcNumber.
     * @param value value to set the SQC_NUMBER
     */
    public void setSqcNumber(BigDecimal value) {
        setAttributeInternal(SQCNUMBER, value);
    }

    /**
     * Gets the attribute value for STATUS using the alias name Status.
     * @return the STATUS
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for STATUS using the alias name Status.
     * @param value value to set the STATUS
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for VERIFICATION_BY using the alias name VerificationBy.
     * @return the VERIFICATION_BY
     */
    public BigDecimal getVerificationBy() {
        return (BigDecimal) getAttributeInternal(VERIFICATIONBY);
    }

    /**
     * Sets <code>value</code> as attribute value for VERIFICATION_BY using the alias name VerificationBy.
     * @param value value to set the VERIFICATION_BY
     */
    public void setVerificationBy(BigDecimal value) {
        setAttributeInternal(VERIFICATIONBY, value);
    }

    /**
     * Gets the attribute value for VERIFICATION_EDOC_ID using the alias name VerificationEdocId.
     * @return the VERIFICATION_EDOC_ID
     */
    public BigDecimal getVerificationEdocId() {
        return (BigDecimal) getAttributeInternal(VERIFICATIONEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for VERIFICATION_EDOC_ID using the alias name VerificationEdocId.
     * @param value value to set the VERIFICATION_EDOC_ID
     */
    public void setVerificationEdocId(BigDecimal value) {
        setAttributeInternal(VERIFICATIONEDOCID, value);
    }

    /**
     * Gets the attribute value for VERIFICATION_REQUEST_DATE using the alias name VerificationRequestDate.
     * @return the VERIFICATION_REQUEST_DATE
     */
    public Timestamp getVerificationRequestDate() {
        return (Timestamp) getAttributeInternal(VERIFICATIONREQUESTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for VERIFICATION_REQUEST_DATE using the alias name VerificationRequestDate.
     * @param value value to set the VERIFICATION_REQUEST_DATE
     */
    public void setVerificationRequestDate(Timestamp value) {
        setAttributeInternal(VERIFICATIONREQUESTDATE, value);
    }

    /**
     * Gets the attribute value for VERIFIED using the alias name Verified.
     * @return the VERIFIED
     */
    public String getVerified() {
        return (String) getAttributeInternal(VERIFIED);
    }

    /**
     * Sets <code>value</code> as attribute value for VERIFIED using the alias name Verified.
     * @param value value to set the VERIFIED
     */
    public void setVerified(String value) {
        setAttributeInternal(VERIFIED, value);
    }

    /**
     * Gets the attribute value for VERIFIED_BY using the alias name VerifiedBy.
     * @return the VERIFIED_BY
     */
    public BigDecimal getVerifiedBy() {
        return (BigDecimal) getAttributeInternal(VERIFIEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for VERIFIED_BY using the alias name VerifiedBy.
     * @param value value to set the VERIFIED_BY
     */
    public void setVerifiedBy(BigDecimal value) {
        setAttributeInternal(VERIFIEDBY, value);
    }

    /**
     * Gets the attribute value for VERIFIED_DATE using the alias name VerifiedDate.
     * @return the VERIFIED_DATE
     */
    public Timestamp getVerifiedDate() {
        return (Timestamp) getAttributeInternal(VERIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for VERIFIED_DATE using the alias name VerifiedDate.
     * @param value value to set the VERIFIED_DATE
     */
    public void setVerifiedDate(Timestamp value) {
        setAttributeInternal(VERIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCntryName.
     * @return the TransCntryName
     */
    public String getTransCountryName() 
    {
        try 
        {
            if (getAttributeInternal(TRANSCOUNTRYNAME) == null && getEndorsementCountry() != null) {
                ViewObjectImpl cntryVo = getAm().getCountriesView1();
                Row[] frRows = cntryVo.getFilteredRows("CountryCode", getEndorsementCountry());

                if (frRows.length > 0 && frRows[0].getAttribute("CountryName") != null) {
                    return (String) frRows[0].getAttribute("CountryName");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String) getAttributeInternal(TRANSCOUNTRYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCntryName.
     * @param value value to set the  TransCntryName
     */
    public void setTransCountryName(String value) {
        setAttributeInternal(TRANSCOUNTRYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGrade.
     * @return the TransGrade
     */
    public String getTransGrade() 
    {
        try 
        {
            ViewObjectImpl gradeVo = getAm().getGradeOcView1();

            Row[] frRows = gradeVo.getFilteredRows("GradeId", getGradeId());

            if (frRows.length > 0 && frRows[0].getAttribute("GradeCode") != null) {
                return (String) frRows[0].getAttribute("GradeCode");
            }
        } catch (Exception e) {
            e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String) getAttributeInternal(TRANSGRADE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGrade.
     * @param value value to set the  TransGrade
     */
    public void setTransGrade(String value) {
        setAttributeInternal(TRANSGRADE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPreviousOC.
     * @return the TransPreviousOC
     */
    public String getTransPreviousOC() 
    {
        try 
        {
            if (getAttributeInternal(TRANSPREVIOUSOC) == null && getDocumentPreviousId() != null) {
                ViewObjectImpl prvsOcVo = getAm().getPreviousSicdOCView1();
                prvsOcVo.setNamedWhereClauseParam("pDocumentId", getDocumentId());
                prvsOcVo.setNamedWhereClauseParam("pSeafarerId", getSeafarerId());
                prvsOcVo.executeQuery();

                Row[] frRows = prvsOcVo.getFilteredRows("DocumentId", getDocumentPreviousId());

                if (frRows.length > 0 && frRows[0].getAttribute("CertificateNumber") != null) {
                    return frRows[0].getAttribute("CertificateNumber").toString();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String) getAttributeInternal(TRANSPREVIOUSOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPreviousOC.
     * @param value value to set the  TransPreviousOC
     */
    public void setTransPreviousOC(String value) {
        setAttributeInternal(TRANSPREVIOUSOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrderNo.
     * @return the TransOrderNo
     */
    public Integer getTransOCWorkOrderNo() 
    {
        try 
        {
            if (getAttributeInternal(TRANSOCWORKORDERNO) == null && getHeaderId() != null) {
                ViewObjectImpl ocOrdNoVo = getAm().getOrderNumberView1();
                ocOrdNoVo.setNamedWhereClauseParam("pHeaderId", getHeaderId());
                ocOrdNoVo.executeQuery();

                Row[] frRows = ocOrdNoVo.getAllRowsInRange();

                if (frRows.length > 0 && frRows[0].getAttribute("OrderNumber") != null) {
                    return (Integer) frRows[0].getAttribute("OrderNumber");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (Integer) getAttributeInternal(TRANSOCWORKORDERNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrderNo.
     * @param value value to set the  TransOrderNo
     */
    public void setTransOCWorkOrderNo(Integer value) {
        setAttributeInternal(TRANSOCWORKORDERNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOcAllGrades.
     * @return the TransOcAllGrades
     */
    public String getTransOcAllGrades()
    {
        if(getAttributeInternal(TRANSOCALLGRADES) == null && getGradeId() != null)
        {
            try 
            {
                ViewObjectImpl allGradesVo = getAm().getAllGradesView1();
                allGradesVo.setNamedWhereClauseParam("pGradeId", getGradeId());
                allGradesVo.executeQuery();

                Row[] frRows = allGradesVo.getAllRowsInRange();

                if (frRows.length > 0 && frRows[0].getAttribute("GradeCode") != null) {
                    return (String) frRows[0].getAttribute("GradeCode");
                }
            } catch (Exception e) {
                e.printStackTrace();
                AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching OC Grade." +
                                                 " Please contact your System Administrator." , 
                                                 "", FacesMessage.SEVERITY_ERROR); 
            }
        }
        return (String) getAttributeInternal(TRANSOCALLGRADES);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOcAllGrades.
     * @param value value to set the  TransOcAllGrades
     */
    public void setTransOcAllGrades(String value) {
        setAttributeInternal(TRANSOCALLGRADES, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OcDetailsCapacitiesVO.
     */
    public RowIterator getOcDetailsCapacitiesVO() {
        return (RowIterator) getAttributeInternal(OCDETAILSCAPACITIESVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OcDetailsFunctionsVO.
     */
    public RowIterator getOcDetailsFunctionsVO() {
        return (RowIterator) getAttributeInternal(OCDETAILSFUNCTIONSVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> StatusLOV1.
     */
    public RowSet getStatusLOV1() {
        return (RowSet) getAttributeInternal(STATUSLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CertificateTypeLOV1.
     */
    public RowSet getCertificateTypeLOV1() {
        return (RowSet) getAttributeInternal(CERTIFICATETYPELOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> IssueTypeLOV1.
     */
    public RowSet getIssueTypeLOV1() {
        return (RowSet) getAttributeInternal(ISSUETYPELOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> countriesLOV1.
     */
    public RowSet getcountriesLOV1() {
        return (RowSet) getAttributeInternal(COUNTRIESLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> viewGradeOcLOV1.
     */
    public RowSet getviewGradeOcLOV1() {
        return (RowSet) getAttributeInternal(VIEWGRADEOCLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PreviousOCLOV1.
     */
    public RowSet getPreviousOCLOV1() {
        return (RowSet) getAttributeInternal(PREVIOUSOCLOV1);
    }

    public RMITradeCompApprovalAppModuleImpl getAm()
    {
        return (RMITradeCompApprovalAppModuleImpl) this.getApplicationModule();
    }
}

