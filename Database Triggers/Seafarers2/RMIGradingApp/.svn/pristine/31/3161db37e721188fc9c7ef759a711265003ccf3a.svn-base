package com.rmi.tradecompapproval.servlets;

import java.io.IOException;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.OutputStream;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.naming.Context;
import javax.naming.InitialContext;

import javax.servlet.*;
import javax.servlet.http.*;

import javax.sql.DataSource;

public class PreviewDocument extends HttpServlet {
private static final String CONTENT_TYPE = "text/html; charset=UTF-8";

public void init(ServletConfig config) throws ServletException {
super.init(config);
}
    
    /**
     * @param request
     * @param response
     * @throws ServletException
     * @throws IOException
     */
    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException 
    {
        OutputStream os = null;
        InputStream inputStream = null;

        try 
        {
            String path = null; //(request.getParameter("path"));
            String edocId = (String) request.getParameter("path");
            String userId = null;

            System.out.println("edocId in servlet :: " + edocId);
            printTmpLogs("edocId in servlet :: " + edocId);

            if (edocId != null && edocId.trim().length() > 0) 
            {
                if(edocId.trim().equalsIgnoreCase("-1"))
                {
                    userId = (String) request.getParameter("id");
                    
                    System.out.println("userId in servlet :: "+userId);
                    printTmpLogs("userId in servlet :: "+userId);
                    
                    if(userId != null)
                        path = "/iridr/oracle_files/DR/seaf_doc/mergedfile_"+userId+".pdf";
                }
                else
                {
                    Connection conn = null;
                    Context ctx = new InitialContext();
                    DataSource ds = (DataSource) ctx.lookup("jdbc/apps_ds_seaf");
                    conn = ds.getConnection();
                    
                    PreparedStatement filePathPs =
                        conn.prepareStatement("select iri_edocs_pkg.get_edoc_file_name("+Integer.parseInt(edocId)+") path from dual");
                    
                    ResultSet filePathRs = filePathPs.executeQuery();
                    
                    while (filePathRs.next()) {
                        path = filePathRs.getString(1);
                    }
                }
                
                System.out.println("path in servlet :: "+path);
                printTmpLogs("path in servlet :: "+path);
                
                if(path != null && path.trim().length() > 0)
                {
                    os = response.getOutputStream();

                    File outputFile = new File(path);
                    inputStream = new FileInputStream(outputFile);
                    BufferedInputStream in = new BufferedInputStream(inputStream);
                    int b;
                    byte[] buffer = new byte[10240];
                    while ((b = in.read(buffer, 0, 10240)) != -1) {
                        os.write(buffer, 0, b);
                    }
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            //            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while previewing document." +
            //                                             " Please contact your System Administrator." ,
            //                                             "", FacesMessage.SEVERITY_ERROR);
        } finally {
            if (os != null) {
                os.close();
            }
            if (inputStream != null) {
                inputStream.close();
            }

        }
    }


    /**
     * Method inserts given logs into TMP_SEAFARER_LOGS table.
     * @param logDesc pass log description which you want to print.
     * @return String returns "Y"
     **/
    public void printTmpLogs(Object logDesc)
    {
        try 
        {
            if(logDesc != null)
            {
                Connection con = null;
                CallableStatement st = null;
                try {
                    Context ctx = new InitialContext();
                    DataSource ds = (DataSource) ctx.lookup("jdbc/apps_ds_seaf");
                    con = ds.getConnection();
                    st = con.prepareCall("call RMI_SICD_PUB.tmp_logs(?)");
                    st.setObject(1,logDesc.toString());
                    st.execute();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}