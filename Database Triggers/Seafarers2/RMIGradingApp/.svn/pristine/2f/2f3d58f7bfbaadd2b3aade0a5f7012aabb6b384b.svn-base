package com.rmi.tradecompapproval.adfbc.views;

import com.rmi.tradecompapproval.adfbc.services.RMITradeCompApprovalAppModuleImpl;
import com.rmi.tradecompapproval.adfbc.entities.RmiBatchImpl;

import com.rmi.tradecompapproval.adfbc.utils.AdfUtils;

import java.math.BigDecimal;

import java.sql.Timestamp;

import javax.faces.application.FacesMessage;

import oracle.adf.share.ADFContext;

import oracle.jbo.Row;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;

import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 11 13:09:54 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RmiBatchViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_VIEWBATCHEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BatchDate,
        BatchName,
        BatchResubmittedDate,
        BatchReturnedDate,
        BatchStatus,
        BatchSubmittedBy,
        BatchSubmittedDate,
        BillToCustAccountId,
        BillToOrgContactId,
        BillToSiteUseId,
        CreatedBy,
        CreationDate,
        DeliverToCustAccountId,
        DeliverToSiteUseId,
        EsiBatchId,
        ExpeditedProcessing,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        Notes,
        OeHeaderId,
        PurchaseOrderNumber,
        ShipToCustAccountId,
        ShipToOrgContactId,
        ShipToSiteUseId,
        VesselNames,
        tranCustAccountBillToName,
        tranBillToSuAddress,
        tranCustAccountShipToName,
        tranShipToSuAddress,
        tranCustAccountDeliverToName,
        tranDeliverToSuAddress,
        TransCurrentUserId,
        TransOrderHold,
        TransAgentEmailId,
        InvoiceAgentEmailId,
        WorkOrderDetailsRO,
        viewSeafarerVO,
        custAccountBilltoLOV1,
        custAccountShipToLOV1,
        custAccountDeliverToLOV1,
        custAccountBillToSuLOV1,
        custAccountDeliverToSuLOV1,
        custAccountShipToSuLOV1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return RmiBatchViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return RmiBatchViewRowImpl.AttributesEnum.firstIndex() +
                   RmiBatchViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = RmiBatchViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BATCHDATE = AttributesEnum.BatchDate.index();
    public static final int BATCHNAME = AttributesEnum.BatchName.index();
    public static final int BATCHRESUBMITTEDDATE = AttributesEnum.BatchResubmittedDate.index();
    public static final int BATCHRETURNEDDATE = AttributesEnum.BatchReturnedDate.index();
    public static final int BATCHSTATUS = AttributesEnum.BatchStatus.index();
    public static final int BATCHSUBMITTEDBY = AttributesEnum.BatchSubmittedBy.index();
    public static final int BATCHSUBMITTEDDATE = AttributesEnum.BatchSubmittedDate.index();
    public static final int BILLTOCUSTACCOUNTID = AttributesEnum.BillToCustAccountId.index();
    public static final int BILLTOORGCONTACTID = AttributesEnum.BillToOrgContactId.index();
    public static final int BILLTOSITEUSEID = AttributesEnum.BillToSiteUseId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int DELIVERTOCUSTACCOUNTID = AttributesEnum.DeliverToCustAccountId.index();
    public static final int DELIVERTOSITEUSEID = AttributesEnum.DeliverToSiteUseId.index();
    public static final int ESIBATCHID = AttributesEnum.EsiBatchId.index();
    public static final int EXPEDITEDPROCESSING = AttributesEnum.ExpeditedProcessing.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int OEHEADERID = AttributesEnum.OeHeaderId.index();
    public static final int PURCHASEORDERNUMBER = AttributesEnum.PurchaseOrderNumber.index();
    public static final int SHIPTOCUSTACCOUNTID = AttributesEnum.ShipToCustAccountId.index();
    public static final int SHIPTOORGCONTACTID = AttributesEnum.ShipToOrgContactId.index();
    public static final int SHIPTOSITEUSEID = AttributesEnum.ShipToSiteUseId.index();
    public static final int VESSELNAMES = AttributesEnum.VesselNames.index();
    public static final int TRANCUSTACCOUNTBILLTONAME = AttributesEnum.tranCustAccountBillToName.index();
    public static final int TRANBILLTOSUADDRESS = AttributesEnum.tranBillToSuAddress.index();
    public static final int TRANCUSTACCOUNTSHIPTONAME = AttributesEnum.tranCustAccountShipToName.index();
    public static final int TRANSHIPTOSUADDRESS = AttributesEnum.tranShipToSuAddress.index();
    public static final int TRANCUSTACCOUNTDELIVERTONAME = AttributesEnum.tranCustAccountDeliverToName.index();
    public static final int TRANDELIVERTOSUADDRESS = AttributesEnum.tranDeliverToSuAddress.index();
    public static final int TRANSCURRENTUSERID = AttributesEnum.TransCurrentUserId.index();
    public static final int TRANSORDERHOLD = AttributesEnum.TransOrderHold.index();
    public static final int TRANSAGENTEMAILID = AttributesEnum.TransAgentEmailId.index();
    public static final int INVOICEAGENTEMAILID = AttributesEnum.InvoiceAgentEmailId.index();
    public static final int WORKORDERDETAILSRO = AttributesEnum.WorkOrderDetailsRO.index();
    public static final int VIEWSEAFARERVO = AttributesEnum.viewSeafarerVO.index();
    public static final int CUSTACCOUNTBILLTOLOV1 = AttributesEnum.custAccountBilltoLOV1.index();
    public static final int CUSTACCOUNTSHIPTOLOV1 = AttributesEnum.custAccountShipToLOV1.index();
    public static final int CUSTACCOUNTDELIVERTOLOV1 = AttributesEnum.custAccountDeliverToLOV1.index();
    public static final int CUSTACCOUNTBILLTOSULOV1 = AttributesEnum.custAccountBillToSuLOV1.index();
    public static final int CUSTACCOUNTDELIVERTOSULOV1 = AttributesEnum.custAccountDeliverToSuLOV1.index();
    public static final int CUSTACCOUNTSHIPTOSULOV1 = AttributesEnum.custAccountShipToSuLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RmiBatchViewRowImpl() {
    }

    /**
     * Gets viewBatchEO entity object.
     * @return the viewBatchEO
     */
    public RmiBatchImpl getviewBatchEO() {
        return (RmiBatchImpl)getEntity(ENTITY_VIEWBATCHEO);
    }

    /**
     * Gets the attribute value for BATCH_DATE using the alias name BatchDate.
     * @return the BATCH_DATE
     */
    public Timestamp getBatchDate() {
        return (Timestamp)getAttributeInternal(BATCHDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_DATE using the alias name BatchDate.
     * @param value value to set the BATCH_DATE
     */
    public void setBatchDate(Timestamp value) {
        setAttributeInternal(BATCHDATE, value);
    }

    /**
     * Gets the attribute value for BATCH_NAME using the alias name BatchName.
     * @return the BATCH_NAME
     */
    public String getBatchName() {
        return (String)getAttributeInternal(BATCHNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_NAME using the alias name BatchName.
     * @param value value to set the BATCH_NAME
     */
    public void setBatchName(String value) {
        setAttributeInternal(BATCHNAME, value);
    }

    /**
     * Gets the attribute value for BATCH_RESUBMITTED_DATE using the alias name BatchResubmittedDate.
     * @return the BATCH_RESUBMITTED_DATE
     */
    public Timestamp getBatchResubmittedDate() {
        return (Timestamp)getAttributeInternal(BATCHRESUBMITTEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_RESUBMITTED_DATE using the alias name BatchResubmittedDate.
     * @param value value to set the BATCH_RESUBMITTED_DATE
     */
    public void setBatchResubmittedDate(Timestamp value) {
        setAttributeInternal(BATCHRESUBMITTEDDATE, value);
    }

    /**
     * Gets the attribute value for BATCH_RETURNED_DATE using the alias name BatchReturnedDate.
     * @return the BATCH_RETURNED_DATE
     */
    public Timestamp getBatchReturnedDate() {
        return (Timestamp)getAttributeInternal(BATCHRETURNEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_RETURNED_DATE using the alias name BatchReturnedDate.
     * @param value value to set the BATCH_RETURNED_DATE
     */
    public void setBatchReturnedDate(Timestamp value) {
        setAttributeInternal(BATCHRETURNEDDATE, value);
    }

    /**
     * Gets the attribute value for BATCH_STATUS using the alias name BatchStatus.
     * @return the BATCH_STATUS
     */
    public String getBatchStatus() {
        return (String)getAttributeInternal(BATCHSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_STATUS using the alias name BatchStatus.
     * @param value value to set the BATCH_STATUS
     */
    public void setBatchStatus(String value) {
        setAttributeInternal(BATCHSTATUS, value);
    }

    /**
     * Gets the attribute value for BATCH_SUBMITTED_BY using the alias name BatchSubmittedBy.
     * @return the BATCH_SUBMITTED_BY
     */
    public BigDecimal getBatchSubmittedBy() {
        return (BigDecimal)getAttributeInternal(BATCHSUBMITTEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_SUBMITTED_BY using the alias name BatchSubmittedBy.
     * @param value value to set the BATCH_SUBMITTED_BY
     */
    public void setBatchSubmittedBy(BigDecimal value) {
        setAttributeInternal(BATCHSUBMITTEDBY, value);
    }

    /**
     * Gets the attribute value for BATCH_SUBMITTED_DATE using the alias name BatchSubmittedDate.
     * @return the BATCH_SUBMITTED_DATE
     */
    public Timestamp getBatchSubmittedDate() {
        return (Timestamp)getAttributeInternal(BATCHSUBMITTEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for BATCH_SUBMITTED_DATE using the alias name BatchSubmittedDate.
     * @param value value to set the BATCH_SUBMITTED_DATE
     */
    public void setBatchSubmittedDate(Timestamp value) {
        setAttributeInternal(BATCHSUBMITTEDDATE, value);
    }

    /**
     * Gets the attribute value for BILL_TO_CUST_ACCOUNT_ID using the alias name BillToCustAccountId.
     * @return the BILL_TO_CUST_ACCOUNT_ID
     */
    public Integer getBillToCustAccountId() {
        return (Integer)getAttributeInternal(BILLTOCUSTACCOUNTID);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_TO_CUST_ACCOUNT_ID using the alias name BillToCustAccountId.
     * @param value value to set the BILL_TO_CUST_ACCOUNT_ID
     */
    public void setBillToCustAccountId(Integer value) {
        setAttributeInternal(BILLTOCUSTACCOUNTID, value);
    }

    /**
     * Gets the attribute value for BILL_TO_ORG_CONTACT_ID using the alias name BillToOrgContactId.
     * @return the BILL_TO_ORG_CONTACT_ID
     */
    public BigDecimal getBillToOrgContactId() {
        return (BigDecimal)getAttributeInternal(BILLTOORGCONTACTID);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_TO_ORG_CONTACT_ID using the alias name BillToOrgContactId.
     * @param value value to set the BILL_TO_ORG_CONTACT_ID
     */
    public void setBillToOrgContactId(BigDecimal value) {
        setAttributeInternal(BILLTOORGCONTACTID, value);
    }

    /**
     * Gets the attribute value for BILL_TO_SITE_USE_ID using the alias name BillToSiteUseId.
     * @return the BILL_TO_SITE_USE_ID
     */
    public Integer getBillToSiteUseId() {
        return (Integer)getAttributeInternal(BILLTOSITEUSEID);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_TO_SITE_USE_ID using the alias name BillToSiteUseId.
     * @param value value to set the BILL_TO_SITE_USE_ID
     */
    public void setBillToSiteUseId(Integer value) {
        setAttributeInternal(BILLTOSITEUSEID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Integer getCreatedBy() {
        return (Integer)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for DELIVER_TO_CUST_ACCOUNT_ID using the alias name DeliverToCustAccountId.
     * @return the DELIVER_TO_CUST_ACCOUNT_ID
     */
    public Integer getDeliverToCustAccountId() {
        return (Integer)getAttributeInternal(DELIVERTOCUSTACCOUNTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DELIVER_TO_CUST_ACCOUNT_ID using the alias name DeliverToCustAccountId.
     * @param value value to set the DELIVER_TO_CUST_ACCOUNT_ID
     */
    public void setDeliverToCustAccountId(Integer value) {
        setAttributeInternal(DELIVERTOCUSTACCOUNTID, value);
    }

    /**
     * Gets the attribute value for DELIVER_TO_SITE_USE_ID using the alias name DeliverToSiteUseId.
     * @return the DELIVER_TO_SITE_USE_ID
     */
    public Integer getDeliverToSiteUseId() {
        return (Integer)getAttributeInternal(DELIVERTOSITEUSEID);
    }

    /**
     * Sets <code>value</code> as attribute value for DELIVER_TO_SITE_USE_ID using the alias name DeliverToSiteUseId.
     * @param value value to set the DELIVER_TO_SITE_USE_ID
     */
    public void setDeliverToSiteUseId(Integer value) {
        setAttributeInternal(DELIVERTOSITEUSEID, value);
    }

    /**
     * Gets the attribute value for ESI_BATCH_ID using the alias name EsiBatchId.
     * @return the ESI_BATCH_ID
     */
    public Number getEsiBatchId() {
        return (Number)getAttributeInternal(ESIBATCHID);
    }

    /**
     * Sets <code>value</code> as attribute value for ESI_BATCH_ID using the alias name EsiBatchId.
     * @param value value to set the ESI_BATCH_ID
     */
    public void setEsiBatchId(Number value) {
        setAttributeInternal(ESIBATCHID, value);
    }

    /**
     * Gets the attribute value for EXPEDITED_PROCESSING using the alias name ExpeditedProcessing.
     * @return the EXPEDITED_PROCESSING
     */
    public String getExpeditedProcessing() {
        return (String)getAttributeInternal(EXPEDITEDPROCESSING);
    }

    /**
     * Sets <code>value</code> as attribute value for EXPEDITED_PROCESSING using the alias name ExpeditedProcessing.
     * @param value value to set the EXPEDITED_PROCESSING
     */
    public void setExpeditedProcessing(String value) {
        setAttributeInternal(EXPEDITEDPROCESSING, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public Integer getLastUpdateLogin() {
        return (Integer) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(Integer value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Integer getLastUpdatedBy() {
        return (Integer) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Integer value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for NOTES using the alias name Notes.
     * @return the NOTES
     */
    public String getNotes() {
        return (String)getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTES using the alias name Notes.
     * @param value value to set the NOTES
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * Gets the attribute value for OE_HEADER_ID using the alias name OeHeaderId.
     * @return the OE_HEADER_ID
     */
    public Integer getOeHeaderId() {
        return (Integer)getAttributeInternal(OEHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for OE_HEADER_ID using the alias name OeHeaderId.
     * @param value value to set the OE_HEADER_ID
     */
    public void setOeHeaderId(Integer value) {
        setAttributeInternal(OEHEADERID, value);
    }

    /**
     * Gets the attribute value for PURCHASE_ORDER_NUMBER using the alias name PurchaseOrderNumber.
     * @return the PURCHASE_ORDER_NUMBER
     */
    public String getPurchaseOrderNumber() {
        return (String)getAttributeInternal(PURCHASEORDERNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for PURCHASE_ORDER_NUMBER using the alias name PurchaseOrderNumber.
     * @param value value to set the PURCHASE_ORDER_NUMBER
     */
    public void setPurchaseOrderNumber(String value) {
        setAttributeInternal(PURCHASEORDERNUMBER, value);
    }

    /**
     * Gets the attribute value for SHIP_TO_CUST_ACCOUNT_ID using the alias name ShipToCustAccountId.
     * @return the SHIP_TO_CUST_ACCOUNT_ID
     */
    public Integer getShipToCustAccountId() {
        return (Integer)getAttributeInternal(SHIPTOCUSTACCOUNTID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_TO_CUST_ACCOUNT_ID using the alias name ShipToCustAccountId.
     * @param value value to set the SHIP_TO_CUST_ACCOUNT_ID
     */
    public void setShipToCustAccountId(Integer value) {
        setAttributeInternal(SHIPTOCUSTACCOUNTID, value);
    }

    /**
     * Gets the attribute value for SHIP_TO_ORG_CONTACT_ID using the alias name ShipToOrgContactId.
     * @return the SHIP_TO_ORG_CONTACT_ID
     */
    public BigDecimal getShipToOrgContactId() {
        return (BigDecimal)getAttributeInternal(SHIPTOORGCONTACTID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_TO_ORG_CONTACT_ID using the alias name ShipToOrgContactId.
     * @param value value to set the SHIP_TO_ORG_CONTACT_ID
     */
    public void setShipToOrgContactId(BigDecimal value) {
        setAttributeInternal(SHIPTOORGCONTACTID, value);
    }

    /**
     * Gets the attribute value for SHIP_TO_SITE_USE_ID using the alias name ShipToSiteUseId.
     * @return the SHIP_TO_SITE_USE_ID
     */
    public Integer getShipToSiteUseId() {
        return (Integer)getAttributeInternal(SHIPTOSITEUSEID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_TO_SITE_USE_ID using the alias name ShipToSiteUseId.
     * @param value value to set the SHIP_TO_SITE_USE_ID
     */
    public void setShipToSiteUseId(Integer value) {
        setAttributeInternal(SHIPTOSITEUSEID, value);
    }

    /**
     * Gets the attribute value for VESSEL_NAMES using the alias name VesselNames.
     * @return the VESSEL_NAMES
     */
    public String getVesselNames() {
        return (String)getAttributeInternal(VESSELNAMES);
    }

    /**
     * Sets <code>value</code> as attribute value for VESSEL_NAMES using the alias name VesselNames.
     * @param value value to set the VESSEL_NAMES
     */
    public void setVesselNames(String value) {
        setAttributeInternal(VESSELNAMES, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCustAccountBillToName.
     * @return the tranCustAccountBillToName
     */
    public String gettranCustAccountBillToName() 
    {
        try 
        {
            if (getAttributeInternal(TRANCUSTACCOUNTBILLTONAME) == null && getBillToCustAccountId() != null) {
                ViewObjectImpl customerVo = getAm().getAllCustomersView2();
                customerVo.setNamedWhereClauseParam("pCustAccId", getBillToCustAccountId());
                customerVo.executeQuery();
                
                Row[] customerRow = customerVo.getAllRowsInRange();
                
                if (customerRow.length > 0 && customerRow[0].getAttribute("PartyNameAcc") != null) {
                    return (customerRow[0].getAttribute("PartyNameAcc").toString());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String)getAttributeInternal(TRANCUSTACCOUNTBILLTONAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCustAccountBillToName.
     * @param value value to set the  tranCustAccountBillToName
     */
    public void settranCustAccountBillToName(String value) 
    {
        if(value != null)
        {
            setAttributeInternal(BILLTOSITEUSEID, null);
            setAttributeInternal(TRANBILLTOSUADDRESS, null);
        }
        setAttributeInternal(TRANCUSTACCOUNTBILLTONAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranBillToSuAddress.
     * @return the tranBillToSuAddress
     */
    public String gettranBillToSuAddress() {
        
        try 
        {
            Integer suId = null;
            String address = null;
            if (getBillToSiteUseId() != null) {
                suId = getBillToSiteUseId();
                Row[] suRows;
                suRows = getcustAccountBillToSuLOV1().getFilteredRows("SuId", suId);
                if (suRows.length > 0) {
                    address = suRows[0].getAttribute("Address").toString();
                }
                return address;

            } else {
                return (String) getAttributeInternal(TRANBILLTOSUADDRESS);
            }
        } catch (Exception e) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String)getAttributeInternal(TRANBILLTOSUADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranBillToSuAddress.
     * @param value value to set the  tranBillToSuAddress
     */
    public void settranBillToSuAddress(String value) {
        setAttributeInternal(TRANBILLTOSUADDRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCustAccountShipToName.
     * @return the tranCustAccountShipToName
     */
    public String gettranCustAccountShipToName()
    {
        try 
        {
            if (getAttributeInternal(TRANCUSTACCOUNTSHIPTONAME) == null && getShipToCustAccountId() != null) {
                ViewObjectImpl customerVo = getAm().getAllCustomersView2();
                customerVo.setNamedWhereClauseParam("pCustAccId", getShipToCustAccountId());
                customerVo.executeQuery();

                Row[] customerRow = customerVo.getAllRowsInRange();
                
                if (customerRow.length > 0 && customerRow[0].getAttribute("PartyNameAcc") != null) {
                    return (customerRow[0].getAttribute("PartyNameAcc").toString());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String)getAttributeInternal(TRANCUSTACCOUNTSHIPTONAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCustAccountShipToName.
     * @param value value to set the  tranCustAccountShipToName
     */
    public void settranCustAccountShipToName(String value) 
    {
        if(value != null)
        {
            setAttributeInternal(SHIPTOSITEUSEID, null);
            setAttributeInternal(TRANSHIPTOSUADDRESS, null);
        }
        setAttributeInternal(TRANCUSTACCOUNTSHIPTONAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranShipToSuAddress.
     * @return the tranShipToSuAddress
     */
    public String gettranShipToSuAddress() {
        try 
        {
            Integer suId = null;
            String address = null;
            if (getShipToSiteUseId() != null) {
                suId = getShipToSiteUseId();
                Row[] suRows;
                suRows = getcustAccountShipToSuLOV1().getFilteredRows("SuId", suId);
                if (suRows.length > 0) {
                    address = suRows[0].getAttribute("Address").toString();
                }
                return address;

            } else {
                return (String) getAttributeInternal(TRANSHIPTOSUADDRESS);
            }
        } catch (Exception e) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        
        return (String)getAttributeInternal(TRANSHIPTOSUADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranShipToSuAddress.
     * @param value value to set the  tranShipToSuAddress
     */
    public void settranShipToSuAddress(String value) {
        setAttributeInternal(TRANSHIPTOSUADDRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCustAccountDeliverToName.
     * @return the tranCustAccountDeliverToName
     */
    public String gettranCustAccountDeliverToName() 
    {
        try 
        {
            if (getAttributeInternal(TRANCUSTACCOUNTDELIVERTONAME) == null && getCreatedBy() != null) {
                ViewObjectImpl customerVo = getAm().getCustAccountDeliverToView1();
                customerVo.setNamedWhereClauseParam("pUserId", getCreatedBy());
                customerVo.setNamedWhereClauseParam("pCustAccId", getDeliverToCustAccountId());
                customerVo.executeQuery();

                Row[] customerRow = customerVo.getAllRowsInRange();
                if (customerRow.length > 0 && customerRow[0].getAttribute("PartyNameAcc") != null) {
                    return (customerRow[0].getAttribute("PartyNameAcc").toString());
                }
            }
        } catch (Exception e) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String)getAttributeInternal(TRANCUSTACCOUNTDELIVERTONAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCustAccountDeliverToName.
     * @param value value to set the  tranCustAccountDeliverToName
     */
    public void settranCustAccountDeliverToName(String value)
    {
        if(value != null)
        {
            setAttributeInternal(DELIVERTOSITEUSEID, null);
            setAttributeInternal(TRANDELIVERTOSUADDRESS, null);
            
            setAttributeInternal(TRANCUSTACCOUNTBILLTONAME, null);            
            setAttributeInternal(BILLTOCUSTACCOUNTID, null);         
            setAttributeInternal(TRANBILLTOSUADDRESS, null);         
            setAttributeInternal(BILLTOSITEUSEID, null);
            
            setAttributeInternal(TRANCUSTACCOUNTSHIPTONAME, null);            
            setAttributeInternal(SHIPTOCUSTACCOUNTID, null);         
            setAttributeInternal(TRANSHIPTOSUADDRESS, null);         
            setAttributeInternal(SHIPTOSITEUSEID, null);
        }
        setAttributeInternal(TRANCUSTACCOUNTDELIVERTONAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranDeliverToSuAddress.
     * @return the tranDeliverToSuAddress
     */
    public String gettranDeliverToSuAddress()
    {
        try 
        {
            Integer suId = null;
            String address = null;
            if (getDeliverToSiteUseId() != null) {
                suId = getDeliverToSiteUseId();
                Row[] suRows;
                suRows = getcustAccountDeliverToSuLOV1().getFilteredRows("SuId", suId);
                if (suRows.length > 0) {
                    address = suRows[0].getAttribute("Address").toString();
                }
                return address;
            } else {
                return (String) getAttributeInternal(TRANDELIVERTOSUADDRESS);
            }
        } catch (Exception e) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String)getAttributeInternal(TRANDELIVERTOSUADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranDeliverToSuAddress.
     * @param value value to set the  tranDeliverToSuAddress
     */
    public void settranDeliverToSuAddress(String value) {
        setAttributeInternal(TRANDELIVERTOSUADDRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrentUserId.
     * @return the TransCurrentUserId
     */
    public Integer getTransCurrentUserId()
    {
        return getUserId();
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrentUserId.
     * @param value value to set the  TransCurrentUserId
     */
    public void setTransCurrentUserId(Integer value) {
        setAttributeInternal(TRANSCURRENTUSERID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransOrderHold.
     * @return the TransOrderHold
     */
    public String getTransOrderHold() 
    {
        try 
        {
            if (getAttributeInternal(TRANSORDERHOLD) == null && getOeHeaderId() != null) {
                ViewObjectImpl holdVo = getAm().getOrderHoldFlagView1();
                holdVo.setNamedWhereClauseParam("pHeaderId", getOeHeaderId());
                holdVo.executeQuery();

                Row[] holdRow = holdVo.getAllRowsInRange();

                if (holdRow.length > 0 && holdRow[0].getAttribute("OrderHoldFlag") != null)
                    return holdRow[0].getAttribute("OrderHoldFlag").toString();
                else
                    return "N";
            }
        } catch (Exception e) {
             e.printStackTrace();
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching Order Hold." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR); 
        }
        return (String) getAttributeInternal(TRANSORDERHOLD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrderHold.
     * @param value value to set the  TransOrderHold
     */
    public void setTransOrderHold(String value) {
        setAttributeInternal(TRANSORDERHOLD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAgentEmailId.
     * @return the TransAgentEmailId
     */
    public String getTransAgentEmailId() 
    {
        if(getAttributeInternal(TRANSAGENTEMAILID) == null && getEsiBatchId() != null)
        {
            ViewObjectImpl batchDtlVo = getAm().getRmiBatchDetailsView1();
            batchDtlVo.setNamedWhereClauseParam("pEsiBatchId", getEsiBatchId());
            batchDtlVo.executeQuery();            
            
            Row[] batchRows = batchDtlVo.getAllRowsInRange(); 
            
            System.out.println("pEsiBatchId :: "+getEsiBatchId());            
            System.out.println("batchRows.length :: "+batchRows.length);                       
            
            if(batchRows.length > 0 && batchRows[0].getAttribute("OrderingAgentEmailId") != null)
            {
                System.out.println("OrderingAgentEmailId :: "+batchRows[0].getAttribute("OrderingAgentEmailId"));
                return batchRows[0].getAttribute("OrderingAgentEmailId").toString();
            }
        }
        
        return (String) getAttributeInternal(TRANSAGENTEMAILID);
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAgentEmailId.
     * @param value value to set the  TransAgentEmailId
     */
    public void setTransAgentEmailId(String value) {
        setAttributeInternal(TRANSAGENTEMAILID, value);
    }

    /**
     * Gets the attribute value for INVOICE_AGENT_EMAIL_ID using the alias name InvoiceAgentEmailId.
     * @return the INVOICE_AGENT_EMAIL_ID
     */
    public String getInvoiceAgentEmailId() {
        return (String) getAttributeInternal(INVOICEAGENTEMAILID);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOICE_AGENT_EMAIL_ID using the alias name InvoiceAgentEmailId.
     * @param value value to set the INVOICE_AGENT_EMAIL_ID
     */
    public void setInvoiceAgentEmailId(String value) {
        setAttributeInternal(INVOICEAGENTEMAILID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link WorkOrderDetailsRO.
     */
    public RowIterator getWorkOrderDetailsRO() {
        return (RowIterator)getAttributeInternal(WORKORDERDETAILSRO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link viewSeafarerVO.
     */
    public RowIterator getviewSeafarerVO() {
        return (RowIterator)getAttributeInternal(VIEWSEAFARERVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> custAccountBilltoLOV1.
     */
    public RowSet getcustAccountBilltoLOV1() {
        return (RowSet)getAttributeInternal(CUSTACCOUNTBILLTOLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> custAccountShipToLOV1.
     */
    public RowSet getcustAccountShipToLOV1() {
        return (RowSet)getAttributeInternal(CUSTACCOUNTSHIPTOLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> custAccountDeliverToLOV1.
     */
    public RowSet getcustAccountDeliverToLOV1() {
        return (RowSet)getAttributeInternal(CUSTACCOUNTDELIVERTOLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> custAccountBillToSuLOV1.
     */
    public RowSet getcustAccountBillToSuLOV1() {
        return (RowSet)getAttributeInternal(CUSTACCOUNTBILLTOSULOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> custAccountDeliverToSuLOV1.
     */
    public RowSet getcustAccountDeliverToSuLOV1() {
        return (RowSet)getAttributeInternal(CUSTACCOUNTDELIVERTOSULOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> custAccountShipToSuLOV1.
     */
    public RowSet getcustAccountShipToSuLOV1() {
        return (RowSet)getAttributeInternal(CUSTACCOUNTSHIPTOSULOV1);
    }
    
    public RMITradeCompApprovalAppModuleImpl getAm()
    {
        return (RMITradeCompApprovalAppModuleImpl) this.getApplicationModule();
    }
    
    /**
     * Method fetches user Id of the login user from session.
     * @return Integer returns user of the login user.
     **/
    public Integer getUserId() 
    {
        try 
        {
            Object usrId = ADFContext.getCurrent().getSessionScope().get("UserId");
            return (Integer.parseInt(usrId != null ? usrId.toString() : "10245"));
            
        } catch (Exception nfe) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching user Id." +
                                             " Please contact your System Administrator." , 
                                             "", FacesMessage.SEVERITY_ERROR);
        }
        return -1;
    }
}

