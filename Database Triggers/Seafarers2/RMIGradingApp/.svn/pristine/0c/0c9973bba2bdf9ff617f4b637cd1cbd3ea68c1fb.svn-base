package com.rmi.tradecompapproval.adfbc.services.common;

import oracle.jbo.ApplicationModule;
import oracle.jbo.domain.Date;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 20 13:34:15 IST 2019
// ---------------------------------------------------------------------
public interface RMITradeCompApprovalAppModule extends ApplicationModule {

    String getlinkforTaskAssignmentpage();

    void editBatch(Integer batch_id);


    String validateSeafarerFromProc();

    void filterValidateSeafarerVO();

    void filterOcVerification(String filterType);

    void setDefaultValuesOnCreate(String documentType);

    void setEmailNotificationDetails();

    void setEmailNotificationWaiting();


    String getCocFileName(String colType, String docType);

    String updateDocVerifiedStatus(String docType);


    String sendEmailNotification(String docType);

    void approveSeafarer();

    void filterSearchSeafarerVO();

    void filterUseSeafarerVO();

    String cancelSeafarerNotFound();

    void unselectOtherSeafarers();

    String filterValuesCheck();

    void resetOrderFilter();

    void searchOrder();

    void resetSearchEditSeafarers();

    void searchEditSeafarers();

    void filterEditDocumentsVO();

    void processTC();

    void approveCRA(String docid, String esiID);


    void sendmail();

    String callProcedure();

    String approveSeafarerByEval();


    void cancelbatch();

    String getCurrentBatchName();

    String getCurrentWoNumber();

    String sendOcForVerification();

    void addOcLine();

    void saveocline();

    void filterOrdersVerification(String filterType);

    void filterSeafarersDetails();

    void filterBatchSeafarersDetails();

    String validateApproveSeafarer();

    String validateHoldSeafarer();

    void updateIssueType();

    String updateDocVerifiedStatusManually(String docType);

    String approveOrder();

    String validateApproveOrder();

    void filterProcessBook();

    String assignBookNumbers();

    String updateBookNumbers();

    void filterAssignBook();

    String genMergedSupportingDocs();

    String getMergedFileName();

    String processOrder();

    String printOrder();

    void filterValidateSeafarerVoOnLoad(Integer seafarerId);

    String checkSendToAssignBook();

    String checkSendToEval();

    String checkSendToQa();

    String releaseOrderHold();

    String updateLineItem();

    String updateSeafarerDocsDetails(Integer batchId);

    void filterDocumentsHistory(String docCode);

    void processEVAL(String retVal);

    String sendToAssignBookNumber(String retVal);

    void sentToEval(String retVal);


    void refreshViews();

    String genDataPrivacyConsent();

    String genMergedAllSupportingDocs();

    String isSeafarerDisabled();

    void sentToTcProcessor(String retVal);

    String genAdditionalDocs();

    String sendDeficientDocumentNotification();

    String checkSendToMtc();

    String validateSeafarersDeficientDocument();

    String validateSeafarerLegalReview();

    String validateLegalNotes();

    String sendDeficientDocumentNotificationQa();

    String validateVerifySeafarerData();

    String verifySeafarerData();

    String printSearchOrder();

    String printSeafarerDocument();

    String resetOrderPrintStatus(String resetFor);

    String sendToShipping(String retVal);

    String rejectCra();

    void copySelectedReasons(String copyFor);

    void resetSelectedReasons();

    void callProcessOrderHeader();

    void imoValueChange(Integer imo);

    void offValueChange(Integer off);

    String validateSendAcknowledgement();

    void sendAcknowledgement();

    void filterOrderHeaderHolds();


    String checkSendToShipping();

    String validateExpDate(Date endDate);


    void addSqcLine();

    void saveSqcLine();

    String resetOrderPrintStatusSicd(String resetFor);

    void refreshSicdOcSqcViews();

    String uploadPhoto(String param1, String param2, String param3, String fileName, String rejected);

    String validateDuplicateOcCapacity(String capacityName);

    String validateDuplicateOcFunction(String functionName);

    String resetDocumentPrintStatus(String resetFor, String docType);

    void filterSelectedOrder();

    String findOrdersWithParams();

    String resetAssignBookOrderPrintStatus(String resetFor);

    String printSeafarerIndividualDocument(String printFor, String docType);

    String updateSeafarerBasicInfo();

    String validateOrderPrint();

    String[] fetchVerifyOnlineUrl(String docType);

    String uploadRmiCocDocument(String param1, String param2, String param3, String fileName, String docType);

    void createDocumentPreviewFolderWithPerms(String folderPath);

    void refreshApplyHold();

    void applyHold();


    String updateApplicationStatus();


    void fetchOrderHoldDetails();

    String createBatchVetting(Integer seafarerId);

    String updateVerificationStatus();

    void applyLineHold();

    String releaseLineHold();

    void refreshSearchOrder();

    void approveAllDocsCerts(String value);

    void verifyAllDocsCerts(String value);

    void fetchAbnOrderHoldDetails();

    void fetchSearchOrderHoldDetails();

    void setGenericTcParameters(String calledFrom);

    String cancelLineOnSearchOrder(String reason);

    String fetchSelectedSeafarerStatus();

    String updateSeafarerDocStatus(String seafarerStatus);

    void filterSeafarerShortText();

    String updateSeafarerShortText();

    String createNewBookLine();

    String updateIssueTypeManually(String updateFor);

    String updateSeafarerId();

    void additionalFilterSearch();

    void additionalFilterReset();

    String countSeafarerSelected();

    String updateSeafarerPhoto(Integer edocId, Integer seafarerId);
}

