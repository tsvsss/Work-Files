package com.rmi.shippartialorder.adfbc.views;

import com.rmi.shippartialorder.adfbc.utils.AdfUtils;

import javax.faces.application.FacesMessage;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 01 14:03:00 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BatchIfaceViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_BATCHIFACE = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BillToCustAccountId,
        BillToSiteUseId,
        DeliverToCustAccountId,
        DeliverToSiteUseId,
        ShipToCustAccountId,
        ShipToSiteUseId,
        EsiBatchId,
        tranBillToCustAccountName,
        tranDeliverToCustAccountName,
        tranShipToCustAccountName,
        tranBillToSuAddress,
        tranDeliverToSuAddress,
        tranShipToSuAddress,
        CreatedBy,
        Notes,
        VesselNames,
        InvoiceAgentEmailId,
        DeliverToCustAccountView1,
        BillToCustAccountView1,
        ShipToCustAccountView1,
        CustAccountDeliverToSuView1,
        CustAccountBillToSuView1,
        CustAccountShipToSuView1,
        CustNameByIdView1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BILLTOCUSTACCOUNTID = AttributesEnum.BillToCustAccountId.index();
    public static final int BILLTOSITEUSEID = AttributesEnum.BillToSiteUseId.index();
    public static final int DELIVERTOCUSTACCOUNTID = AttributesEnum.DeliverToCustAccountId.index();
    public static final int DELIVERTOSITEUSEID = AttributesEnum.DeliverToSiteUseId.index();
    public static final int SHIPTOCUSTACCOUNTID = AttributesEnum.ShipToCustAccountId.index();
    public static final int SHIPTOSITEUSEID = AttributesEnum.ShipToSiteUseId.index();
    public static final int ESIBATCHID = AttributesEnum.EsiBatchId.index();
    public static final int TRANBILLTOCUSTACCOUNTNAME = AttributesEnum.tranBillToCustAccountName.index();
    public static final int TRANDELIVERTOCUSTACCOUNTNAME = AttributesEnum.tranDeliverToCustAccountName.index();
    public static final int TRANSHIPTOCUSTACCOUNTNAME = AttributesEnum.tranShipToCustAccountName.index();
    public static final int TRANBILLTOSUADDRESS = AttributesEnum.tranBillToSuAddress.index();
    public static final int TRANDELIVERTOSUADDRESS = AttributesEnum.tranDeliverToSuAddress.index();
    public static final int TRANSHIPTOSUADDRESS = AttributesEnum.tranShipToSuAddress.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int VESSELNAMES = AttributesEnum.VesselNames.index();
    public static final int INVOICEAGENTEMAILID = AttributesEnum.InvoiceAgentEmailId.index();
    public static final int DELIVERTOCUSTACCOUNTVIEW1 = AttributesEnum.DeliverToCustAccountView1.index();
    public static final int BILLTOCUSTACCOUNTVIEW1 = AttributesEnum.BillToCustAccountView1.index();
    public static final int SHIPTOCUSTACCOUNTVIEW1 = AttributesEnum.ShipToCustAccountView1.index();
    public static final int CUSTACCOUNTDELIVERTOSUVIEW1 = AttributesEnum.CustAccountDeliverToSuView1.index();
    public static final int CUSTACCOUNTBILLTOSUVIEW1 = AttributesEnum.CustAccountBillToSuView1.index();
    public static final int CUSTACCOUNTSHIPTOSUVIEW1 = AttributesEnum.CustAccountShipToSuView1.index();
    public static final int CUSTNAMEBYIDVIEW1 = AttributesEnum.CustNameByIdView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BatchIfaceViewRowImpl() {
    }

    /**
     * Gets BatchIface entity object.
     * @return the BatchIface
     */
    public EntityImpl getBatchIface() {
        return (EntityImpl) getEntity(ENTITY_BATCHIFACE);
    }

    /**
     * Gets the attribute value for BILL_TO_CUST_ACCOUNT_ID using the alias name BillToCustAccountId.
     * @return the BILL_TO_CUST_ACCOUNT_ID
     */
    public Integer getBillToCustAccountId() {
        return (Integer) getAttributeInternal(BILLTOCUSTACCOUNTID);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_TO_CUST_ACCOUNT_ID using the alias name BillToCustAccountId.
     * @param value value to set the BILL_TO_CUST_ACCOUNT_ID
     */
    public void setBillToCustAccountId(Integer value) {
        setAttributeInternal(BILLTOCUSTACCOUNTID, value);
    }

    /**
     * Gets the attribute value for BILL_TO_SITE_USE_ID using the alias name BillToSiteUseId.
     * @return the BILL_TO_SITE_USE_ID
     */
    public Integer getBillToSiteUseId() {
        return (Integer) getAttributeInternal(BILLTOSITEUSEID);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_TO_SITE_USE_ID using the alias name BillToSiteUseId.
     * @param value value to set the BILL_TO_SITE_USE_ID
     */
    public void setBillToSiteUseId(Integer value) {
        setAttributeInternal(BILLTOSITEUSEID, value);
    }

    /**
     * Gets the attribute value for DELIVER_TO_CUST_ACCOUNT_ID using the alias name DeliverToCustAccountId.
     * @return the DELIVER_TO_CUST_ACCOUNT_ID
     */
    public Integer getDeliverToCustAccountId() {
        return (Integer) getAttributeInternal(DELIVERTOCUSTACCOUNTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DELIVER_TO_CUST_ACCOUNT_ID using the alias name DeliverToCustAccountId.
     * @param value value to set the DELIVER_TO_CUST_ACCOUNT_ID
     */
    public void setDeliverToCustAccountId(Integer value) {
        setAttributeInternal(DELIVERTOCUSTACCOUNTID, value);
    }

    /**
     * Gets the attribute value for DELIVER_TO_SITE_USE_ID using the alias name DeliverToSiteUseId.
     * @return the DELIVER_TO_SITE_USE_ID
     */
    public Integer getDeliverToSiteUseId() {
        return (Integer) getAttributeInternal(DELIVERTOSITEUSEID);
    }

    /**
     * Sets <code>value</code> as attribute value for DELIVER_TO_SITE_USE_ID using the alias name DeliverToSiteUseId.
     * @param value value to set the DELIVER_TO_SITE_USE_ID
     */
    public void setDeliverToSiteUseId(Integer value) {
        setAttributeInternal(DELIVERTOSITEUSEID, value);
    }

    /**
     * Gets the attribute value for SHIP_TO_CUST_ACCOUNT_ID using the alias name ShipToCustAccountId.
     * @return the SHIP_TO_CUST_ACCOUNT_ID
     */
    public Integer getShipToCustAccountId() {
        return (Integer) getAttributeInternal(SHIPTOCUSTACCOUNTID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_TO_CUST_ACCOUNT_ID using the alias name ShipToCustAccountId.
     * @param value value to set the SHIP_TO_CUST_ACCOUNT_ID
     */
    public void setShipToCustAccountId(Integer value) {
        setAttributeInternal(SHIPTOCUSTACCOUNTID, value);
    }

    /**
     * Gets the attribute value for SHIP_TO_SITE_USE_ID using the alias name ShipToSiteUseId.
     * @return the SHIP_TO_SITE_USE_ID
     */
    public Integer getShipToSiteUseId() {
        return (Integer) getAttributeInternal(SHIPTOSITEUSEID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_TO_SITE_USE_ID using the alias name ShipToSiteUseId.
     * @param value value to set the SHIP_TO_SITE_USE_ID
     */
    public void setShipToSiteUseId(Integer value) {
        setAttributeInternal(SHIPTOSITEUSEID, value);
    }

    /**
     * Gets the attribute value for ESI_BATCH_ID using the alias name EsiBatchId.
     * @return the ESI_BATCH_ID
     */
    public Integer getEsiBatchId() {
        return (Integer) getAttributeInternal(ESIBATCHID);
    }

    /**
     * Sets <code>value</code> as attribute value for ESI_BATCH_ID using the alias name EsiBatchId.
     * @param value value to set the ESI_BATCH_ID
     */
    public void setEsiBatchId(Integer value) {
        setAttributeInternal(ESIBATCHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranBillToCustAccountName.
     * @return the tranBillToCustAccountName
     */
    public String gettranBillToCustAccountName() {
        try {
            Integer custAccountId = null;
            String custAccountName = null;
            if (getBillToCustAccountId() != null) {
                custAccountId = getBillToCustAccountId();
                //                Row [] suRows;
                //                suRows = getCustAccountBilltoLOV1().getFilteredRows("CustAccountId", custAccountId);
                //                if(suRows.length > 0)
                //                {
                //                   custAccountName = suRows[0].getAttribute("PartyName").toString();
                //
                //                    }
                RowSet accNameByIdLOV1 = getCustNameByIdView1();
                accNameByIdLOV1.setNamedWhereClauseParam("pCustAccountId", custAccountId);
                accNameByIdLOV1.executeQuery();
                if (accNameByIdLOV1.getRowCount() > 0) {
                    Row frow = accNameByIdLOV1.first();
                    custAccountName = frow.getAttribute("PartyNameAccount").toString();
                }
                return custAccountName;
            } else {
                return (String) getAttributeInternal(TRANBILLTOCUSTACCOUNTNAME);
            }
        } catch (Exception e) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             "Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR);        }
        return (String) getAttributeInternal(TRANBILLTOCUSTACCOUNTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranBillToCustAccountName.
     * @param value value to set the  tranBillToCustAccountName
     */
    public void settranBillToCustAccountName(String value) {
        setAttributeInternal(TRANBILLTOCUSTACCOUNTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranDeliverToCustAccountName.
     * @return the tranDeliverToCustAccountName
     */
    public String gettranDeliverToCustAccountName() {
        try {
            Integer custAccountId = null;
            String custAccountName = null;
            if (getDeliverToCustAccountId() != null) {
                custAccountId = getDeliverToCustAccountId();
                //               Row [] suRows;
                //               suRows = getCustAccountDeliverToLOV1().getFilteredRows("CustAccountId", custAccountId);
                //               if(suRows.length > 0)
                //               {
                //                  custAccountName = suRows[0].getAttribute("PartyName").toString();
                //
                //                   }
                RowSet accNameByIdLOV1 = getCustNameByIdView1();
                accNameByIdLOV1.setNamedWhereClauseParam("pCustAccountId", custAccountId);
                accNameByIdLOV1.executeQuery();
                if (accNameByIdLOV1.getRowCount() > 0) {
                    Row frow = accNameByIdLOV1.first();
                    custAccountName = frow.getAttribute("PartyNameAccount").toString();
                }
                return custAccountName;
            } else {
                return (String) getAttributeInternal(TRANDELIVERTOCUSTACCOUNTNAME);
            }
        } catch (Exception e) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             "Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANDELIVERTOCUSTACCOUNTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranDeliverToCustAccountName.
     * @param value value to set the  tranDeliverToCustAccountName
     */
    public void settranDeliverToCustAccountName(String value) {
        setAttributeInternal(TRANDELIVERTOCUSTACCOUNTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranShipToCustAccountName.
     * @return the tranShipToCustAccountName
     */
    public String gettranShipToCustAccountName() {
        try {
            Integer custAccountId = null;
            String custAccountName = null;
            if (getShipToCustAccountId() != null) {
                custAccountId = getShipToCustAccountId();
                //                Row [] suRows;
                //                suRows = getCustAccountShipToLOV1().getFilteredRows("CustAccountId", custAccountId);
                //                if(suRows.length > 0)
                //                {
                //                   custAccountName = suRows[0].getAttribute("PartyName").toString();
                //
                //                    }
                RowSet accNameByIdLOV1 = getCustNameByIdView1();
                accNameByIdLOV1.setNamedWhereClauseParam("pCustAccountId", custAccountId);
                accNameByIdLOV1.executeQuery();
                if (accNameByIdLOV1.getRowCount() > 0) {
                    Row frow = accNameByIdLOV1.first();
                    custAccountName = frow.getAttribute("PartyNameAccount").toString();
                }
                return custAccountName;
            } else {
                return (String) getAttributeInternal(TRANSHIPTOCUSTACCOUNTNAME);
            }
        } catch (Exception e) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             "Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANSHIPTOCUSTACCOUNTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranShipToCustAccountName.
     * @param value value to set the  tranShipToCustAccountName
     */
    public void settranShipToCustAccountName(String value) {
        setAttributeInternal(TRANSHIPTOCUSTACCOUNTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranBillToSuAddress.
     * @return the tranBillToSuAddress
     */
    public String gettranBillToSuAddress() {
        try {
            Integer suId = null;
            String address = null;
            if (getBillToSiteUseId() != null) {
                suId = getBillToSiteUseId();
                Row[] suRows;
                suRows = getCustAccountBillToSuView1().getFilteredRows("SuId", suId);
                if (suRows.length > 0) {
                    address = suRows[0].getAttribute("Address").toString();

                }
                return address;

            } else {
                return (String) getAttributeInternal(TRANBILLTOSUADDRESS);
            }
        } catch (Exception e) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             "Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANBILLTOSUADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranBillToSuAddress.
     * @param value value to set the  tranBillToSuAddress
     */
    public void settranBillToSuAddress(String value) {
        setAttributeInternal(TRANBILLTOSUADDRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranDeliverToSuAddress.
     * @return the tranDeliverToSuAddress
     */
    public String gettranDeliverToSuAddress() {
        try {
            Integer suId = null;
            String address = null;
//            System.out.println(getDeliverToSiteUseId()+"-----delivertosuaddress");
            if (getDeliverToSiteUseId() != null) {
                suId = getDeliverToSiteUseId();
                Row[] suRows;
//                System.out.println(getCustAccountDeliverToSuView1().getRowCount()+"----22");
                suRows = getCustAccountDeliverToSuView1().getFilteredRows("SuId", suId);
//                System.out.println(suRows.length+"------length");
                if (suRows.length > 0) {
                    address = suRows[0].getAttribute("Address").toString();
//System.out.println(address+"----address");
                }
                return address;

            } else {
                return (String) getAttributeInternal(TRANDELIVERTOSUADDRESS);
            }
        } catch (Exception e) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             "Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANDELIVERTOSUADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranDeliverToSuAddress.
     * @param value value to set the  tranDeliverToSuAddress
     */
    public void settranDeliverToSuAddress(String value) {
        setAttributeInternal(TRANDELIVERTOSUADDRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranShipToSuAddress.
     * @return the tranShipToSuAddress
     */
    public String gettranShipToSuAddress() {
        try {
            Integer suId = null;
            String address = null;
            if (getShipToSiteUseId() != null) {
                suId = getShipToSiteUseId();
                Row[] suRows;
                suRows = getCustAccountShipToSuView1().getFilteredRows("SuId", suId);
                if (suRows.length > 0) {
                    address = suRows[0].getAttribute("Address").toString();

                }
                return address;

            } else {
                return (String) getAttributeInternal(TRANSHIPTOSUADDRESS);
            }
        } catch (Exception e) {
            AdfUtils.addFormattedFacesErrorMessage("System encountered an exception while fetching data." +
             "Please contact your System Administrator." , 
             "", FacesMessage.SEVERITY_ERROR);
        }
        return (String) getAttributeInternal(TRANSHIPTOSUADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranShipToSuAddress.
     * @param value value to set the  tranShipToSuAddress
     */
    public void settranShipToSuAddress(String value) {
        setAttributeInternal(TRANSHIPTOSUADDRESS, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for NOTES using the alias name Notes.
     * @return the NOTES
     */
    public String getNotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTES using the alias name Notes.
     * @param value value to set the NOTES
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * Gets the attribute value for VESSEL_NAMES using the alias name VesselNames.
     * @return the VESSEL_NAMES
     */
    public String getVesselNames() {
        return (String) getAttributeInternal(VESSELNAMES);
    }

    /**
     * Sets <code>value</code> as attribute value for VESSEL_NAMES using the alias name VesselNames.
     * @param value value to set the VESSEL_NAMES
     */
    public void setVesselNames(String value) {
        setAttributeInternal(VESSELNAMES, value);
    }

    /**
     * Gets the attribute value for INVOICE_AGENT_EMAIL_ID using the alias name InvoiceAgentEmailId.
     * @return the INVOICE_AGENT_EMAIL_ID
     */
    public String getInvoiceAgentEmailId() {
        return (String) getAttributeInternal(INVOICEAGENTEMAILID);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOICE_AGENT_EMAIL_ID using the alias name InvoiceAgentEmailId.
     * @param value value to set the INVOICE_AGENT_EMAIL_ID
     */
    public void setInvoiceAgentEmailId(String value) {
        setAttributeInternal(INVOICEAGENTEMAILID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DeliverToCustAccountView1.
     */
    public RowSet getDeliverToCustAccountView1() {
        return (RowSet) getAttributeInternal(DELIVERTOCUSTACCOUNTVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> BillToCustAccountView1.
     */
    public RowSet getBillToCustAccountView1() {
        return (RowSet) getAttributeInternal(BILLTOCUSTACCOUNTVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ShipToCustAccountView1.
     */
    public RowSet getShipToCustAccountView1() {
        return (RowSet) getAttributeInternal(SHIPTOCUSTACCOUNTVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountDeliverToSuView1.
     */
    public RowSet getCustAccountDeliverToSuView1() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTDELIVERTOSUVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountBillToSuView1.
     */
    public RowSet getCustAccountBillToSuView1() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTBILLTOSUVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustAccountShipToSuView1.
     */
    public RowSet getCustAccountShipToSuView1() {
        return (RowSet) getAttributeInternal(CUSTACCOUNTSHIPTOSUVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustNameByIdView1.
     */
    public RowSet getCustNameByIdView1() {
        return (RowSet) getAttributeInternal(CUSTNAMEBYIDVIEW1);
    }
}

