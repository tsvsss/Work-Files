package com.rmi.applicationEntry.adfbc.entities;

import com.rmi.applicationEntry.adfbc.extensions.CustomEntity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 01 15:27:50 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VsslInspCommImpl extends CustomEntity {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CommId,
        HeaderId,
        SentTo,
        Cc,
        Regarding,
        Message,
        LastUpdateDate,
        LastUpdatedBy,
        CreationDate,
        CreatedBy,
        LastUpdateLogin,
        VesselPk,
        EmailFrom,
        EmailSentBy,
        EmailSentDate;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COMMID = AttributesEnum.CommId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int SENTTO = AttributesEnum.SentTo.index();
    public static final int CC = AttributesEnum.Cc.index();
    public static final int REGARDING = AttributesEnum.Regarding.index();
    public static final int MESSAGE = AttributesEnum.Message.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int VESSELPK = AttributesEnum.VesselPk.index();
    public static final int EMAILFROM = AttributesEnum.EmailFrom.index();
    public static final int EMAILSENTBY = AttributesEnum.EmailSentBy.index();
    public static final int EMAILSENTDATE = AttributesEnum.EmailSentDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VsslInspCommImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.rmi.applicationEntry.adfbc.entities.VsslInspComm");
    }


    /**
     * Gets the attribute value for CommId, using the alias name CommId.
     * @return the value of CommId
     */
    public Integer getCommId() {
        return (Integer) getAttributeInternal(COMMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CommId.
     * @param value value to set the CommId
     */
    public void setCommId(Integer value) {
        setAttributeInternal(COMMID, value);
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the value of HeaderId
     */
    public Integer getHeaderId() {
        return (Integer) getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Integer value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for SentTo, using the alias name SentTo.
     * @return the value of SentTo
     */
    public String getSentTo() {
        return (String) getAttributeInternal(SENTTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SentTo.
     * @param value value to set the SentTo
     */
    public void setSentTo(String value) {
        setAttributeInternal(SENTTO, value);
    }

    /**
     * Gets the attribute value for Cc, using the alias name Cc.
     * @return the value of Cc
     */
    public String getCc() {
        return (String) getAttributeInternal(CC);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cc.
     * @param value value to set the Cc
     */
    public void setCc(String value) {
        setAttributeInternal(CC, value);
    }

    /**
     * Gets the attribute value for Regarding, using the alias name Regarding.
     * @return the value of Regarding
     */
    public String getRegarding() {
        return (String) getAttributeInternal(REGARDING);
    }

    /**
     * Sets <code>value</code> as the attribute value for Regarding.
     * @param value value to set the Regarding
     */
    public void setRegarding(String value) {
        setAttributeInternal(REGARDING, value);
    }

    /**
     * Gets the attribute value for Message, using the alias name Message.
     * @return the value of Message
     */
    public String getMessage() {
        return (String) getAttributeInternal(MESSAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Message.
     * @param value value to set the Message
     */
    public void setMessage(String value) {
        setAttributeInternal(MESSAGE, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public BigDecimal getLastUpdatedBy() {
        return (BigDecimal) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(BigDecimal value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the value of LastUpdateLogin
     */
    public BigDecimal getLastUpdateLogin() {
        return (BigDecimal) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(BigDecimal value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for VesselPk, using the alias name VesselPk.
     * @return the value of VesselPk
     */
    public Integer getVesselPk() {
        return (Integer) getAttributeInternal(VESSELPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for VesselPk.
     * @param value value to set the VesselPk
     */
    public void setVesselPk(Integer value) {
        setAttributeInternal(VESSELPK, value);
    }

    /**
     * Gets the attribute value for EmailFrom, using the alias name EmailFrom.
     * @return the value of EmailFrom
     */
    public String getEmailFrom() {
        return (String) getAttributeInternal(EMAILFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmailFrom.
     * @param value value to set the EmailFrom
     */
    public void setEmailFrom(String value) {
        setAttributeInternal(EMAILFROM, value);
    }

    /**
     * Gets the attribute value for EmailSentBy, using the alias name EmailSentBy.
     * @return the value of EmailSentBy
     */
    public Integer getEmailSentBy() {
        return (Integer) getAttributeInternal(EMAILSENTBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmailSentBy.
     * @param value value to set the EmailSentBy
     */
    public void setEmailSentBy(Integer value) {
        setAttributeInternal(EMAILSENTBY, value);
    }

    /**
     * Gets the attribute value for EmailSentDate, using the alias name EmailSentDate.
     * @return the value of EmailSentDate
     */
    public Date getEmailSentDate() {
        return (Date) getAttributeInternal(EMAILSENTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmailSentDate.
     * @param value value to set the EmailSentDate
     */
    public void setEmailSentDate(Date value) {
        setAttributeInternal(EMAILSENTDATE, value);
    }


    /**
     * @param commId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer commId) {
        return new Key(new Object[] { commId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
//        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

