package com.rmi.applicationEntry.adfbc.views;

import com.rmi.applicationEntry.adfbc.entities.SeafarerDocsIfaceImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 08 12:36:29 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SeafarerDocsSqcViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_SEAFARERDOCSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CocCountry,
        CocExpirationDate,
        CocIdentifier,
        CocIssueDate,
        CraApprovedBy,
        CraApprovedDate,
        CraRequired,
        CraSentBy,
        CraSentDate,
        CreatedBy,
        CreationDate,
        DocIdentifier,
        DocOrder,
        DocumentApprovedBy,
        DocumentApprovedDate,
        DocumentId,
        EdocId,
        EsdiId,
        EsiId,
        GradeId,
        GradeType,
        GradingComments,
        GradingInstructions,
        GradingStatus,
        InventoryItemId,
        IssueType,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        Limitation,
        LineId,
        PreviousDocumentId,
        Restriction,
        SupportEdocId,
        VerificationBy,
        VerificationRequestDate,
        tranCountryName,
        tranGradeDescription,
        tranGradeCode,
        tranCOC,
        tranSupport,
        tranCOCFileName,
        tranSupportFileName,
        tranCocHistoryLink,
        tranSupportHistoryLink,
        tranRestrictionNameSqc,
        DocChargeable,
        CountriesLOV1,
        SeafarerDocsSqcVO1,
        GradeSqcLOV1,
        GetDocumentLinkRO1,
        DocumentHistoryDetailsDocsIfaceView,
        RestrictionView1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return SeafarerDocsSqcViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return SeafarerDocsSqcViewRowImpl.AttributesEnum.firstIndex() +
                   SeafarerDocsSqcViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = SeafarerDocsSqcViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COCCOUNTRY = AttributesEnum.CocCountry.index();
    public static final int COCEXPIRATIONDATE = AttributesEnum.CocExpirationDate.index();
    public static final int COCIDENTIFIER = AttributesEnum.CocIdentifier.index();
    public static final int COCISSUEDATE = AttributesEnum.CocIssueDate.index();
    public static final int CRAAPPROVEDBY = AttributesEnum.CraApprovedBy.index();
    public static final int CRAAPPROVEDDATE = AttributesEnum.CraApprovedDate.index();
    public static final int CRAREQUIRED = AttributesEnum.CraRequired.index();
    public static final int CRASENTBY = AttributesEnum.CraSentBy.index();
    public static final int CRASENTDATE = AttributesEnum.CraSentDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int DOCIDENTIFIER = AttributesEnum.DocIdentifier.index();
    public static final int DOCORDER = AttributesEnum.DocOrder.index();
    public static final int DOCUMENTAPPROVEDBY = AttributesEnum.DocumentApprovedBy.index();
    public static final int DOCUMENTAPPROVEDDATE = AttributesEnum.DocumentApprovedDate.index();
    public static final int DOCUMENTID = AttributesEnum.DocumentId.index();
    public static final int EDOCID = AttributesEnum.EdocId.index();
    public static final int ESDIID = AttributesEnum.EsdiId.index();
    public static final int ESIID = AttributesEnum.EsiId.index();
    public static final int GRADEID = AttributesEnum.GradeId.index();
    public static final int GRADETYPE = AttributesEnum.GradeType.index();
    public static final int GRADINGCOMMENTS = AttributesEnum.GradingComments.index();
    public static final int GRADINGINSTRUCTIONS = AttributesEnum.GradingInstructions.index();
    public static final int GRADINGSTATUS = AttributesEnum.GradingStatus.index();
    public static final int INVENTORYITEMID = AttributesEnum.InventoryItemId.index();
    public static final int ISSUETYPE = AttributesEnum.IssueType.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LIMITATION = AttributesEnum.Limitation.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int PREVIOUSDOCUMENTID = AttributesEnum.PreviousDocumentId.index();
    public static final int RESTRICTION = AttributesEnum.Restriction.index();
    public static final int SUPPORTEDOCID = AttributesEnum.SupportEdocId.index();
    public static final int VERIFICATIONBY = AttributesEnum.VerificationBy.index();
    public static final int VERIFICATIONREQUESTDATE = AttributesEnum.VerificationRequestDate.index();
    public static final int TRANCOUNTRYNAME = AttributesEnum.tranCountryName.index();
    public static final int TRANGRADEDESCRIPTION = AttributesEnum.tranGradeDescription.index();
    public static final int TRANGRADECODE = AttributesEnum.tranGradeCode.index();
    public static final int TRANCOC = AttributesEnum.tranCOC.index();
    public static final int TRANSUPPORT = AttributesEnum.tranSupport.index();
    public static final int TRANCOCFILENAME = AttributesEnum.tranCOCFileName.index();
    public static final int TRANSUPPORTFILENAME = AttributesEnum.tranSupportFileName.index();
    public static final int TRANCOCHISTORYLINK = AttributesEnum.tranCocHistoryLink.index();
    public static final int TRANSUPPORTHISTORYLINK = AttributesEnum.tranSupportHistoryLink.index();
    public static final int TRANRESTRICTIONNAMESQC = AttributesEnum.tranRestrictionNameSqc.index();
    public static final int DOCCHARGEABLE = AttributesEnum.DocChargeable.index();
    public static final int COUNTRIESLOV1 = AttributesEnum.CountriesLOV1.index();
    public static final int SEAFARERDOCSSQCVO1 = AttributesEnum.SeafarerDocsSqcVO1.index();
    public static final int GRADESQCLOV1 = AttributesEnum.GradeSqcLOV1.index();
    public static final int GETDOCUMENTLINKRO1 = AttributesEnum.GetDocumentLinkRO1.index();
    public static final int DOCUMENTHISTORYDETAILSDOCSIFACEVIEW =
        AttributesEnum.DocumentHistoryDetailsDocsIfaceView.index();
    public static final int RESTRICTIONVIEW1 = AttributesEnum.RestrictionView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SeafarerDocsSqcViewRowImpl() {
    }

    /**
     * Gets SeafarerDocsEO entity object.
     * @return the SeafarerDocsEO
     */
    public SeafarerDocsIfaceImpl getSeafarerDocsEO() {
        return (SeafarerDocsIfaceImpl) getEntity(ENTITY_SEAFARERDOCSEO);
    }

    /**
     * Gets the attribute value for COC_COUNTRY using the alias name CocCountry.
     * @return the COC_COUNTRY
     */
    public String getCocCountry() {
        return (String) getAttributeInternal(COCCOUNTRY);
    }

    /**
     * Sets <code>value</code> as attribute value for COC_COUNTRY using the alias name CocCountry.
     * @param value value to set the COC_COUNTRY
     */
    public void setCocCountry(String value) 
    {
        if(value != null && value.length() < 5)
            setAttributeInternal(COCCOUNTRY, value);
    }

    /**
     * Gets the attribute value for COC_EXPIRATION_DATE using the alias name CocExpirationDate.
     * @return the COC_EXPIRATION_DATE
     */
    public Date getCocExpirationDate() {
        return (Date) getAttributeInternal(COCEXPIRATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for COC_EXPIRATION_DATE using the alias name CocExpirationDate.
     * @param value value to set the COC_EXPIRATION_DATE
     */
    public void setCocExpirationDate(Date value) {
        setAttributeInternal(COCEXPIRATIONDATE, value);
    }

    /**
     * Gets the attribute value for COC_IDENTIFIER using the alias name CocIdentifier.
     * @return the COC_IDENTIFIER
     */
    public String getCocIdentifier() {
        return (String) getAttributeInternal(COCIDENTIFIER);
    }

    /**
     * Sets <code>value</code> as attribute value for COC_IDENTIFIER using the alias name CocIdentifier.
     * @param value value to set the COC_IDENTIFIER
     */
    public void setCocIdentifier(String value) {
        setAttributeInternal(COCIDENTIFIER, value);
    }

    /**
     * Gets the attribute value for COC_ISSUE_DATE using the alias name CocIssueDate.
     * @return the COC_ISSUE_DATE
     */
    public Date getCocIssueDate() {
        return (Date) getAttributeInternal(COCISSUEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for COC_ISSUE_DATE using the alias name CocIssueDate.
     * @param value value to set the COC_ISSUE_DATE
     */
    public void setCocIssueDate(Date value) {
        setAttributeInternal(COCISSUEDATE, value);
    }

    /**
     * Gets the attribute value for CRA_APPROVED_BY using the alias name CraApprovedBy.
     * @return the CRA_APPROVED_BY
     */
    public BigDecimal getCraApprovedBy() {
        return (BigDecimal) getAttributeInternal(CRAAPPROVEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CRA_APPROVED_BY using the alias name CraApprovedBy.
     * @param value value to set the CRA_APPROVED_BY
     */
    public void setCraApprovedBy(BigDecimal value) {
        setAttributeInternal(CRAAPPROVEDBY, value);
    }

    /**
     * Gets the attribute value for CRA_APPROVED_DATE using the alias name CraApprovedDate.
     * @return the CRA_APPROVED_DATE
     */
    public Timestamp getCraApprovedDate() {
        return (Timestamp) getAttributeInternal(CRAAPPROVEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CRA_APPROVED_DATE using the alias name CraApprovedDate.
     * @param value value to set the CRA_APPROVED_DATE
     */
    public void setCraApprovedDate(Timestamp value) {
        setAttributeInternal(CRAAPPROVEDDATE, value);
    }

    /**
     * Gets the attribute value for CRA_REQUIRED using the alias name CraRequired.
     * @return the CRA_REQUIRED
     */
    public String getCraRequired() {
        return (String) getAttributeInternal(CRAREQUIRED);
    }

    /**
     * Sets <code>value</code> as attribute value for CRA_REQUIRED using the alias name CraRequired.
     * @param value value to set the CRA_REQUIRED
     */
    public void setCraRequired(String value) {
        setAttributeInternal(CRAREQUIRED, value);
    }

    /**
     * Gets the attribute value for CRA_SENT_BY using the alias name CraSentBy.
     * @return the CRA_SENT_BY
     */
    public BigDecimal getCraSentBy() {
        return (BigDecimal) getAttributeInternal(CRASENTBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CRA_SENT_BY using the alias name CraSentBy.
     * @param value value to set the CRA_SENT_BY
     */
    public void setCraSentBy(BigDecimal value) {
        setAttributeInternal(CRASENTBY, value);
    }

    /**
     * Gets the attribute value for CRA_SENT_DATE using the alias name CraSentDate.
     * @return the CRA_SENT_DATE
     */
    public Timestamp getCraSentDate() {
        return (Timestamp) getAttributeInternal(CRASENTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CRA_SENT_DATE using the alias name CraSentDate.
     * @param value value to set the CRA_SENT_DATE
     */
    public void setCraSentDate(Timestamp value) {
        setAttributeInternal(CRASENTDATE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for DOC_IDENTIFIER using the alias name DocIdentifier.
     * @return the DOC_IDENTIFIER
     */
    public BigDecimal getDocIdentifier() {
        return (BigDecimal) getAttributeInternal(DOCIDENTIFIER);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_IDENTIFIER using the alias name DocIdentifier.
     * @param value value to set the DOC_IDENTIFIER
     */
    public void setDocIdentifier(BigDecimal value) {
        setAttributeInternal(DOCIDENTIFIER, value);
    }

    /**
     * Gets the attribute value for DOC_ORDER using the alias name DocOrder.
     * @return the DOC_ORDER
     */
    public BigDecimal getDocOrder() {
        return (BigDecimal) getAttributeInternal(DOCORDER);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ORDER using the alias name DocOrder.
     * @param value value to set the DOC_ORDER
     */
    public void setDocOrder(BigDecimal value) {
        setAttributeInternal(DOCORDER, value);
    }

    /**
     * Gets the attribute value for DOCUMENT_APPROVED_BY using the alias name DocumentApprovedBy.
     * @return the DOCUMENT_APPROVED_BY
     */
    public BigDecimal getDocumentApprovedBy() {
        return (BigDecimal) getAttributeInternal(DOCUMENTAPPROVEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for DOCUMENT_APPROVED_BY using the alias name DocumentApprovedBy.
     * @param value value to set the DOCUMENT_APPROVED_BY
     */
    public void setDocumentApprovedBy(BigDecimal value) {
        setAttributeInternal(DOCUMENTAPPROVEDBY, value);
    }

    /**
     * Gets the attribute value for DOCUMENT_APPROVED_DATE using the alias name DocumentApprovedDate.
     * @return the DOCUMENT_APPROVED_DATE
     */
    public Timestamp getDocumentApprovedDate() {
        return (Timestamp) getAttributeInternal(DOCUMENTAPPROVEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DOCUMENT_APPROVED_DATE using the alias name DocumentApprovedDate.
     * @param value value to set the DOCUMENT_APPROVED_DATE
     */
    public void setDocumentApprovedDate(Timestamp value) {
        setAttributeInternal(DOCUMENTAPPROVEDDATE, value);
    }

    /**
     * Gets the attribute value for DOCUMENT_ID using the alias name DocumentId.
     * @return the DOCUMENT_ID
     */
    public BigDecimal getDocumentId() {
        return (BigDecimal) getAttributeInternal(DOCUMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOCUMENT_ID using the alias name DocumentId.
     * @param value value to set the DOCUMENT_ID
     */
    public void setDocumentId(BigDecimal value) {
        setAttributeInternal(DOCUMENTID, value);
    }

    /**
     * Gets the attribute value for EDOC_ID using the alias name EdocId.
     * @return the EDOC_ID
     */
    public Integer getEdocId() {
        return (Integer) getAttributeInternal(EDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for EDOC_ID using the alias name EdocId.
     * @param value value to set the EDOC_ID
     */
    public void setEdocId(Integer value) {
        setAttributeInternal(EDOCID, value);
    }

    /**
     * Gets the attribute value for ESDI_ID using the alias name EsdiId.
     * @return the ESDI_ID
     */
    public Integer getEsdiId() {
        return (Integer) getAttributeInternal(ESDIID);
    }

    /**
     * Sets <code>value</code> as attribute value for ESDI_ID using the alias name EsdiId.
     * @param value value to set the ESDI_ID
     */
    public void setEsdiId(Integer value) {
        setAttributeInternal(ESDIID, value);
    }

    /**
     * Gets the attribute value for ESI_ID using the alias name EsiId.
     * @return the ESI_ID
     */
    public Integer getEsiId() {
        return (Integer) getAttributeInternal(ESIID);
    }

    /**
     * Sets <code>value</code> as attribute value for ESI_ID using the alias name EsiId.
     * @param value value to set the ESI_ID
     */
    public void setEsiId(Integer value) {
        setAttributeInternal(ESIID, value);
    }

    /**
     * Gets the attribute value for GRADE_ID using the alias name GradeId.
     * @return the GRADE_ID
     */
    public Integer getGradeId() {
        return (Integer) getAttributeInternal(GRADEID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRADE_ID using the alias name GradeId.
     * @param value value to set the GRADE_ID
     */
    public void setGradeId(Integer value) {
                    
        setAttributeInternal(GRADEID, value);
    }

    /**
     * Gets the attribute value for GRADE_TYPE using the alias name GradeType.
     * @return the GRADE_TYPE
     */
    public String getGradeType() {
        return (String) getAttributeInternal(GRADETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for GRADE_TYPE using the alias name GradeType.
     * @param value value to set the GRADE_TYPE
     */
    public void setGradeType(String value) {
        setAttributeInternal(GRADETYPE, value);
    }

    /**
     * Gets the attribute value for GRADING_COMMENTS using the alias name GradingComments.
     * @return the GRADING_COMMENTS
     */
    public String getGradingComments() {
        return (String) getAttributeInternal(GRADINGCOMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for GRADING_COMMENTS using the alias name GradingComments.
     * @param value value to set the GRADING_COMMENTS
     */
    public void setGradingComments(String value) {
        setAttributeInternal(GRADINGCOMMENTS, value);
    }

    /**
     * Gets the attribute value for GRADING_INSTRUCTIONS using the alias name GradingInstructions.
     * @return the GRADING_INSTRUCTIONS
     */
    public String getGradingInstructions() {
        return (String) getAttributeInternal(GRADINGINSTRUCTIONS);
    }

    /**
     * Sets <code>value</code> as attribute value for GRADING_INSTRUCTIONS using the alias name GradingInstructions.
     * @param value value to set the GRADING_INSTRUCTIONS
     */
    public void setGradingInstructions(String value) {
        setAttributeInternal(GRADINGINSTRUCTIONS, value);
    }

    /**
     * Gets the attribute value for GRADING_STATUS using the alias name GradingStatus.
     * @return the GRADING_STATUS
     */
    public String getGradingStatus() {
        return (String) getAttributeInternal(GRADINGSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for GRADING_STATUS using the alias name GradingStatus.
     * @param value value to set the GRADING_STATUS
     */
    public void setGradingStatus(String value) {
        setAttributeInternal(GRADINGSTATUS, value);
    }

    /**
     * Gets the attribute value for INVENTORY_ITEM_ID using the alias name InventoryItemId.
     * @return the INVENTORY_ITEM_ID
     */
    public Integer getInventoryItemId() {
        return (Integer) getAttributeInternal(INVENTORYITEMID);
    }

    /**
     * Sets <code>value</code> as attribute value for INVENTORY_ITEM_ID using the alias name InventoryItemId.
     * @param value value to set the INVENTORY_ITEM_ID
     */
    public void setInventoryItemId(Integer value) {
        setAttributeInternal(INVENTORYITEMID, value);
    }

    /**
     * Gets the attribute value for ISSUE_TYPE using the alias name IssueType.
     * @return the ISSUE_TYPE
     */
    public String getIssueType() {
        return (String) getAttributeInternal(ISSUETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSUE_TYPE using the alias name IssueType.
     * @param value value to set the ISSUE_TYPE
     */
    public void setIssueType(String value) {
        setAttributeInternal(ISSUETYPE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public BigDecimal getLastUpdateLogin() {
        return (BigDecimal) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(BigDecimal value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public BigDecimal getLastUpdatedBy() {
        return (BigDecimal) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(BigDecimal value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LIMITATION using the alias name Limitation.
     * @return the LIMITATION
     */
    public BigDecimal getLimitation() {
        return (BigDecimal) getAttributeInternal(LIMITATION);
    }

    /**
     * Sets <code>value</code> as attribute value for LIMITATION using the alias name Limitation.
     * @param value value to set the LIMITATION
     */
    public void setLimitation(BigDecimal value) {
        setAttributeInternal(LIMITATION, value);
    }

    /**
     * Gets the attribute value for LINE_ID using the alias name LineId.
     * @return the LINE_ID
     */
    public BigDecimal getLineId() {
        return (BigDecimal) getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_ID using the alias name LineId.
     * @param value value to set the LINE_ID
     */
    public void setLineId(BigDecimal value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for PREVIOUS_DOCUMENT_ID using the alias name PreviousDocumentId.
     * @return the PREVIOUS_DOCUMENT_ID
     */
    public BigDecimal getPreviousDocumentId() {
        return (BigDecimal) getAttributeInternal(PREVIOUSDOCUMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PREVIOUS_DOCUMENT_ID using the alias name PreviousDocumentId.
     * @param value value to set the PREVIOUS_DOCUMENT_ID
     */
    public void setPreviousDocumentId(BigDecimal value) {
        setAttributeInternal(PREVIOUSDOCUMENTID, value);
    }

    /**
     * Gets the attribute value for RESTRICTION using the alias name Restriction.
     * @return the RESTRICTION
     */
    public Integer getRestriction() {
        return (Integer) getAttributeInternal(RESTRICTION);
    }

    /**
     * Sets <code>value</code> as attribute value for RESTRICTION using the alias name Restriction.
     * @param value value to set the RESTRICTION
     */
    public void setRestriction(Integer value) {
        setAttributeInternal(RESTRICTION, value);
    }

    /**
     * Gets the attribute value for SUPPORT_EDOC_ID using the alias name SupportEdocId.
     * @return the SUPPORT_EDOC_ID
     */
    public Integer getSupportEdocId() {
        return (Integer) getAttributeInternal(SUPPORTEDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SUPPORT_EDOC_ID using the alias name SupportEdocId.
     * @param value value to set the SUPPORT_EDOC_ID
     */
    public void setSupportEdocId(Integer value) {
        setAttributeInternal(SUPPORTEDOCID, value);
    }

    /**
     * Gets the attribute value for VERIFICATION_BY using the alias name VerificationBy.
     * @return the VERIFICATION_BY
     */
    public BigDecimal getVerificationBy() {
        return (BigDecimal) getAttributeInternal(VERIFICATIONBY);
    }

    /**
     * Sets <code>value</code> as attribute value for VERIFICATION_BY using the alias name VerificationBy.
     * @param value value to set the VERIFICATION_BY
     */
    public void setVerificationBy(BigDecimal value) {
        setAttributeInternal(VERIFICATIONBY, value);
    }

    /**
     * Gets the attribute value for VERIFICATION_REQUEST_DATE using the alias name VerificationRequestDate.
     * @return the VERIFICATION_REQUEST_DATE
     */
    public Timestamp getVerificationRequestDate() {
        return (Timestamp) getAttributeInternal(VERIFICATIONREQUESTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for VERIFICATION_REQUEST_DATE using the alias name VerificationRequestDate.
     * @param value value to set the VERIFICATION_REQUEST_DATE
     */
    public void setVerificationRequestDate(Timestamp value) {
        setAttributeInternal(VERIFICATIONREQUESTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCountryName.
     * @return the tranCountryName
     */
    public String gettranCountryName() {
        String cntryCode = null;
               String cntryName = null;
        if(getCocCountry() != null)
        {
                cntryCode = getCocCountry();
                Row [] cntryRows;
                cntryRows = getCountriesLOV1().getFilteredRows("CountryCode", cntryCode);
                if(cntryRows.length > 0)
                {
                   cntryName = cntryRows[0].getAttribute("CountryName").toString(); 
                    
                    }
                return cntryName;
            
            }
        else
        {
        return (String) getAttributeInternal(TRANCOUNTRYNAME);
    }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCountryName.
     * @param value value to set the  tranCountryName
     */
    public void settranCountryName(String value) {
        setAttributeInternal(TRANCOUNTRYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranGradeDescription.
     * @return the tranGradeDescription
     */
    public String gettranGradeDescription() {
        Integer gradeId = null;
               String gardeDescription = null;
        if(getGradeId() != null)
        {
                gradeId = getGradeId();
                Row [] gardeRows;
                gardeRows = getGradeSqcLOV1().getFilteredRows("GradeId", gradeId);
                if(gardeRows.length > 0)
                {
                   gardeDescription = gardeRows[0].getAttribute("GradeName").toString(); 
                    
                    }
                return gardeDescription;
            
            }
        else
        {
        return (String) getAttributeInternal(TRANGRADEDESCRIPTION);
    }
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranGradeDescription.
     * @param value value to set the  tranGradeDescription
     */
    public void settranGradeDescription(String value) {
        setAttributeInternal(TRANGRADEDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranGradeCode.
     * @return the tranGradeCode
     */
    public String gettranGradeCode() {
        Integer gradeId = null;
               String gardecode = null;
        if(getGradeId() != null)
        {
                gradeId = getGradeId();
                Row [] gardeRows;
                gardeRows = getGradeSqcLOV1().getFilteredRows("GradeId", gradeId);
                if(gardeRows.length > 0)
                {
                   gardecode = gardeRows[0].getAttribute("GradeCode").toString(); 
                    
                    }
                return gardecode;
            
            }
        else
        {
        return (String) getAttributeInternal(TRANGRADECODE);
    }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranGradeCode.
     * @param value value to set the  tranGradeCode
     */
    public void settranGradeCode(String value) {
        setAttributeInternal(TRANGRADECODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCOC.
     * @return the tranCOC
     */
    public String gettranCOC() {
        String docurl = "";
//        RowSet doclink = getGetDocumentLinkRO1();
//        doclink.setNamedWhereClauseParam("pEdocId", getEdocId());
//        doclink.executeQuery();
//        if(doclink.getRowCount() > 0)
//        {
//        Row row = doclink.first();
//        if(row.getAttribute("DocPath") != null)
//        {
//        docurl = row.getAttribute("DocPath").toString();
//        }
//        }
        if(getEdocId() != null)
        {
           docurl = getEdocId().toString(); 
            }
        return docurl;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCOC.
     * @param value value to set the  tranCOC
     */
    public void settranCOC(String value) {
        setAttributeInternal(TRANCOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranSupport.
     * @return the tranSupport
     */
    public String gettranSupport() {
        String docurl = "";
//        RowSet doclink = getGetDocumentLinkRO1();
//        doclink.setNamedWhereClauseParam("pEdocId", getSupportEdocId());
//        doclink.executeQuery();
//        if(doclink.getRowCount() > 0)
//        {
//        Row row = doclink.first();
//        if(row.getAttribute("DocPath") != null)
//        {
//        docurl = row.getAttribute("DocPath").toString();
//        }
//        }
        if(getSupportEdocId() != null)
        {
           docurl = getSupportEdocId().toString(); 
            }
        return docurl;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranSupport.
     * @param value value to set the  tranSupport
     */
    public void settranSupport(String value) {
        setAttributeInternal(TRANSUPPORT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCOCFileName.
     * @return the tranCOCFileName
     */
    public String gettranCOCFileName() {
        if(getEdocId() != null)
        {
            return "Uploaded";
            }
        return (String) getAttributeInternal(TRANCOCFILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCOCFileName.
     * @param value value to set the  tranCOCFileName
     */
    public void settranCOCFileName(String value) {
        setAttributeInternal(TRANCOCFILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranSupportFileName.
     * @return the tranSupportFileName
     */
    public String gettranSupportFileName() {
        if(getSupportEdocId() != null)
        {
           return "Uploaded"; 
            }
        return (String) getAttributeInternal(TRANSUPPORTFILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranSupportFileName.
     * @param value value to set the  tranSupportFileName
     */
    public void settranSupportFileName(String value) {
        setAttributeInternal(TRANSUPPORTFILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranCocHistoryLink.
     * @return the tranCocHistoryLink
     */
    public String gettranCocHistoryLink() {
        Integer esdi_id = getEsdiId();
        //        Integer seafarer_id = getSeafarerId();
        RowSet detailsView = getDocumentHistoryDetailsDocsIfaceView();
        detailsView.setNamedWhereClauseParam("pEsdiId", esdi_id);
        //        detailsView.setNamedWhereClauseParam("pSeafarerId", seafarer_id);
        detailsView.setNamedWhereClauseParam("pDocCode", "0006");
        detailsView.executeQuery();
        String ret = "N";
        if(detailsView.getRowCount() > 0)
        {
         ret = "Y";   
            }
        
        return ret;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranCocHistoryLink.
     * @param value value to set the  tranCocHistoryLink
     */
    public void settranCocHistoryLink(String value) {
        setAttributeInternal(TRANCOCHISTORYLINK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranSupportHistoryLink.
     * @return the tranSupportHistoryLink
     */
    public String gettranSupportHistoryLink() {
        Integer esdi_id = getEsdiId();
        //        Integer seafarer_id = getSeafarerId();
        RowSet detailsView = getDocumentHistoryDetailsDocsIfaceView();
        detailsView.setNamedWhereClauseParam("pEsdiId", esdi_id);
        //        detailsView.setNamedWhereClauseParam("pSeafarerId", seafarer_id);
        detailsView.setNamedWhereClauseParam("pDocCode", "0011");
        detailsView.executeQuery();
        String ret = "N";
        if(detailsView.getRowCount() > 0)
        {
         ret = "Y";   
            }
        
        return ret;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranSupportHistoryLink.
     * @param value value to set the  tranSupportHistoryLink
     */
    public void settranSupportHistoryLink(String value) {
        setAttributeInternal(TRANSUPPORTHISTORYLINK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tranRestrictionName.
     * @return the tranRestrictionName
     */
    public String gettranRestrictionNameSqc() {
        Integer restrictionId = null;
               String restrictionName = null;
        if(getRestriction() != null)
        {
                restrictionId = getRestriction();
                Row [] resRows;
                resRows = getRestrictionView1().getFilteredRows("RestrictionId", restrictionId);
                if(resRows.length > 0)
                {
                   restrictionName = resRows[0].getAttribute("RestrictionName").toString(); 
                    
                    }
                return restrictionName;
            
            }
        else
        {
        return (String) getAttributeInternal(TRANRESTRICTIONNAMESQC);
    }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tranRestrictionName.
     * @param value value to set the  tranRestrictionName
     */
    public void settranRestrictionNameSqc(String value) {
        setAttributeInternal(TRANRESTRICTIONNAMESQC, value);
    }

    /**
     * Gets the attribute value for DOC_CHARGEABLE using the alias name DocChargeable.
     * @return the DOC_CHARGEABLE
     */
    public String getDocChargeable() {
        return (String) getAttributeInternal(DOCCHARGEABLE);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_CHARGEABLE using the alias name DocChargeable.
     * @param value value to set the DOC_CHARGEABLE
     */
    public void setDocChargeable(String value) {
        setAttributeInternal(DOCCHARGEABLE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CountriesLOV1.
     */
    public RowSet getCountriesLOV1() {
        return (RowSet) getAttributeInternal(COUNTRIESLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SeafarerDocsSqcVO1.
     */
    public RowSet getSeafarerDocsSqcVO1() {
        return (RowSet) getAttributeInternal(SEAFARERDOCSSQCVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GradeSqcLOV1.
     */
    public RowSet getGradeSqcLOV1() {
        return (RowSet) getAttributeInternal(GRADESQCLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GetDocumentLinkRO1.
     */
    public RowSet getGetDocumentLinkRO1() {
        return (RowSet) getAttributeInternal(GETDOCUMENTLINKRO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DocumentHistoryDetailsDocsIfaceView.
     */
    public RowSet getDocumentHistoryDetailsDocsIfaceView() {
        return (RowSet) getAttributeInternal(DOCUMENTHISTORYDETAILSDOCSIFACEVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RestrictionView1.
     */
    public RowSet getRestrictionView1() {
        return (RowSet) getAttributeInternal(RESTRICTIONVIEW1);
    }
}

