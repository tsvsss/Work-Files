package oracle.apps.xwrl.model.view;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.logging.ADFLogger;

import oracle.apps.xwrl.model.entity.XwrlResponseIndColumnsImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 11 16:59:13 EDT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XwrlResponseIndColumnsViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_XWRLRESPONSEINDCOLUMNS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Listfullname,
        Listnametype,
        Listfamilyname,
        Listgivennames,
        Listdob,
        Dnyob,
        Dngender,
        Deceasedflag,
        Deceaseddate,
        Dnresidencycountrycode,
        Listnationality,
        Listcountry,
        Listcity,
        Dnstate,
        Listcountryofbirth,
        Dnaddress,
        Dntitle,
        Dnpassportnumber,
        Dnnationalid,
        Category,
        Externalsources,
        Cachedextsources,
        Dnaddeddate,
        Dnlastupdateddate,
        Matchscore,
        Listid,
        Listkey,
        Listsubkey,
        Listrecordtype,
        Listprimaryname,
        Listoriginalscriptname,
        Matchrule,
        Casekey,
        Alertid,
        Riskscore,
        Riskscorepep,
        Dnoccupation,
        Dncity,
        Dnpostalcode,
        Dnaddresscountrycode,
        Dnnationalitycountrycodes,
        CreatedBy,
        CreationDate,
        Dncountryofbirthcode,
        Id,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        Listrecordorigin,
        Rec,
        RequestId,
        XState,
        LegalReview,
        LegalReviewAttr,
        CorporateReview,
        OwsAlertState,
        Samestate,
        Summary,
        Stateattr,
        CreatedByAttr,
        LastUpdatedByAttr,
        XwrlAlertNotesView,
        XwrlAlertDocumentsView,
        XwrlResponseRowsView,
        XwrlAlertNotesXrefView,
        FndUsersAllLov1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LISTFULLNAME = AttributesEnum.Listfullname.index();
    public static final int LISTNAMETYPE = AttributesEnum.Listnametype.index();
    public static final int LISTFAMILYNAME = AttributesEnum.Listfamilyname.index();
    public static final int LISTGIVENNAMES = AttributesEnum.Listgivennames.index();
    public static final int LISTDOB = AttributesEnum.Listdob.index();
    public static final int DNYOB = AttributesEnum.Dnyob.index();
    public static final int DNGENDER = AttributesEnum.Dngender.index();
    public static final int DECEASEDFLAG = AttributesEnum.Deceasedflag.index();
    public static final int DECEASEDDATE = AttributesEnum.Deceaseddate.index();
    public static final int DNRESIDENCYCOUNTRYCODE = AttributesEnum.Dnresidencycountrycode.index();
    public static final int LISTNATIONALITY = AttributesEnum.Listnationality.index();
    public static final int LISTCOUNTRY = AttributesEnum.Listcountry.index();
    public static final int LISTCITY = AttributesEnum.Listcity.index();
    public static final int DNSTATE = AttributesEnum.Dnstate.index();
    public static final int LISTCOUNTRYOFBIRTH = AttributesEnum.Listcountryofbirth.index();
    public static final int DNADDRESS = AttributesEnum.Dnaddress.index();
    public static final int DNTITLE = AttributesEnum.Dntitle.index();
    public static final int DNPASSPORTNUMBER = AttributesEnum.Dnpassportnumber.index();
    public static final int DNNATIONALID = AttributesEnum.Dnnationalid.index();
    public static final int CATEGORY = AttributesEnum.Category.index();
    public static final int EXTERNALSOURCES = AttributesEnum.Externalsources.index();
    public static final int CACHEDEXTSOURCES = AttributesEnum.Cachedextsources.index();
    public static final int DNADDEDDATE = AttributesEnum.Dnaddeddate.index();
    public static final int DNLASTUPDATEDDATE = AttributesEnum.Dnlastupdateddate.index();
    public static final int MATCHSCORE = AttributesEnum.Matchscore.index();
    public static final int LISTID = AttributesEnum.Listid.index();
    public static final int LISTKEY = AttributesEnum.Listkey.index();
    public static final int LISTSUBKEY = AttributesEnum.Listsubkey.index();
    public static final int LISTRECORDTYPE = AttributesEnum.Listrecordtype.index();
    public static final int LISTPRIMARYNAME = AttributesEnum.Listprimaryname.index();
    public static final int LISTORIGINALSCRIPTNAME = AttributesEnum.Listoriginalscriptname.index();
    public static final int MATCHRULE = AttributesEnum.Matchrule.index();
    public static final int CASEKEY = AttributesEnum.Casekey.index();
    public static final int ALERTID = AttributesEnum.Alertid.index();
    public static final int RISKSCORE = AttributesEnum.Riskscore.index();
    public static final int RISKSCOREPEP = AttributesEnum.Riskscorepep.index();
    public static final int DNOCCUPATION = AttributesEnum.Dnoccupation.index();
    public static final int DNCITY = AttributesEnum.Dncity.index();
    public static final int DNPOSTALCODE = AttributesEnum.Dnpostalcode.index();
    public static final int DNADDRESSCOUNTRYCODE = AttributesEnum.Dnaddresscountrycode.index();
    public static final int DNNATIONALITYCOUNTRYCODES = AttributesEnum.Dnnationalitycountrycodes.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int DNCOUNTRYOFBIRTHCODE = AttributesEnum.Dncountryofbirthcode.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LISTRECORDORIGIN = AttributesEnum.Listrecordorigin.index();
    public static final int REC = AttributesEnum.Rec.index();
    public static final int REQUESTID = AttributesEnum.RequestId.index();
    public static final int XSTATE = AttributesEnum.XState.index();
    public static final int LEGALREVIEW = AttributesEnum.LegalReview.index();
    public static final int LEGALREVIEWATTR = AttributesEnum.LegalReviewAttr.index();
    public static final int CORPORATEREVIEW = AttributesEnum.CorporateReview.index();
    public static final int OWSALERTSTATE = AttributesEnum.OwsAlertState.index();
    public static final int SAMESTATE = AttributesEnum.Samestate.index();
    public static final int SUMMARY = AttributesEnum.Summary.index();
    public static final int STATEATTR = AttributesEnum.Stateattr.index();
    public static final int CREATEDBYATTR = AttributesEnum.CreatedByAttr.index();
    public static final int LASTUPDATEDBYATTR = AttributesEnum.LastUpdatedByAttr.index();
    public static final int XWRLALERTNOTESVIEW = AttributesEnum.XwrlAlertNotesView.index();
    public static final int XWRLALERTDOCUMENTSVIEW = AttributesEnum.XwrlAlertDocumentsView.index();
    public static final int XWRLRESPONSEROWSVIEW = AttributesEnum.XwrlResponseRowsView.index();
    public static final int XWRLALERTNOTESXREFVIEW = AttributesEnum.XwrlAlertNotesXrefView.index();
    public static final int FNDUSERSALLLOV1 = AttributesEnum.FndUsersAllLov1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XwrlResponseIndColumnsViewRowImpl() {
    }

    /**
     * Gets XwrlResponseIndColumns entity object.
     * @return the XwrlResponseIndColumns
     */
    public XwrlResponseIndColumnsImpl getXwrlResponseIndColumns() {
        return (XwrlResponseIndColumnsImpl) getEntity(ENTITY_XWRLRESPONSEINDCOLUMNS);
    }

    /**
     * Gets the attribute value for LISTFULLNAME using the alias name Listfullname.
     * @return the LISTFULLNAME
     */
    public String getListfullname() {
        return (String) getAttributeInternal(LISTFULLNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTFULLNAME using the alias name Listfullname.
     * @param value value to set the LISTFULLNAME
     */
    public void setListfullname(String value) {
        setAttributeInternal(LISTFULLNAME, value);
    }

    /**
     * Gets the attribute value for LISTNAMETYPE using the alias name Listnametype.
     * @return the LISTNAMETYPE
     */
    public String getListnametype() {
        return (String) getAttributeInternal(LISTNAMETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTNAMETYPE using the alias name Listnametype.
     * @param value value to set the LISTNAMETYPE
     */
    public void setListnametype(String value) {
        setAttributeInternal(LISTNAMETYPE, value);
    }

    /**
     * Gets the attribute value for LISTFAMILYNAME using the alias name Listfamilyname.
     * @return the LISTFAMILYNAME
     */
    public String getListfamilyname() {
        return (String) getAttributeInternal(LISTFAMILYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTFAMILYNAME using the alias name Listfamilyname.
     * @param value value to set the LISTFAMILYNAME
     */
    public void setListfamilyname(String value) {
        setAttributeInternal(LISTFAMILYNAME, value);
    }

    /**
     * Gets the attribute value for LISTGIVENNAMES using the alias name Listgivennames.
     * @return the LISTGIVENNAMES
     */
    public String getListgivennames() {
        return (String) getAttributeInternal(LISTGIVENNAMES);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTGIVENNAMES using the alias name Listgivennames.
     * @param value value to set the LISTGIVENNAMES
     */
    public void setListgivennames(String value) {
        setAttributeInternal(LISTGIVENNAMES, value);
    }

    /**
     * Gets the attribute value for LISTDOB using the alias name Listdob.
     * @return the LISTDOB
     */
    public String getListdob() {
        return (String) getAttributeInternal(LISTDOB);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTDOB using the alias name Listdob.
     * @param value value to set the LISTDOB
     */
    public void setListdob(String value) {
        setAttributeInternal(LISTDOB, value);
    }

    /**
     * Gets the attribute value for DNYOB using the alias name Dnyob.
     * @return the DNYOB
     */
    public String getDnyob() {
        return (String) getAttributeInternal(DNYOB);
    }

    /**
     * Sets <code>value</code> as attribute value for DNYOB using the alias name Dnyob.
     * @param value value to set the DNYOB
     */
    public void setDnyob(String value) {
        setAttributeInternal(DNYOB, value);
    }

    /**
     * Gets the attribute value for DNGENDER using the alias name Dngender.
     * @return the DNGENDER
     */
    public String getDngender() {
        return (String) getAttributeInternal(DNGENDER);
    }

    /**
     * Sets <code>value</code> as attribute value for DNGENDER using the alias name Dngender.
     * @param value value to set the DNGENDER
     */
    public void setDngender(String value) {
        setAttributeInternal(DNGENDER, value);
    }

    /**
     * Gets the attribute value for DECEASEDFLAG using the alias name Deceasedflag.
     * @return the DECEASEDFLAG
     */
    public String getDeceasedflag() {
        return (String) getAttributeInternal(DECEASEDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for DECEASEDFLAG using the alias name Deceasedflag.
     * @param value value to set the DECEASEDFLAG
     */
    public void setDeceasedflag(String value) {
        setAttributeInternal(DECEASEDFLAG, value);
    }

    /**
     * Gets the attribute value for DECEASEDDATE using the alias name Deceaseddate.
     * @return the DECEASEDDATE
     */
    public String getDeceaseddate() {
        return (String) getAttributeInternal(DECEASEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DECEASEDDATE using the alias name Deceaseddate.
     * @param value value to set the DECEASEDDATE
     */
    public void setDeceaseddate(String value) {
        setAttributeInternal(DECEASEDDATE, value);
    }

    /**
     * Gets the attribute value for DNRESIDENCYCOUNTRYCODE using the alias name Dnresidencycountrycode.
     * @return the DNRESIDENCYCOUNTRYCODE
     */
    public String getDnresidencycountrycode() {
        return (String) getAttributeInternal(DNRESIDENCYCOUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for DNRESIDENCYCOUNTRYCODE using the alias name Dnresidencycountrycode.
     * @param value value to set the DNRESIDENCYCOUNTRYCODE
     */
    public void setDnresidencycountrycode(String value) {
        setAttributeInternal(DNRESIDENCYCOUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for LISTNATIONALITY using the alias name Listnationality.
     * @return the LISTNATIONALITY
     */
    public String getListnationality() {
        return (String) getAttributeInternal(LISTNATIONALITY);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTNATIONALITY using the alias name Listnationality.
     * @param value value to set the LISTNATIONALITY
     */
    public void setListnationality(String value) {
        setAttributeInternal(LISTNATIONALITY, value);
    }

    /**
     * Gets the attribute value for LISTCOUNTRY using the alias name Listcountry.
     * @return the LISTCOUNTRY
     */
    public String getListcountry() {
        return (String) getAttributeInternal(LISTCOUNTRY);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTCOUNTRY using the alias name Listcountry.
     * @param value value to set the LISTCOUNTRY
     */
    public void setListcountry(String value) {
        setAttributeInternal(LISTCOUNTRY, value);
    }

    /**
     * Gets the attribute value for LISTCITY using the alias name Listcity.
     * @return the LISTCITY
     */
    public String getListcity() {
        return (String) getAttributeInternal(LISTCITY);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTCITY using the alias name Listcity.
     * @param value value to set the LISTCITY
     */
    public void setListcity(String value) {
        setAttributeInternal(LISTCITY, value);
    }

    /**
     * Gets the attribute value for DNSTATE using the alias name Dnstate.
     * @return the DNSTATE
     */
    public String getDnstate() {
        return (String) getAttributeInternal(DNSTATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DNSTATE using the alias name Dnstate.
     * @param value value to set the DNSTATE
     */
    public void setDnstate(String value) {
        setAttributeInternal(DNSTATE, value);
    }

    /**
     * Gets the attribute value for LISTCOUNTRYOFBIRTH using the alias name Listcountryofbirth.
     * @return the LISTCOUNTRYOFBIRTH
     */
    public String getListcountryofbirth() {
        return (String) getAttributeInternal(LISTCOUNTRYOFBIRTH);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTCOUNTRYOFBIRTH using the alias name Listcountryofbirth.
     * @param value value to set the LISTCOUNTRYOFBIRTH
     */
    public void setListcountryofbirth(String value) {
        setAttributeInternal(LISTCOUNTRYOFBIRTH, value);
    }

    /**
     * Gets the attribute value for DNADDRESS using the alias name Dnaddress.
     * @return the DNADDRESS
     */
    public String getDnaddress() {
        return (String) getAttributeInternal(DNADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for DNADDRESS using the alias name Dnaddress.
     * @param value value to set the DNADDRESS
     */
    public void setDnaddress(String value) {
        setAttributeInternal(DNADDRESS, value);
    }

    /**
     * Gets the attribute value for DNTITLE using the alias name Dntitle.
     * @return the DNTITLE
     */
    public String getDntitle() {
        return (String) getAttributeInternal(DNTITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for DNTITLE using the alias name Dntitle.
     * @param value value to set the DNTITLE
     */
    public void setDntitle(String value) {
        setAttributeInternal(DNTITLE, value);
    }

    /**
     * Gets the attribute value for DNPASSPORTNUMBER using the alias name Dnpassportnumber.
     * @return the DNPASSPORTNUMBER
     */
    public String getDnpassportnumber() {
        return (String) getAttributeInternal(DNPASSPORTNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for DNPASSPORTNUMBER using the alias name Dnpassportnumber.
     * @param value value to set the DNPASSPORTNUMBER
     */
    public void setDnpassportnumber(String value) {
        setAttributeInternal(DNPASSPORTNUMBER, value);
    }

    /**
     * Gets the attribute value for DNNATIONALID using the alias name Dnnationalid.
     * @return the DNNATIONALID
     */
    public String getDnnationalid() {
        return (String) getAttributeInternal(DNNATIONALID);
    }

    /**
     * Sets <code>value</code> as attribute value for DNNATIONALID using the alias name Dnnationalid.
     * @param value value to set the DNNATIONALID
     */
    public void setDnnationalid(String value) {
        setAttributeInternal(DNNATIONALID, value);
    }

    /**
     * Gets the attribute value for CATEGORY using the alias name Category.
     * @return the CATEGORY
     */
    public String getCategory() {
        return (String) getAttributeInternal(CATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for CATEGORY using the alias name Category.
     * @param value value to set the CATEGORY
     */
    public void setCategory(String value) {
        setAttributeInternal(CATEGORY, value);
    }

    /**
     * Gets the attribute value for EXTERNALSOURCES using the alias name Externalsources.
     * @return the EXTERNALSOURCES
     */
    public String getExternalsources() {
        return (String) getAttributeInternal(EXTERNALSOURCES);
    }

    /**
     * Sets <code>value</code> as attribute value for EXTERNALSOURCES using the alias name Externalsources.
     * @param value value to set the EXTERNALSOURCES
     */
    public void setExternalsources(String value) {
        setAttributeInternal(EXTERNALSOURCES, value);
    }

    /**
     * Gets the attribute value for CACHEDEXTSOURCES using the alias name Cachedextsources.
     * @return the CACHEDEXTSOURCES
     */
    public String getCachedextsources() {
        return (String) getAttributeInternal(CACHEDEXTSOURCES);
    }

    /**
     * Sets <code>value</code> as attribute value for CACHEDEXTSOURCES using the alias name Cachedextsources.
     * @param value value to set the CACHEDEXTSOURCES
     */
    public void setCachedextsources(String value) {
        setAttributeInternal(CACHEDEXTSOURCES, value);
    }

    /**
     * Gets the attribute value for DNADDEDDATE using the alias name Dnaddeddate.
     * @return the DNADDEDDATE
     */
    public String getDnaddeddate() {
        return (String) getAttributeInternal(DNADDEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DNADDEDDATE using the alias name Dnaddeddate.
     * @param value value to set the DNADDEDDATE
     */
    public void setDnaddeddate(String value) {
        setAttributeInternal(DNADDEDDATE, value);
    }

    /**
     * Gets the attribute value for DNLASTUPDATEDDATE using the alias name Dnlastupdateddate.
     * @return the DNLASTUPDATEDDATE
     */
    public String getDnlastupdateddate() {
        return (String) getAttributeInternal(DNLASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DNLASTUPDATEDDATE using the alias name Dnlastupdateddate.
     * @param value value to set the DNLASTUPDATEDDATE
     */
    public void setDnlastupdateddate(String value) {
        setAttributeInternal(DNLASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for MATCHSCORE using the alias name Matchscore.
     * @return the MATCHSCORE
     */
    public String getMatchscore() {
        return (String) getAttributeInternal(MATCHSCORE);
    }

    /**
     * Sets <code>value</code> as attribute value for MATCHSCORE using the alias name Matchscore.
     * @param value value to set the MATCHSCORE
     */
    public void setMatchscore(String value) {
        setAttributeInternal(MATCHSCORE, value);
    }

    /**
     * Gets the attribute value for LISTID using the alias name Listid.
     * @return the LISTID
     */
    public String getListid() {
        return (String) getAttributeInternal(LISTID);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTID using the alias name Listid.
     * @param value value to set the LISTID
     */
    public void setListid(String value) {
        setAttributeInternal(LISTID, value);
    }

    /**
     * Gets the attribute value for LISTKEY using the alias name Listkey.
     * @return the LISTKEY
     */
    public String getListkey() {
        return (String) getAttributeInternal(LISTKEY);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTKEY using the alias name Listkey.
     * @param value value to set the LISTKEY
     */
    public void setListkey(String value) {
        setAttributeInternal(LISTKEY, value);
    }

    /**
     * Gets the attribute value for LISTSUBKEY using the alias name Listsubkey.
     * @return the LISTSUBKEY
     */
    public String getListsubkey() {
        return (String) getAttributeInternal(LISTSUBKEY);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTSUBKEY using the alias name Listsubkey.
     * @param value value to set the LISTSUBKEY
     */
    public void setListsubkey(String value) {
        setAttributeInternal(LISTSUBKEY, value);
    }

    /**
     * Gets the attribute value for LISTRECORDTYPE using the alias name Listrecordtype.
     * @return the LISTRECORDTYPE
     */
    public String getListrecordtype() {
        return (String) getAttributeInternal(LISTRECORDTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTRECORDTYPE using the alias name Listrecordtype.
     * @param value value to set the LISTRECORDTYPE
     */
    public void setListrecordtype(String value) {
        setAttributeInternal(LISTRECORDTYPE, value);
    }

    /**
     * Gets the attribute value for LISTPRIMARYNAME using the alias name Listprimaryname.
     * @return the LISTPRIMARYNAME
     */
    public String getListprimaryname() {
        return (String) getAttributeInternal(LISTPRIMARYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTPRIMARYNAME using the alias name Listprimaryname.
     * @param value value to set the LISTPRIMARYNAME
     */
    public void setListprimaryname(String value) {
        setAttributeInternal(LISTPRIMARYNAME, value);
    }

    /**
     * Gets the attribute value for LISTORIGINALSCRIPTNAME using the alias name Listoriginalscriptname.
     * @return the LISTORIGINALSCRIPTNAME
     */
    public String getListoriginalscriptname() {
        return (String) getAttributeInternal(LISTORIGINALSCRIPTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTORIGINALSCRIPTNAME using the alias name Listoriginalscriptname.
     * @param value value to set the LISTORIGINALSCRIPTNAME
     */
    public void setListoriginalscriptname(String value) {
        setAttributeInternal(LISTORIGINALSCRIPTNAME, value);
    }

    /**
     * Gets the attribute value for MATCHRULE using the alias name Matchrule.
     * @return the MATCHRULE
     */
    public String getMatchrule() {
        return (String) getAttributeInternal(MATCHRULE);
    }

    /**
     * Sets <code>value</code> as attribute value for MATCHRULE using the alias name Matchrule.
     * @param value value to set the MATCHRULE
     */
    public void setMatchrule(String value) {
        setAttributeInternal(MATCHRULE, value);
    }

    /**
     * Gets the attribute value for CASEKEY using the alias name Casekey.
     * @return the CASEKEY
     */
    public String getCasekey() {
        return (String) getAttributeInternal(CASEKEY);
    }

    /**
     * Sets <code>value</code> as attribute value for CASEKEY using the alias name Casekey.
     * @param value value to set the CASEKEY
     */
    public void setCasekey(String value) {
        setAttributeInternal(CASEKEY, value);
    }

    /**
     * Gets the attribute value for ALERTID using the alias name Alertid.
     * @return the ALERTID
     */
    public String getAlertid() {
        return (String) getAttributeInternal(ALERTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ALERTID using the alias name Alertid.
     * @param value value to set the ALERTID
     */
    public void setAlertid(String value) {
        setAttributeInternal(ALERTID, value);
    }

    /**
     * Gets the attribute value for RISKSCORE using the alias name Riskscore.
     * @return the RISKSCORE
     */
    public String getRiskscore() {
        return (String) getAttributeInternal(RISKSCORE);
    }

    /**
     * Sets <code>value</code> as attribute value for RISKSCORE using the alias name Riskscore.
     * @param value value to set the RISKSCORE
     */
    public void setRiskscore(String value) {
        setAttributeInternal(RISKSCORE, value);
    }

    /**
     * Gets the attribute value for RISKSCOREPEP using the alias name Riskscorepep.
     * @return the RISKSCOREPEP
     */
    public String getRiskscorepep() {
        return (String) getAttributeInternal(RISKSCOREPEP);
    }

    /**
     * Sets <code>value</code> as attribute value for RISKSCOREPEP using the alias name Riskscorepep.
     * @param value value to set the RISKSCOREPEP
     */
    public void setRiskscorepep(String value) {
        setAttributeInternal(RISKSCOREPEP, value);
    }

    /**
     * Gets the attribute value for DNOCCUPATION using the alias name Dnoccupation.
     * @return the DNOCCUPATION
     */
    public String getDnoccupation() {
        return (String) getAttributeInternal(DNOCCUPATION);
    }

    /**
     * Sets <code>value</code> as attribute value for DNOCCUPATION using the alias name Dnoccupation.
     * @param value value to set the DNOCCUPATION
     */
    public void setDnoccupation(String value) {
        setAttributeInternal(DNOCCUPATION, value);
    }

    /**
     * Gets the attribute value for DNCITY using the alias name Dncity.
     * @return the DNCITY
     */
    public String getDncity() {
        return (String) getAttributeInternal(DNCITY);
    }

    /**
     * Sets <code>value</code> as attribute value for DNCITY using the alias name Dncity.
     * @param value value to set the DNCITY
     */
    public void setDncity(String value) {
        setAttributeInternal(DNCITY, value);
    }

    /**
     * Gets the attribute value for DNPOSTALCODE using the alias name Dnpostalcode.
     * @return the DNPOSTALCODE
     */
    public String getDnpostalcode() {
        return (String) getAttributeInternal(DNPOSTALCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for DNPOSTALCODE using the alias name Dnpostalcode.
     * @param value value to set the DNPOSTALCODE
     */
    public void setDnpostalcode(String value) {
        setAttributeInternal(DNPOSTALCODE, value);
    }

    /**
     * Gets the attribute value for DNADDRESSCOUNTRYCODE using the alias name Dnaddresscountrycode.
     * @return the DNADDRESSCOUNTRYCODE
     */
    public String getDnaddresscountrycode() {
        return (String) getAttributeInternal(DNADDRESSCOUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for DNADDRESSCOUNTRYCODE using the alias name Dnaddresscountrycode.
     * @param value value to set the DNADDRESSCOUNTRYCODE
     */
    public void setDnaddresscountrycode(String value) {
        setAttributeInternal(DNADDRESSCOUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for DNNATIONALITYCOUNTRYCODES using the alias name Dnnationalitycountrycodes.
     * @return the DNNATIONALITYCOUNTRYCODES
     */
    public String getDnnationalitycountrycodes() {
        return (String) getAttributeInternal(DNNATIONALITYCOUNTRYCODES);
    }

    /**
     * Sets <code>value</code> as attribute value for DNNATIONALITYCOUNTRYCODES using the alias name Dnnationalitycountrycodes.
     * @param value value to set the DNNATIONALITYCOUNTRYCODES
     */
    public void setDnnationalitycountrycodes(String value) {
        setAttributeInternal(DNNATIONALITYCOUNTRYCODES, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Long getCreatedBy() {
        return (Long) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Long value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for DNCOUNTRYOFBIRTHCODE using the alias name Dncountryofbirthcode.
     * @return the DNCOUNTRYOFBIRTHCODE
     */
    public String getDncountryofbirthcode() {
        return (String) getAttributeInternal(DNCOUNTRYOFBIRTHCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for DNCOUNTRYOFBIRTHCODE using the alias name Dncountryofbirthcode.
     * @param value value to set the DNCOUNTRYOFBIRTHCODE
     */
    public void setDncountryofbirthcode(String value) {
        setAttributeInternal(DNCOUNTRYOFBIRTHCODE, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public Long getLastUpdateLogin() {
        return (Long) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(Long value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Long getLastUpdatedBy() {
        return (Long) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Long value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LISTRECORDORIGIN using the alias name Listrecordorigin.
     * @return the LISTRECORDORIGIN
     */
    public String getListrecordorigin() {
        return (String) getAttributeInternal(LISTRECORDORIGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTRECORDORIGIN using the alias name Listrecordorigin.
     * @param value value to set the LISTRECORDORIGIN
     */
    public void setListrecordorigin(String value) {
        setAttributeInternal(LISTRECORDORIGIN, value);
    }

    /**
     * Gets the attribute value for REC using the alias name Rec.
     * @return the REC
     */
    public BigDecimal getRec() {
        return (BigDecimal) getAttributeInternal(REC);
    }

    /**
     * Sets <code>value</code> as attribute value for REC using the alias name Rec.
     * @param value value to set the REC
     */
    public void setRec(BigDecimal value) {
        setAttributeInternal(REC, value);
    }

    /**
     * Gets the attribute value for REQUEST_ID using the alias name RequestId.
     * @return the REQUEST_ID
     */
    public BigDecimal getRequestId() {
        return (BigDecimal) getAttributeInternal(REQUESTID);
    }

    /**
     * Sets <code>value</code> as attribute value for REQUEST_ID using the alias name RequestId.
     * @param value value to set the REQUEST_ID
     */
    public void setRequestId(BigDecimal value) {
        setAttributeInternal(REQUESTID, value);
    }

    /**
     * Gets the attribute value for X_STATE using the alias name XState.
     * @return the X_STATE
     */
    public String getXState() {
        return (String) getAttributeInternal(XSTATE);
    }

    /**
     * Sets <code>value</code> as attribute value for X_STATE using the alias name XState.
     * @param value value to set the X_STATE
     */
    public void setXState(String value) {
        setAttributeInternal(XSTATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreatedByAttr.
     * @return the CreatedByAttr
     
    public String getCreatedByAttr() {
        return (String) getAttributeInternal(CREATEDBYATTR);
    }
*/
    /**
     * Gets the attribute value for the calculated attribute LastUpdatedByAttr.
     * @return the LastUpdatedByAttr

    public String getLastUpdatedByAttr() {
        return (String) getAttributeInternal(LASTUPDATEDBYATTR);
    }
*/

    /**
     * Gets the attribute value for LEGAL_REVIEW using the alias name LegalReview.
     * @return the LEGAL_REVIEW
     */
    public String getLegalReview() {
        return (String) getAttributeInternal(LEGALREVIEW);
    }

    /**
     * Sets <code>value</code> as attribute value for LEGAL_REVIEW using the alias name LegalReview.
     * @param value value to set the LEGAL_REVIEW
     */
    public void setLegalReview(String value) {
        setAttributeInternal(LEGALREVIEW, value);
    }
    
    /**
         * Gets the attribute value for LEGAL_REVIEW_ATTR using the alias name LegalReviewAttr.
         * @return the LEGAL_REVIEW_ATTR
         */
        public String getLegalReviewAttr() {
            return (String) getAttributeInternal(LEGALREVIEWATTR);
        }


    /**
     * Gets the attribute value for Summary using the alias name Summary.
     * @return the Summary
     */
    public String getSummary() {
        return (String) getAttributeInternal(SUMMARY);
    }

    /**
     * Sets <code>value</code> as attribute value for Summary using the alias name Summary.
     * @param value value to set the Summary
     */
    public void setSummary(String value) {
        setAttributeInternal(SUMMARY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Stateattr.
     * @return the Stateattr
     */
    public String getStateattr() {
        return (String) getAttributeInternal(STATEATTR);
    }
    
    public String getOwsAlertState() {
        return (String) getAttributeInternal(OWSALERTSTATE);
    }
    
    public String getSamestate() {
        return (String) getAttributeInternal(SAMESTATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Samestate.
     * @param value value to set the  Samestate
     */
    public void setSamestate(String value) {
        setAttributeInternal(SAMESTATE, value);
    }

    public String getCreatedByAttr() {
        //return (String) getAttributeInternal(CREATEDBYATTR);
        Long key = (Long) getAttributeInternal(CREATEDBY);
        //LOGGER.finest("Key: " + key);
        String value = null;

        if (key != null) {
            Row[] rows;
            rows = this.getFndUsersAllLov1().getFilteredRows("UserId", key);
            if (rows.length > 0) {
                value = (String) rows[0].getAttribute("Description");
            }
        }
        
        //LOGGER.finest("Value: " + value);
        
        return value;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreatedByAttr.
     * @param value value to set the  CreatedByAttr
     */
    public void setCreatedByAttr(String value) {
        setAttributeInternal(CREATEDBYATTR, value);
    }

    public String getLastUpdatedByAttr() {
        //return (String) getAttributeInternal(LASTUPDATEDBYATTR);
        Long key = (Long) getAttributeInternal(LASTUPDATEDBY);
        //LOGGER.finest("Key: " + key);
        String value = null;

        if (key != null) {
            Row[] rows;
            rows = this.getFndUsersAllLov1().getFilteredRows("UserId", key);
            if (rows.length > 0) {
                value = (String) rows[0].getAttribute("Description");
            }
        }
        
        //LOGGER.finest("Value: " + value);
        
        return value;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdatedByAttr.
     * @param value value to set the  LastUpdatedByAttr
     */
    public void setLastUpdatedByAttr(String value) {
        setAttributeInternal(LASTUPDATEDBYATTR, value);
    }

    /**
     * Gets the attribute value for CORPORATE_REVIEW using the alias name CorporateReview.
     * @return the CORPORATE_REVIEW
     */
    public String getCorporateReview() {
        return (String) getAttributeInternal(CORPORATEREVIEW);
    }

    /**
     * Sets <code>value</code> as attribute value for CORPORATE_REVIEW using the alias name CorporateReview.
     * @param value value to set the CORPORATE_REVIEW
     */
    public void setCorporateReview(String value) {
        setAttributeInternal(CORPORATEREVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlResponseRowsView.
     */
    public RowIterator getXwrlResponseRowsView() {
        return (RowIterator) getAttributeInternal(XWRLRESPONSEROWSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlAlertNotesView.
     */
    public RowIterator getXwrlAlertNotesView() {
        return (RowIterator) getAttributeInternal(XWRLALERTNOTESVIEW);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlAlertDocumentsView.
     */
    public RowIterator getXwrlAlertDocumentsView() {
        return (RowIterator) getAttributeInternal(XWRLALERTDOCUMENTSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XwrlAlertNotesXrefView.
     */
    public RowIterator getXwrlAlertNotesXrefView() {
        return (RowIterator) getAttributeInternal(XWRLALERTNOTESXREFVIEW);
    }


    /**
     * Gets the view accessor <code>RowSet</code> FndUsersAllLov1.
     */
    public RowSet getFndUsersAllLov1() {
        return (RowSet) getAttributeInternal(FNDUSERSALLLOV1);
    }

   

}

