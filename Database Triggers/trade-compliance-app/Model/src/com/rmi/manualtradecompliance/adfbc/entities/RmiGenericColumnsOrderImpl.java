package com.rmi.manualtradecompliance.adfbc.entities;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Mar 11 17:27:16 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RmiGenericColumnsOrderImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(RmiGenericColumnsOrderImpl obj) {
                return obj.getId();
            }

            public void put(RmiGenericColumnsOrderImpl obj, Object value) {
                obj.setId((BigDecimal) value);
            }
        }
        ,
        UserId {
            public Object get(RmiGenericColumnsOrderImpl obj) {
                return obj.getUserId();
            }

            public void put(RmiGenericColumnsOrderImpl obj, Object value) {
                obj.setUserId((Long) value);
            }
        }
        ,
        ColumnsOrder {
            public Object get(RmiGenericColumnsOrderImpl obj) {
                return obj.getColumnsOrder();
            }

            public void put(RmiGenericColumnsOrderImpl obj, Object value) {
                obj.setColumnsOrder((String) value);
            }
        }
        ,
        CreatedBy {
            public Object get(RmiGenericColumnsOrderImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(RmiGenericColumnsOrderImpl obj, Object value) {
                obj.setCreatedBy((Long) value);
            }
        }
        ,
        IsDefault {
            public Object get(RmiGenericColumnsOrderImpl obj) {
                return obj.getIsDefault();
            }

            public void put(RmiGenericColumnsOrderImpl obj, Object value) {
                obj.setIsDefault((String) value);
            }
        }
        ,
        CreationDate {
            public Object get(RmiGenericColumnsOrderImpl obj) {
                return obj.getCreationDate();
            }

            public void put(RmiGenericColumnsOrderImpl obj, Object value) {
                obj.setCreationDate((Timestamp) value);
            }
        }
        ,
        OrderName {
            public Object get(RmiGenericColumnsOrderImpl obj) {
                return obj.getOrderName();
            }

            public void put(RmiGenericColumnsOrderImpl obj, Object value) {
                obj.setOrderName((String) value);
            }
        }
        ,
        IsDeleted {
            public Object get(RmiGenericColumnsOrderImpl obj) {
                return obj.getIsDeleted();
            }

            public void put(RmiGenericColumnsOrderImpl obj, Object value) {
                obj.setIsDeleted((String) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(RmiGenericColumnsOrderImpl object);

        public abstract void put(RmiGenericColumnsOrderImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int COLUMNSORDER = AttributesEnum.ColumnsOrder.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int ISDEFAULT = AttributesEnum.IsDefault.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int ORDERNAME = AttributesEnum.OrderName.index();
    public static final int ISDELETED = AttributesEnum.IsDeleted.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RmiGenericColumnsOrderImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.rmi.manualtradecompliance.adfbc.entities.RmiGenericColumnsOrder");
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for UserId, using the alias name UserId.
     * @return the value of UserId
     */
    public Long getUserId() {
        return (Long) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserId.
     * @param value value to set the UserId
     */
    public void setUserId(Long value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for ColumnsOrder, using the alias name ColumnsOrder.
     * @return the value of ColumnsOrder
     */
    public String getColumnsOrder() {
        return (String) getAttributeInternal(COLUMNSORDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ColumnsOrder.
     * @param value value to set the ColumnsOrder
     */
    public void setColumnsOrder(String value) {
        setAttributeInternal(COLUMNSORDER, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Long getCreatedBy() {
        return (Long) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Long value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for IsDefault, using the alias name IsDefault.
     * @return the value of IsDefault
     */
    public String getIsDefault() {
        return (String) getAttributeInternal(ISDEFAULT);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsDefault.
     * @param value value to set the IsDefault
     */
    public void setIsDefault(String value) {
        setAttributeInternal(ISDEFAULT, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for OrderName, using the alias name OrderName.
     * @return the value of OrderName
     */
    public String getOrderName() {
        return (String) getAttributeInternal(ORDERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrderName.
     * @param value value to set the OrderName
     */
    public void setOrderName(String value) {
        setAttributeInternal(ORDERNAME, value);
    }

    /**
     * Gets the attribute value for IsDeleted, using the alias name IsDeleted.
     * @return the value of IsDeleted
     */
    public String getIsDeleted() {
        return (String) getAttributeInternal(ISDELETED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsDeleted.
     * @param value value to set the IsDeleted
     */
    public void setIsDeleted(String value) {
        setAttributeInternal(ISDELETED, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
        try {
            BigDecimal id = nextVal("rmi_generic_columns_order_seq").bigDecimalValue();
            this.setId(id);
            
            Integer userId = (Integer) ADFContext.getCurrent().getSessionScope().get("UserId");
            
            Timestamp time = new Timestamp(System.currentTimeMillis());

            if (userId != null) {
                this.setCreatedBy(Long.valueOf(userId));
                this.setUserId(Long.valueOf(userId));
            }
            this.setCreationDate(time);
            
            
        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
    }
    
    protected oracle.jbo.domain.Number nextVal(String sequenceName) {
        SequenceImpl s = new SequenceImpl(sequenceName, getDBTransaction());
        return s.getSequenceNumber();
    }
}

