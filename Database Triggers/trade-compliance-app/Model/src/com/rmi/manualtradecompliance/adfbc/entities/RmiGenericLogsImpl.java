package com.rmi.manualtradecompliance.adfbc.entities;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 09 16:03:54 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RmiGenericLogsImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        LogId {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getLogId();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setLogId((BigDecimal) value);
            }
        }
        ,
        Type {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getType();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setType((String) value);
            }
        }
        ,
        Title {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getTitle();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setTitle((String) value);
            }
        }
        ,
        Message {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getMessage();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setMessage((String) value);
            }
        }
        ,
        DetailedMessage {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getDetailedMessage();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setDetailedMessage((ClobDomain) value);
            }
        }
        ,
        ClassName {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getClassName();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setClassName((String) value);
            }
        }
        ,
        MethodName {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getMethodName();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setMethodName((String) value);
            }
        }
        ,
        CreatedBy {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setCreatedBy((Long) value);
            }
        }
        ,
        CreationDate {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getCreationDate();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setCreationDate((Timestamp) value);
            }
        }
        ,
        SourceId {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getSourceId();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setSourceId((BigDecimal) value);
            }
        }
        ,
        SourceTable {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getSourceTable();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setSourceTable((String) value);
            }
        }
        ,
        SourceTableColumn {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getSourceTableColumn();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setSourceTableColumn((String) value);
            }
        }
        ,
        SourceType {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getSourceType();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setSourceType((String) value);
            }
        }
        ,
        Param1 {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getParam1();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setParam1((String) value);
            }
        }
        ,
        Param2 {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getParam2();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setParam2((String) value);
            }
        }
        ,
        Param3 {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getParam3();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setParam3((String) value);
            }
        }
        ,
        Param4 {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getParam4();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setParam4((String) value);
            }
        }
        ,
        Param5 {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getParam5();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setParam5((String) value);
            }
        }
        ,
        Attribute1 {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getAttribute1();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setAttribute1((String) value);
            }
        }
        ,
        Attribute2 {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getAttribute2();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setAttribute2((String) value);
            }
        }
        ,
        Attribute3 {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getAttribute3();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setAttribute3((String) value);
            }
        }
        ,
        Attribute4 {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getAttribute4();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setAttribute4((String) value);
            }
        }
        ,
        Attribute5 {
            public Object get(RmiGenericLogsImpl obj) {
                return obj.getAttribute5();
            }

            public void put(RmiGenericLogsImpl obj, Object value) {
                obj.setAttribute5((String) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(RmiGenericLogsImpl object);

        public abstract void put(RmiGenericLogsImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LOGID = AttributesEnum.LogId.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int MESSAGE = AttributesEnum.Message.index();
    public static final int DETAILEDMESSAGE = AttributesEnum.DetailedMessage.index();
    public static final int CLASSNAME = AttributesEnum.ClassName.index();
    public static final int METHODNAME = AttributesEnum.MethodName.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int SOURCEID = AttributesEnum.SourceId.index();
    public static final int SOURCETABLE = AttributesEnum.SourceTable.index();
    public static final int SOURCETABLECOLUMN = AttributesEnum.SourceTableColumn.index();
    public static final int SOURCETYPE = AttributesEnum.SourceType.index();
    public static final int PARAM1 = AttributesEnum.Param1.index();
    public static final int PARAM2 = AttributesEnum.Param2.index();
    public static final int PARAM3 = AttributesEnum.Param3.index();
    public static final int PARAM4 = AttributesEnum.Param4.index();
    public static final int PARAM5 = AttributesEnum.Param5.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RmiGenericLogsImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.rmi.manualtradecompliance.adfbc.entities.RmiGenericLogs");
    }

    /**
     * Gets the attribute value for LogId, using the alias name LogId.
     * @return the value of LogId
     */
    public BigDecimal getLogId() {
        return (BigDecimal) getAttributeInternal(LOGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LogId.
     * @param value value to set the LogId
     */
    public void setLogId(BigDecimal value) {
        setAttributeInternal(LOGID, value);
    }

    /**
     * Gets the attribute value for Type, using the alias name Type.
     * @return the value of Type
     */
    public String getType() {
        return (String) getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Type.
     * @param value value to set the Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * Gets the attribute value for Title, using the alias name Title.
     * @return the value of Title
     */
    public String getTitle() {
        return (String) getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Title.
     * @param value value to set the Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for Message, using the alias name Message.
     * @return the value of Message
     */
    public String getMessage() {
        return (String) getAttributeInternal(MESSAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Message.
     * @param value value to set the Message
     */
    public void setMessage(String value) {
        setAttributeInternal(MESSAGE, value);
    }

    /**
     * Gets the attribute value for DetailedMessage, using the alias name DetailedMessage.
     * @return the value of DetailedMessage
     */
    public ClobDomain getDetailedMessage() {
        return (ClobDomain) getAttributeInternal(DETAILEDMESSAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DetailedMessage.
     * @param value value to set the DetailedMessage
     */
    public void setDetailedMessage(ClobDomain value) {
        setAttributeInternal(DETAILEDMESSAGE, value);
    }

    /**
     * Gets the attribute value for ClassName, using the alias name ClassName.
     * @return the value of ClassName
     */
    public String getClassName() {
        return (String) getAttributeInternal(CLASSNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClassName.
     * @param value value to set the ClassName
     */
    public void setClassName(String value) {
        setAttributeInternal(CLASSNAME, value);
    }

    /**
     * Gets the attribute value for MethodName, using the alias name MethodName.
     * @return the value of MethodName
     */
    public String getMethodName() {
        return (String) getAttributeInternal(METHODNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for MethodName.
     * @param value value to set the MethodName
     */
    public void setMethodName(String value) {
        setAttributeInternal(METHODNAME, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Long getCreatedBy() {
        return (Long) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Long value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for SourceId, using the alias name SourceId.
     * @return the value of SourceId
     */
    public BigDecimal getSourceId() {
        return (BigDecimal) getAttributeInternal(SOURCEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceId.
     * @param value value to set the SourceId
     */
    public void setSourceId(BigDecimal value) {
        setAttributeInternal(SOURCEID, value);
    }

    /**
     * Gets the attribute value for SourceTable, using the alias name SourceTable.
     * @return the value of SourceTable
     */
    public String getSourceTable() {
        return (String) getAttributeInternal(SOURCETABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceTable.
     * @param value value to set the SourceTable
     */
    public void setSourceTable(String value) {
        setAttributeInternal(SOURCETABLE, value);
    }

    /**
     * Gets the attribute value for SourceTableColumn, using the alias name SourceTableColumn.
     * @return the value of SourceTableColumn
     */
    public String getSourceTableColumn() {
        return (String) getAttributeInternal(SOURCETABLECOLUMN);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceTableColumn.
     * @param value value to set the SourceTableColumn
     */
    public void setSourceTableColumn(String value) {
        setAttributeInternal(SOURCETABLECOLUMN, value);
    }

    /**
     * Gets the attribute value for SourceType, using the alias name SourceType.
     * @return the value of SourceType
     */
    public String getSourceType() {
        return (String) getAttributeInternal(SOURCETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceType.
     * @param value value to set the SourceType
     */
    public void setSourceType(String value) {
        setAttributeInternal(SOURCETYPE, value);
    }

    /**
     * Gets the attribute value for Param1, using the alias name Param1.
     * @return the value of Param1
     */
    public String getParam1() {
        return (String) getAttributeInternal(PARAM1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Param1.
     * @param value value to set the Param1
     */
    public void setParam1(String value) {
        setAttributeInternal(PARAM1, value);
    }

    /**
     * Gets the attribute value for Param2, using the alias name Param2.
     * @return the value of Param2
     */
    public String getParam2() {
        return (String) getAttributeInternal(PARAM2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Param2.
     * @param value value to set the Param2
     */
    public void setParam2(String value) {
        setAttributeInternal(PARAM2, value);
    }

    /**
     * Gets the attribute value for Param3, using the alias name Param3.
     * @return the value of Param3
     */
    public String getParam3() {
        return (String) getAttributeInternal(PARAM3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Param3.
     * @param value value to set the Param3
     */
    public void setParam3(String value) {
        setAttributeInternal(PARAM3, value);
    }

    /**
     * Gets the attribute value for Param4, using the alias name Param4.
     * @return the value of Param4
     */
    public String getParam4() {
        return (String) getAttributeInternal(PARAM4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Param4.
     * @param value value to set the Param4
     */
    public void setParam4(String value) {
        setAttributeInternal(PARAM4, value);
    }

    /**
     * Gets the attribute value for Param5, using the alias name Param5.
     * @return the value of Param5
     */
    public String getParam5() {
        return (String) getAttributeInternal(PARAM5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Param5.
     * @param value value to set the Param5
     */
    public void setParam5(String value) {
        setAttributeInternal(PARAM5, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the value of Attribute1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the value of Attribute2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the value of Attribute3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the value of Attribute4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the value of Attribute5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param logId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal logId) {
        return new Key(new Object[] { logId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
        try {
            BigDecimal id = nextVal("RMI_GENERIC_LOG_ID_SEQ").bigDecimalValue();
            this.setLogId(id);
            
            Integer userId = (Integer) ADFContext.getCurrent().getSessionScope().get("UserId");
            
            Timestamp time = new Timestamp(System.currentTimeMillis());

            if (userId != null) {
                this.setCreatedBy(Long.valueOf(userId));
            }
            this.setCreationDate(time);
            
        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
    }
    
    protected oracle.jbo.domain.Number nextVal(String sequenceName) {
        SequenceImpl s = new SequenceImpl(sequenceName, getDBTransaction());
        return s.getSequenceNumber();
    }
}

